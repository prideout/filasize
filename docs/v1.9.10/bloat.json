var kTree = {
  "data": {
    "$area": 752964, 
    "$dominant_symbol": ""
  }, 
  "name": "[everything] 753.0k", 
  "children": [
    {
      "data": {
        "$area": 420622, 
        "$dominant_symbol": "code"
      }, 
      "name": "filament 420.6k", 
      "children": [
        {
          "data": {
            "$area": 31744, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "backend 31.7k", 
          "children": [
            {
              "data": {
                "$area": 15412, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "ConcreteDispatcher<filament::OpenGLDriver> 15.4k", 
              "children": [
                {
                  "data": {
                    "$area": 1856, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "ConcreteDispatcher() 1.9k"
                }, 
                {
                  "data": {
                    "$area": 644, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createTextureSwizzled(filament::backend::Driver&, filament::backend::CommandBase*, long*) 644"
                }, 
                {
                  "data": {
                    "$area": 628, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setRenderPrimitiveBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 628"
                }, 
                {
                  "data": {
                    "$area": 580, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "readPixels(filament::backend::Driver&, filament::backend::CommandBase*, long*) 580"
                }, 
                {
                  "data": {
                    "$area": 512, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "readStreamPixels(filament::backend::Driver&, filament::backend::CommandBase*, long*) 512"
                }, 
                {
                  "data": {
                    "$area": 508, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createTexture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 508"
                }, 
                {
                  "data": {
                    "$area": 496, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "beginRenderPass(filament::backend::Driver&, filament::backend::CommandBase*, long*) 496"
                }, 
                {
                  "data": {
                    "$area": 496, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "draw(filament::backend::Driver&, filament::backend::CommandBase*, long*) 496"
                }, 
                {
                  "data": {
                    "$area": 452, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createVertexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 452"
                }, 
                {
                  "data": {
                    "$area": 400, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyRenderTarget(filament::backend::Driver&, filament::backend::CommandBase*, long*) 400"
                }, 
                {
                  "data": {
                    "$area": 388, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "blit(filament::backend::Driver&, filament::backend::CommandBase*, long*) 388"
                }, 
                {
                  "data": {
                    "$area": 340, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createSync(filament::backend::Driver&, filament::backend::CommandBase*, long*) 340"
                }, 
                {
                  "data": {
                    "$area": 336, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setExternalImage(filament::backend::Driver&, filament::backend::CommandBase*, long*) 336"
                }, 
                {
                  "data": {
                    "$area": 332, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyStream(filament::backend::Driver&, filament::backend::CommandBase*, long*) 332"
                }, 
                {
                  "data": {
                    "$area": 324, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "importTexture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 324"
                }, 
                {
                  "data": {
                    "$area": 296, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyTexture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 296"
                }, 
                {
                  "data": {
                    "$area": 288, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "generateMipmaps(filament::backend::Driver&, filament::backend::CommandBase*, long*) 288"
                }, 
                {
                  "data": {
                    "$area": 260, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createIndexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 260"
                }, 
                {
                  "data": {
                    "$area": 248, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createDefaultRenderTarget(filament::backend::Driver&, filament::backend::CommandBase*, long*) 248"
                }, 
                {
                  "data": {
                    "$area": 240, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "endRenderPass(filament::backend::Driver&, filament::backend::CommandBase*, long*) 240"
                }, 
                {
                  "data": {
                    "$area": 236, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "updateIndexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 236"
                }, 
                {
                  "data": {
                    "$area": 232, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "updateCubeImage(filament::backend::Driver&, filament::backend::CommandBase*, long*) 232"
                }, 
                {
                  "data": {
                    "$area": 228, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "endTimerQuery(filament::backend::Driver&, filament::backend::CommandBase*, long*) 228"
                }, 
                {
                  "data": {
                    "$area": 216, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyTimerQuery(filament::backend::Driver&, filament::backend::CommandBase*, long*) 216"
                }, 
                {
                  "data": {
                    "$area": 212, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroySync(filament::backend::Driver&, filament::backend::CommandBase*, long*) 212"
                }, 
                {
                  "data": {
                    "$area": 204, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "beginFrame(filament::backend::Driver&, filament::backend::CommandBase*, long*) 204"
                }, 
                {
                  "data": {
                    "$area": 184, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "update2DImage(filament::backend::Driver&, filament::backend::CommandBase*, long*) 184"
                }, 
                {
                  "data": {
                    "$area": 184, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "updateVertexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 184"
                }, 
                {
                  "data": {
                    "$area": 176, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createUniformBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 176"
                }, 
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "bindUniformBufferRange(filament::backend::Driver&, filament::backend::CommandBase*, long*) 172"
                }, 
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "loadUniformBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 172"
                }, 
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "update3DImage(filament::backend::Driver&, filament::backend::CommandBase*, long*) 172"
                }, 
                {
                  "data": {
                    "$area": 168, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createStreamFromTextureId(filament::backend::Driver&, filament::backend::CommandBase*, long*) 168"
                }, 
                {
                  "data": {
                    "$area": 160, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "bindUniformBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 160"
                }, 
                {
                  "data": {
                    "$area": 156, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyUniformBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 156"
                }, 
                {
                  "data": {
                    "$area": 156, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyVertexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 156"
                }, 
                {
                  "data": {
                    "$area": 156, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroySwapChain(filament::backend::Driver&, filament::backend::CommandBase*, long*) 156"
                }, 
                {
                  "data": {
                    "$area": 156, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyIndexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 156"
                }, 
                {
                  "data": {
                    "$area": 152, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroySamplerGroup(filament::backend::Driver&, filament::backend::CommandBase*, long*) 152"
                }, 
                {
                  "data": {
                    "$area": 152, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyRenderPrimitive(filament::backend::Driver&, filament::backend::CommandBase*, long*) 152"
                }, 
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyProgram(filament::backend::Driver&, filament::backend::CommandBase*, long*) 144"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createSamplerGroup(filament::backend::Driver&, filament::backend::CommandBase*, long*) 128"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "pushGroupMarker(filament::backend::Driver&, filament::backend::CommandBase*, long*) 128"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setExternalStream(filament::backend::Driver&, filament::backend::CommandBase*, long*) 128"
                }, 
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createProgram(filament::backend::Driver&, filament::backend::CommandBase*, long*) 116"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createSwapChainHeadless(filament::backend::Driver&, filament::backend::CommandBase*, long*) 112"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createSwapChain(filament::backend::Driver&, filament::backend::CommandBase*, long*) 112"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "popGroupMarker(filament::backend::Driver&, filament::backend::CommandBase*, long*) 112"
                }, 
                {
                  "data": {
                    "$area": 108, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setRenderPrimitiveRange(filament::backend::Driver&, filament::backend::CommandBase*, long*) 108"
                }, 
                {
                  "data": {
                    "$area": 92, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createFence(filament::backend::Driver&, filament::backend::CommandBase*, long*) 92"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createRenderPrimitive(filament::backend::Driver&, filament::backend::CommandBase*, long*) 80"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "insertEventMarker(filament::backend::Driver&, filament::backend::CommandBase*, long*) 80"
                }, 
                {
                  "data": {
                    "$area": 76, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createRenderTarget(filament::backend::Driver&, filament::backend::CommandBase*, long*) 76"
                }, 
                {
                  "data": {
                    "$area": 76, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createTimerQuery(filament::backend::Driver&, filament::backend::CommandBase*, long*) 76"
                }, 
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "finish(filament::backend::Driver&, filament::backend::CommandBase*, long*) 72"
                }, 
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "beginTimerQuery(filament::backend::Driver&, filament::backend::CommandBase*, long*) 72"
                }, 
                {
                  "data": {
                    "$area": 68, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "flush(filament::backend::Driver&, filament::backend::CommandBase*, long*) 68"
                }, 
                {
                  "data": {
                    "$area": 64, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "endFrame(filament::backend::Driver&, filament::backend::CommandBase*, long*) 64"
                }, 
                {
                  "data": {
                    "$area": 64, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "bindSamplers(filament::backend::Driver&, filament::backend::CommandBase*, long*) 64"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "makeCurrent(filament::backend::Driver&, filament::backend::CommandBase*, long*) 56"
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "commit(filament::backend::Driver&, filament::backend::CommandBase*, long*) 48"
                }, 
                {
                  "data": {
                    "$area": 44, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "tick(filament::backend::Driver&, filament::backend::CommandBase*, long*) 44"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "updateSamplerGroup(filament::backend::Driver&, filament::backend::CommandBase*, long*) 40"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setPresentationTime(filament::backend::Driver&, filament::backend::CommandBase*, long*) 28"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setExternalImagePlane(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setFrameScheduledCallback(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setFrameCompletedCallback(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "stopCapture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "nextSubpass(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "startCapture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 3720, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "ConcreteDispatcher<filament::NoopDriver> 3.7k", 
              "children": [
                {
                  "data": {
                    "$area": 1856, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "ConcreteDispatcher() 1.9k"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "updateIndexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 84"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "update2DImage(filament::backend::Driver&, filament::backend::CommandBase*, long*) 84"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "readPixels(filament::backend::Driver&, filament::backend::CommandBase*, long*) 84"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "updateCubeImage(filament::backend::Driver&, filament::backend::CommandBase*, long*) 84"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "updateVertexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 84"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "loadUniformBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 84"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "update3DImage(filament::backend::Driver&, filament::backend::CommandBase*, long*) 84"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "readStreamPixels(filament::backend::Driver&, filament::backend::CommandBase*, long*) 84"
                }, 
                {
                  "data": {
                    "$area": 76, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createRenderTarget(filament::backend::Driver&, filament::backend::CommandBase*, long*) 76"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setRenderPrimitiveBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 28"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "blit(filament::backend::Driver&, filament::backend::CommandBase*, long*) 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createProgram(filament::backend::Driver&, filament::backend::CommandBase*, long*) 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "draw(filament::backend::Driver&, filament::backend::CommandBase*, long*) 24"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createSync(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createStreamFromTextureId(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "commit(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "beginRenderPass(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyStream(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "bindUniformBufferRange(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createSamplerGroup(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroySync(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createUniformBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createFence(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroySamplerGroup(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyProgram(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "generateMipmaps(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createSwapChainHeadless(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setRenderPrimitiveRange(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyUniformBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyRenderTarget(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createDefaultRenderTarget(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "updateSamplerGroup(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "bindSamplers(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setExternalImage(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "endTimerQuery(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createRenderPrimitive(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setExternalImagePlane(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyVertexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "bindUniformBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "beginTimerQuery(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroySwapChain(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setExternalStream(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createTextureSwizzled(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createSwapChain(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "makeCurrent(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createTimerQuery(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createTexture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyRenderPrimitive(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyTimerQuery(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "importTexture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setFrameScheduledCallback(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createVertexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createIndexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyIndexBuffer(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyTexture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setFrameCompletedCallback(filament::backend::Driver&, filament::backend::CommandBase*, long*) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "endFrame(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "tick(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "endRenderPass(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "stopCapture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "beginFrame(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "flush(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setPresentationTime(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "nextSubpass(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "finish(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "pushGroupMarker(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "popGroupMarker(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "insertEventMarker(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "startCapture(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 2536, 
                "$dominant_symbol": "code"
              }, 
              "name": "SamplerGroup 2.5k", 
              "children": [
                {
                  "data": {
                    "$area": 512, 
                    "$symbol": "code"
                  }, 
                  "name": "SamplerGroup(filament::backend::SamplerGroup&&) 512"
                }, 
                {
                  "data": {
                    "$area": 504, 
                    "$symbol": "code"
                  }, 
                  "name": "SamplerGroup(filament::backend::SamplerGroup const&) 504"
                }, 
                {
                  "data": {
                    "$area": 376, 
                    "$symbol": "code"
                  }, 
                  "name": "setSamplers(filament::backend::SamplerGroup const&) 376"
                }, 
                {
                  "data": {
                    "$area": 368, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::backend::SamplerGroup&&) 368"
                }, 
                {
                  "data": {
                    "$area": 364, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::backend::SamplerGroup const&) 364"
                }, 
                {
                  "data": {
                    "$area": 312, 
                    "$symbol": "code"
                  }, 
                  "name": "SamplerGroup(unsigned long) 312"
                }, 
                {
                  "data": {
                    "$area": 96, 
                    "$symbol": "code"
                  }, 
                  "name": "setSampler(unsigned long, filament::backend::SamplerGroup::Sampler const&) 96"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "toCommandStream() const 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 2224, 
                "$dominant_symbol": "code"
              }, 
              "name": "Program 2.2k", 
              "children": [
                {
                  "data": {
                    "$area": 776, 
                    "$symbol": "code"
                  }, 
                  "name": "Program(filament::backend::Program&&) 776"
                }, 
                {
                  "data": {
                    "$area": 452, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::backend::Program&&) 452"
                }, 
                {
                  "data": {
                    "$area": 376, 
                    "$symbol": "code"
                  }, 
                  "name": "~Program() 376"
                }, 
                {
                  "data": {
                    "$area": 272, 
                    "$symbol": "code"
                  }, 
                  "name": "shader(filament::backend::Program::Shader, void const*, unsigned long) 272"
                }, 
                {
                  "data": {
                    "$area": 164, 
                    "$symbol": "code"
                  }, 
                  "name": "setSamplerGroup(unsigned long, filament::backend::Program::Sampler const*, unsigned long) 164"
                }, 
                {
                  "data": {
                    "$area": 88, 
                    "$symbol": "code"
                  }, 
                  "name": "Program() 88"
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "code"
                  }, 
                  "name": "diagnostics(utils::CString const&, unsigned char) 48"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "setUniformBlock(unsigned long, utils::CString) 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "diagnostics(utils::CString&&, unsigned char) 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1808, 
                "$dominant_symbol": "code"
              }, 
              "name": "CommandBufferQueue 1.8k", 
              "children": [
                {
                  "data": {
                    "$area": 764, 
                    "$symbol": "code"
                  }, 
                  "name": "flush() 764"
                }, 
                {
                  "data": {
                    "$area": 328, 
                    "$symbol": "code"
                  }, 
                  "name": "waitForCommands() const 328"
                }, 
                {
                  "data": {
                    "$area": 216, 
                    "$symbol": "code"
                  }, 
                  "name": "isExitRequested() const 216"
                }, 
                {
                  "data": {
                    "$area": 140, 
                    "$symbol": "code"
                  }, 
                  "name": "releaseBuffer(filament::backend::CommandBufferQueue::Slice const&) 140"
                }, 
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "CommandBufferQueue(unsigned long, unsigned long) 136"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "requestExit() 128"
                }, 
                {
                  "data": {
                    "$area": 96, 
                    "$symbol": "code"
                  }, 
                  "name": "~CommandBufferQueue() 96"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1164, 
                "$dominant_symbol": "code"
              }, 
              "name": "DriverBase 1.2k", 
              "children": [
                {
                  "data": {
                    "$area": 340, 
                    "$symbol": "code"
                  }, 
                  "name": "scheduleRelease(filament::backend::AcquiredImage&&) 340"
                }, 
                {
                  "data": {
                    "$area": 324, 
                    "$symbol": "code"
                  }, 
                  "name": "~DriverBase() 324"
                }, 
                {
                  "data": {
                    "$area": 316, 
                    "$symbol": "code"
                  }, 
                  "name": "purge() 316"
                }, 
                {
                  "data": {
                    "$area": 140, 
                    "$symbol": "code"
                  }, 
                  "name": "scheduleDestroySlow(filament::backend::BufferDescriptor&&) 140"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "DriverBase(filament::backend::Dispatcher*) 36"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "getDispatcher() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1104, 
                "$dominant_symbol": "code"
              }, 
              "name": "CircularBuffer 1.1k", 
              "children": [
                {
                  "data": {
                    "$area": 644, 
                    "$symbol": "code"
                  }, 
                  "name": "alloc(unsigned long) 644"
                }, 
                {
                  "data": {
                    "$area": 160, 
                    "$symbol": "code"
                  }, 
                  "name": "~CircularBuffer() 160"
                }, 
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "CircularBuffer(unsigned long) 136"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "code"
                  }, 
                  "name": "circularize() 84"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "code"
                  }, 
                  "name": "dealloc() 80"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1075, 
                "$dominant_symbol": "code"
              }, 
              "name": "CommandStream 1.1k", 
              "children": [
                {
                  "data": {
                    "$area": 508, 
                    "$symbol": "code"
                  }, 
                  "name": "execute(void*) 508"
                }, 
                {
                  "data": {
                    "$area": 260, 
                    "$symbol": "code"
                  }, 
                  "name": "queueCommand(std::__ndk1::function<void ()>) 260"
                }, 
                {
                  "data": {
                    "$area": 240, 
                    "$symbol": "code"
                  }, 
                  "name": "CommandStream(filament::backend::Driver&, filament::backend::CircularBuffer&) 240"
                }, 
                {
                  "data": {
                    "$area": 51, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "execute(void*)::$_0 [typeinfo name] 51"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "execute(void*)::$_0 [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 360, 
                "$symbol": "data"
              }, 
              "name": "DriverBase [vtable] 360"
            }, 
            {
              "data": {
                "$area": 360, 
                "$symbol": "data"
              }, 
              "name": "Driver [vtable] 360"
            }, 
            {
              "data": {
                "$area": 328, 
                "$dominant_symbol": "code"
              }, 
              "name": "DefaultPlatform 328", 
              "children": [
                {
                  "data": {
                    "$area": 264, 
                    "$symbol": "code"
                  }, 
                  "name": "create(filament::backend::Backend*) 264"
                }, 
                {
                  "data": {
                    "$area": 52, 
                    "$symbol": "code"
                  }, 
                  "name": "destroy(filament::backend::DefaultPlatform**) 52"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "~DefaultPlatform() 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 292, 
                "$symbol": "code"
              }, 
              "name": "removeGoogleLineDirectives(char*, unsigned long) 292"
            }, 
            {
              "data": {
                "$area": 264, 
                "$symbol": "data"
              }, 
              "name": "OpenGLPlatform [vtable] 264"
            }, 
            {
              "data": {
                "$area": 160, 
                "$symbol": "code"
              }, 
              "name": "requestsGoogleLineDirectivesExtension(char const*, unsigned long) 160"
            }, 
            {
              "data": {
                "$area": 116, 
                "$dominant_symbol": "code"
              }, 
              "name": "CustomCommand 116", 
              "children": [
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "code"
                  }, 
                  "name": "execute(filament::backend::Driver&, filament::backend::CommandBase*, long*) 116"
                }
              ]
            }, 
            {
              "data": {
                "$area": 84, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "OpenGLPlatform 84", 
              "children": [
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "transformAcquiredImage(filament::backend::AcquiredImage) 20"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createDefaultRenderTarget(unsigned int&, unsigned int&, unsigned int&) 16"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "~OpenGLPlatform() 12"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "setExternalImage(void*, void*) 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "canCreateFence() 8"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "createDefaultDriver(filament::backend::OpenGLPlatform*, void*) 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "destroyExternalImage(void*) 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "createExternalImageTexture(void*) 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "retainExternalImage(void*) 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "releaseExternalImage(void*) 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 76, 
                "$dominant_symbol": "code"
              }, 
              "name": "Driver 76", 
              "children": [
                {
                  "data": {
                    "$area": 44, 
                    "$symbol": "code"
                  }, 
                  "name": "execute(std::__ndk1::function<void ()>) 44"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "getElementTypeSize(filament::backend::ElementType) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "~Driver() 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 72, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "HwVertexBuffer 72", 
              "children": [
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "HwVertexBuffer() 72"
                }
              ]
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "data"
              }, 
              "name": "DefaultPlatform [vtable] 56"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "data"
              }, 
              "name": "Platform [vtable] 56"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "backendToString(filament::backend::Backend) 48"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "getBlockWidth(filament::backend::TextureFormat) 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "getBlockHeight(filament::backend::TextureFormat) 44"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "getFormatSize(filament::backend::TextureFormat) 40"
            }, 
            {
              "data": {
                "$area": 37, 
                "$symbol": "read-only data"
              }, 
              "name": "DefaultPlatform [typeinfo name] 37"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "read-only data"
              }, 
              "name": "OpenGLPlatform [typeinfo name] 36"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "read-only data"
              }, 
              "name": "DriverBase [typeinfo name] 32"
            }, 
            {
              "data": {
                "$area": 29, 
                "$symbol": "read-only data"
              }, 
              "name": "Platform [typeinfo name] 29"
            }, 
            {
              "data": {
                "$area": 27, 
                "$symbol": "read-only data"
              }, 
              "name": "Driver [typeinfo name] 27"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "DriverBase [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "DefaultPlatform [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "OpenGLPlatform [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 20, 
                "$dominant_symbol": "code"
              }, 
              "name": "Platform 20", 
              "children": [
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "~Platform() 12"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "pumpEvents() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "Driver [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "Platform [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "NoopCommand 12", 
              "children": [
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "execute(filament::backend::Driver&, filament::backend::CommandBase*, long*) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 4, 
                "$dominant_symbol": "code"
              }, 
              "name": "OpenGLDriverFactory 4", 
              "children": [
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "create(filament::backend::OpenGLPlatform*, void*) 4"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 25328, 
            "$dominant_symbol": "code"
          }, 
          "name": "FEngine 25.3k", 
          "children": [
            {
              "data": {
                "$area": 3312, 
                "$symbol": "code"
              }, 
              "name": "FEngine(filament::backend::Backend, filament::backend::Platform*, void*) 3.3k"
            }, 
            {
              "data": {
                "$area": 1848, 
                "$symbol": "code"
              }, 
              "name": "~FEngine() 1.8k"
            }, 
            {
              "data": {
                "$area": 1316, 
                "$symbol": "code"
              }, 
              "name": "init() 1.3k"
            }, 
            {
              "data": {
                "$area": 784, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FScene, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FScene, utils::LockingPolicy::NoLock>&) 784"
            }, 
            {
              "data": {
                "$area": 784, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock>&) 784"
            }, 
            {
              "data": {
                "$area": 784, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FMaterial, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FMaterial, utils::LockingPolicy::NoLock>&) 784"
            }, 
            {
              "data": {
                "$area": 784, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FView, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FView, utils::LockingPolicy::NoLock>&) 784"
            }, 
            {
              "data": {
                "$area": 784, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FColorGrading, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FColorGrading, utils::LockingPolicy::NoLock>&) 784"
            }, 
            {
              "data": {
                "$area": 784, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FRenderer, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FRenderer, utils::LockingPolicy::NoLock>&) 784"
            }, 
            {
              "data": {
                "$area": 776, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FIndexBuffer, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FIndexBuffer, utils::LockingPolicy::NoLock>&) 776"
            }, 
            {
              "data": {
                "$area": 776, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FRenderTarget, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FRenderTarget, utils::LockingPolicy::NoLock>&) 776"
            }, 
            {
              "data": {
                "$area": 776, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FVertexBuffer, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FVertexBuffer, utils::LockingPolicy::NoLock>&) 776"
            }, 
            {
              "data": {
                "$area": 776, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FTexture, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FTexture, utils::LockingPolicy::NoLock>&) 776"
            }, 
            {
              "data": {
                "$area": 708, 
                "$symbol": "code"
              }, 
              "name": "shutdown() 708"
            }, 
            {
              "data": {
                "$area": 640, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FFence, utils::SpinLock>(filament::ResourceList<filament::FFence, utils::SpinLock>&) 640"
            }, 
            {
              "data": {
                "$area": 600, 
                "$symbol": "code"
              }, 
              "name": "gc() 600"
            }, 
            {
              "data": {
                "$area": 596, 
                "$symbol": "code"
              }, 
              "name": "createAsync(void (*)(void*, void*), void*, filament::backend::Backend, filament::backend::Platform*, void*) 596"
            }, 
            {
              "data": {
                "$area": 544, 
                "$symbol": "code"
              }, 
              "name": "flushAndWait() 544"
            }, 
            {
              "data": {
                "$area": 492, 
                "$symbol": "code"
              }, 
              "name": "prepare() 492"
            }, 
            {
              "data": {
                "$area": 492, 
                "$symbol": "weak symbol"
              }, 
              "name": "cleanupResourceList<filament::FSkybox, utils::LockingPolicy::NoLock>(filament::ResourceList<filament::FSkybox, utils::LockingPolicy::NoLock>&) 492"
            }, 
            {
              "data": {
                "$area": 432, 
                "$symbol": "code"
              }, 
              "name": "create(filament::backend::Backend, filament::backend::Platform*, void*) 432"
            }, 
            {
              "data": {
                "$area": 348, 
                "$symbol": "code"
              }, 
              "name": "loop() 348"
            }, 
            {
              "data": {
                "$area": 304, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FMaterial const*) 304"
            }, 
            {
              "data": {
                "$area": 288, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FFence, utils::SpinLock>(filament::FFence const*, filament::ResourceList<filament::FFence, utils::SpinLock>&) 288"
            }, 
            {
              "data": {
                "$area": 244, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FMaterialInstance const*) 244"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "execute() 184"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FMaterial, utils::LockingPolicy::NoLock>(filament::FMaterial const*, filament::ResourceList<filament::FMaterial, utils::LockingPolicy::NoLock>&) 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FScene, utils::LockingPolicy::NoLock>(filament::FScene const*, filament::ResourceList<filament::FScene, utils::LockingPolicy::NoLock>&) 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FRenderer, utils::LockingPolicy::NoLock>(filament::FRenderer const*, filament::ResourceList<filament::FRenderer, utils::LockingPolicy::NoLock>&) 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FMaterialInstance, utils::LockingPolicy::NoLock>(filament::FMaterialInstance const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock>&) 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FView, utils::LockingPolicy::NoLock>(filament::FView const*, filament::ResourceList<filament::FView, utils::LockingPolicy::NoLock>&) 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FColorGrading, utils::LockingPolicy::NoLock>(filament::FColorGrading const*, filament::ResourceList<filament::FColorGrading, utils::LockingPolicy::NoLock>&) 172"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FSwapChain, utils::LockingPolicy::NoLock>(filament::FSwapChain const*, filament::ResourceList<filament::FSwapChain, utils::LockingPolicy::NoLock>&) 164"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FVertexBuffer, utils::LockingPolicy::NoLock>(filament::FVertexBuffer const*, filament::ResourceList<filament::FVertexBuffer, utils::LockingPolicy::NoLock>&) 164"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FIndexBuffer, utils::LockingPolicy::NoLock>(filament::FIndexBuffer const*, filament::ResourceList<filament::FIndexBuffer, utils::LockingPolicy::NoLock>&) 164"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FTexture, utils::LockingPolicy::NoLock>(filament::FTexture const*, filament::ResourceList<filament::FTexture, utils::LockingPolicy::NoLock>&) 164"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FSkybox, utils::LockingPolicy::NoLock>(filament::FSkybox const*, filament::ResourceList<filament::FSkybox, utils::LockingPolicy::NoLock>&) 164"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FRenderTarget, utils::LockingPolicy::NoLock>(filament::FRenderTarget const*, filament::ResourceList<filament::FRenderTarget, utils::LockingPolicy::NoLock>&) 164"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FIndirectLight, utils::LockingPolicy::NoLock>(filament::FIndirectLight const*, filament::ResourceList<filament::FIndirectLight, utils::LockingPolicy::NoLock>&) 164"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "weak symbol"
              }, 
              "name": "terminateAndDestroy<filament::FStream, utils::LockingPolicy::NoLock>(filament::FStream const*, filament::ResourceList<filament::FStream, utils::LockingPolicy::NoLock>&) 164"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "code"
              }, 
              "name": "createFence(filament::FFence::Type) 164"
            }, 
            {
              "data": {
                "$area": 160, 
                "$symbol": "code"
              }, 
              "name": "createSwapChain(void*, unsigned long) 160"
            }, 
            {
              "data": {
                "$area": 152, 
                "$symbol": "code"
              }, 
              "name": "createMaterialInstance(filament::FMaterial const*, char const*) 152"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "getEngine(void*) 148"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "createSwapChain(unsigned int, unsigned int, unsigned long) 136"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "createIndexBuffer(filament::IndexBuffer::Builder const&) 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "createVertexBuffer(filament::VertexBuffer::Builder const&) 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "createMaterial(filament::Material::Builder const&) 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "createRenderTarget(filament::RenderTarget::Builder const&) 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "createTexture(filament::Texture::Builder const&) 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "createColorGrading(filament::ColorGrading::Builder const&) 124"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "createSkybox(filament::Skybox::Builder const&) 120"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "createIndirectLight(filament::IndirectLight::Builder const&) 120"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "createStream(filament::Stream::Builder const&) 120"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "createRenderable(filament::RenderableManager::Builder const&, utils::Entity) 116"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "createRenderer() 112"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "createScene() 104"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "createView() 104"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "streamAlloc(unsigned long, unsigned long) 76"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 76"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getCameraComponent(utils::Entity) 60"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "getSkyboxMaterial() const 56"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FEngine*) 52"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "flush() 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "flushCommandBuffer(filament::backend::CommandBufferQueue&) 48"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "createCamera(utils::Entity) 32"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "destroyCameraComponent(utils::Entity) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "createLight(filament::LightManager::Builder const&, utils::Entity) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FStream const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FRenderTarget const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FVertexBuffer const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FTexture const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FSwapChain const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FIndexBuffer const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::FFence const*) 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 25084, 
            "$dominant_symbol": "code"
          }, 
          "name": "DFG 25.1k", 
          "children": [
            {
              "data": {
                "$area": 24576, 
                "$symbol": "read-only data"
              }, 
              "name": "DFG_LUT 24.6k"
            }, 
            {
              "data": {
                "$area": 488, 
                "$symbol": "code"
              }, 
              "name": "DFG(filament::FEngine&) 488"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "terminate() 20"
            }
          ]
        }, 
        {
          "data": {
            "$area": 23017, 
            "$dominant_symbol": "code"
          }, 
          "name": "ibl 23.0k", 
          "children": [
            {
              "data": {
                "$area": 7279, 
                "$dominant_symbol": "code"
              }, 
              "name": "CubemapUtils 7.3k", 
              "children": [
                {
                  "data": {
                    "$area": 672, 
                    "$symbol": "code"
                  }, 
                  "name": "cubemapToEquirectangular(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_4::operator()(unsigned long, unsigned long) const 672"
                }, 
                {
                  "data": {
                    "$area": 616, 
                    "$symbol": "code"
                  }, 
                  "name": "cubemapToOctahedron(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_5::operator()(unsigned long, unsigned long) const 616"
                }, 
                {
                  "data": {
                    "$area": 436, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&) 436"
                }, 
                {
                  "data": {
                    "$area": 416, 
                    "$symbol": "code"
                  }, 
                  "name": "generateUVGrid(utils::JobSystem&, filament::ibl::Cubemap&, unsigned long, unsigned long) 416"
                }, 
                {
                  "data": {
                    "$area": 336, 
                    "$symbol": "code"
                  }, 
                  "name": "create(filament::ibl::Image&, unsigned long, bool) 336"
                }, 
                {
                  "data": {
                    "$area": 332, 
                    "$symbol": "code"
                  }, 
                  "name": "downsampleCubemapLevelBoxFilter(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&) 332"
                }, 
                {
                  "data": {
                    "$area": 300, 
                    "$symbol": "code"
                  }, 
                  "name": "equirectangularToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&) 300"
                }, 
                {
                  "data": {
                    "$area": 288, 
                    "$symbol": "code"
                  }, 
                  "name": "mirrorCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&) 288"
                }, 
                {
                  "data": {
                    "$area": 285, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "processSingleThreaded<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::$_5 [typeinfo name] 285"
                }, 
                {
                  "data": {
                    "$area": 284, 
                    "$symbol": "code"
                  }, 
                  "name": "crossToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&) 284"
                }, 
                {
                  "data": {
                    "$area": 276, 
                    "$symbol": "code"
                  }, 
                  "name": "setFaceFromCross(filament::ibl::Cubemap&, filament::ibl::Cubemap::Face, filament::ibl::Image const&) 276"
                }, 
                {
                  "data": {
                    "$area": 270, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::$_6 [typeinfo name] 270"
                }, 
                {
                  "data": {
                    "$area": 240, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&) 240"
                }, 
                {
                  "data": {
                    "$area": 208, 
                    "$symbol": "code"
                  }, 
                  "name": "clamp(filament::ibl::Image&) 208"
                }, 
                {
                  "data": {
                    "$area": 204, 
                    "$symbol": "code"
                  }, 
                  "name": "solidAngle(unsigned long, unsigned long, unsigned long) 204"
                }, 
                {
                  "data": {
                    "$area": 197, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_8 [typeinfo name] 197"
                }, 
                {
                  "data": {
                    "$area": 197, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_1 [typeinfo name] 197"
                }, 
                {
                  "data": {
                    "$area": 182, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_3 [typeinfo name] 182"
                }, 
                {
                  "data": {
                    "$area": 182, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_2 [typeinfo name] 182"
                }, 
                {
                  "data": {
                    "$area": 164, 
                    "$symbol": "code"
                  }, 
                  "name": "highlight(filament::ibl::Image&) 164"
                }, 
                {
                  "data": {
                    "$area": 152, 
                    "$symbol": "code"
                  }, 
                  "name": "cubemapToEquirectangular(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&) 152"
                }, 
                {
                  "data": {
                    "$area": 152, 
                    "$symbol": "code"
                  }, 
                  "name": "cubemapToOctahedron(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&) 152"
                }, 
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "setAllFacesFromCross(filament::ibl::Cubemap&, filament::ibl::Image const&) 120"
                }, 
                {
                  "data": {
                    "$area": 108, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "equirectangularToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&)::$_2 [typeinfo name] 108"
                }, 
                {
                  "data": {
                    "$area": 107, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "downsampleCubemapLevelBoxFilter(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&)::$_7 [typeinfo name] 107"
                }, 
                {
                  "data": {
                    "$area": 98, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "crossToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&)::$_6 [typeinfo name] 98"
                }, 
                {
                  "data": {
                    "$area": 89, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "mirrorCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&)::$_9 [typeinfo name] 89"
                }, 
                {
                  "data": {
                    "$area": 88, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "generateUVGrid(utils::JobSystem&, filament::ibl::Cubemap&, unsigned long, unsigned long)::$_10 [typeinfo name] 88"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "code"
                  }, 
                  "name": "createCubemapImage(unsigned long, bool) 84"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "getFaceName(filament::ibl::Cubemap::Face) 20"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_8 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "downsampleCubemapLevelBoxFilter(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&)::$_7 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::$_6 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "processSingleThreaded<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::$_5 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_1 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "generateUVGrid(utils::JobSystem&, filament::ibl::Cubemap&, unsigned long, unsigned long)::$_10 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "crossToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&)::$_6 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_2 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_3 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "mirrorCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&)::$_9 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "equirectangularToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&)::$_2 [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 7252, 
                "$dominant_symbol": "code"
              }, 
              "name": "Cubemap 7.3k", 
              "children": [
                {
                  "data": {
                    "$area": 4880, 
                    "$symbol": "code"
                  }, 
                  "name": "makeSeamless() 4.9k"
                }, 
                {
                  "data": {
                    "$area": 832, 
                    "$symbol": "code"
                  }, 
                  "name": "Cubemap(unsigned long) 832"
                }, 
                {
                  "data": {
                    "$area": 620, 
                    "$symbol": "code"
                  }, 
                  "name": "trilinearFilterAt(filament::ibl::Cubemap const&, filament::ibl::Cubemap const&, float, filament::math::details::TVec3<float> const&) 620"
                }, 
                {
                  "data": {
                    "$area": 264, 
                    "$symbol": "code"
                  }, 
                  "name": "~Cubemap() 264"
                }, 
                {
                  "data": {
                    "$area": 196, 
                    "$symbol": "code"
                  }, 
                  "name": "getAddressFor(filament::math::details::TVec3<float> const&) 196"
                }, 
                {
                  "data": {
                    "$area": 184, 
                    "$symbol": "code"
                  }, 
                  "name": "filterAt(filament::ibl::Image const&, float, float) 184"
                }, 
                {
                  "data": {
                    "$area": 140, 
                    "$symbol": "code"
                  }, 
                  "name": "filterAtCenter(filament::ibl::Image const&, unsigned long, unsigned long) 140"
                }, 
                {
                  "data": {
                    "$area": 104, 
                    "$symbol": "code"
                  }, 
                  "name": "resetDimensions(unsigned long) 104"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "setImageForFace(filament::ibl::Cubemap::Face, filament::ibl::Image const&) 24"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "getDimensions() const 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 4846, 
                "$dominant_symbol": "code"
              }, 
              "name": "CubemapIBL 4.8k", 
              "children": [
                {
                  "data": {
                    "$area": 2924, 
                    "$symbol": "code"
                  }, 
                  "name": "roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>) 2.9k"
                }, 
                {
                  "data": {
                    "$area": 1184, 
                    "$symbol": "code"
                  }, 
                  "name": "diffuseIrradiance(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, unsigned long, std::__ndk1::function<void (unsigned long, float)>) 1.2k"
                }, 
                {
                  "data": {
                    "$area": 296, 
                    "$symbol": "code"
                  }, 
                  "name": "brdf(utils::JobSystem&, filament::ibl::Cubemap&, float) 296"
                }, 
                {
                  "data": {
                    "$area": 184, 
                    "$symbol": "code"
                  }, 
                  "name": "DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool) 184"
                }, 
                {
                  "data": {
                    "$area": 153, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "diffuseIrradiance(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, unsigned long, std::__ndk1::function<void (unsigned long, float)>)::$_7 [typeinfo name] 153"
                }, 
                {
                  "data": {
                    "$area": 73, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "brdf(utils::JobSystem&, filament::ibl::Cubemap&, float)::$_8 [typeinfo name] 73"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "diffuseIrradiance(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, unsigned long, std::__ndk1::function<void (unsigned long, float)>)::$_7 [typeinfo] 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": "brdf(utils::JobSystem&, filament::ibl::Cubemap&, float)::$_8 [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1708, 
                "$symbol": "code"
              }, 
              "name": "DFV(float, float, unsigned long) 1.7k"
            }, 
            {
              "data": {
                "$area": 1676, 
                "$symbol": "code"
              }, 
              "name": "DFV_Multiscatter(float, float, unsigned long) 1.7k"
            }, 
            {
              "data": {
                "$area": 256, 
                "$dominant_symbol": "code"
              }, 
              "name": "Image 256", 
              "children": [
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "Image(unsigned long, unsigned long, unsigned long) 128"
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "code"
                  }, 
                  "name": "subset(filament::ibl::Image const&, unsigned long, unsigned long, unsigned long, unsigned long) 48"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Image() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "set(filament::ibl::Image const&) 32"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "reset() 16"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 22248, 
            "$dominant_symbol": "code"
          }, 
          "name": "PostProcessManager 22.2k", 
          "children": [
            {
              "data": {
                "$area": 4892, 
                "$symbol": "code"
              }, 
              "name": "dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&) 4.9k"
            }, 
            {
              "data": {
                "$area": 1976, 
                "$symbol": "code"
              }, 
              "name": "init() 2.0k"
            }, 
            {
              "data": {
                "$area": 1468, 
                "$symbol": "code"
              }, 
              "name": "bloomPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::backend::TextureFormat, filament::View::BloomOptions&, filament::math::details::TVec2<float>) 1.5k"
            }, 
            {
              "data": {
                "$area": 1232, 
                "$symbol": "code"
              }, 
              "name": "taa(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::TFrameHistory<filament::FrameHistoryEntry, 1ul>&, filament::View::TemporalAntiAliasingOptions, filament::PostProcessManager::ColorGradingConfig) 1.2k"
            }, 
            {
              "data": {
                "$area": 1212, 
                "$symbol": "code"
              }, 
              "name": "screenSpaceAmbientOcclusion(filament::FrameGraph&, filament::RenderPass&, filament::Viewport const&, filament::CameraInfo const&, filament::View::AmbientOcclusionOptions) 1.2k"
            }, 
            {
              "data": {
                "$area": 1168, 
                "$symbol": "code"
              }, 
              "name": "colorGrading(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FColorGrading const*, filament::backend::TextureFormat, bool, bool, filament::math::details::TVec2<float>, filament::View::BloomOptions, filament::View::VignetteOptions, bool) 1.2k"
            }, 
            {
              "data": {
                "$area": 1052, 
                "$symbol": "code"
              }, 
              "name": "gaussianBlurPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, bool, unsigned long, float) 1.1k"
            }, 
            {
              "data": {
                "$area": 864, 
                "$symbol": "code"
              }, 
              "name": "resolve(filament::FrameGraph&, char const*, filament::FrameGraphId<filament::FrameGraphTexture>) 864"
            }, 
            {
              "data": {
                "$area": 848, 
                "$symbol": "code"
              }, 
              "name": "structure(filament::FrameGraph&, filament::RenderPass const&, unsigned int, unsigned int, float) 848"
            }, 
            {
              "data": {
                "$area": 712, 
                "$symbol": "code"
              }, 
              "name": "opaqueBlit(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FrameGraphTexture::Descriptor, filament::backend::SamplerMagFilter) 712"
            }, 
            {
              "data": {
                "$area": 712, 
                "$symbol": "code"
              }, 
              "name": "bilateralBlurPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::math::details::TVec2<int>, float, filament::backend::TextureFormat, filament::PostProcessManager::BilateralPassConfig) 712"
            }, 
            {
              "data": {
                "$area": 704, 
                "$symbol": "code"
              }, 
              "name": "colorGradingPrepareSubpass(filament::backend::CommandStream&, filament::FColorGrading const*, filament::View::VignetteOptions, bool, bool, unsigned int, unsigned int) 704"
            }, 
            {
              "data": {
                "$area": 656, 
                "$dominant_symbol": "code"
              }, 
              "name": "PostProcessMaterial 656", 
              "children": [
                {
                  "data": {
                    "$area": 132, 
                    "$symbol": "code"
                  }, 
                  "name": "getPipelineState(unsigned char) const 132"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "PostProcessMaterial(filament::PostProcessManager::PostProcessMaterial&&) 128"
                }, 
                {
                  "data": {
                    "$area": 104, 
                    "$symbol": "code"
                  }, 
                  "name": "loadMaterial() const 104"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "code"
                  }, 
                  "name": "getMaterial() const 56"
                }, 
                {
                  "data": {
                    "$area": 52, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::PostProcessManager::PostProcessMaterial&&) 52"
                }, 
                {
                  "data": {
                    "$area": 44, 
                    "$symbol": "code"
                  }, 
                  "name": "getMaterialInstance() const 44"
                }, 
                {
                  "data": {
                    "$area": 44, 
                    "$symbol": "code"
                  }, 
                  "name": "terminate(filament::FEngine&) 44"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "PostProcessMaterial(filament::FEngine&, unsigned char const*, int) 40"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "assertMaterial() const 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "PostProcessMaterial() 24"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "~PostProcessMaterial() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 612, 
                "$symbol": "code"
              }, 
              "name": "fxaa(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::backend::TextureFormat, bool) 612"
            }, 
            {
              "data": {
                "$area": 604, 
                "$symbol": "code"
              }, 
              "name": "blendBlit(filament::FrameGraph&, bool, filament::View::QualityLevel, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FrameGraphTexture::Descriptor) 604"
            }, 
            {
              "data": {
                "$area": 556, 
                "$symbol": "code"
              }, 
              "name": "dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_17::operator()(filament::FrameGraphId<filament::FrameGraphTexture>) const 556"
            }, 
            {
              "data": {
                "$area": 496, 
                "$symbol": "code"
              }, 
              "name": "commitAndRender(filament::FrameGraphRenderTarget const&, filament::PostProcessManager::PostProcessMaterial const&, unsigned char, filament::backend::CommandStream&) const 496"
            }, 
            {
              "data": {
                "$area": 460, 
                "$symbol": "code"
              }, 
              "name": "colorGradingSubpass(filament::backend::CommandStream&, bool) 460"
            }, 
            {
              "data": {
                "$area": 452, 
                "$symbol": "code"
              }, 
              "name": "vsmMipmapPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, unsigned long) 452"
            }, 
            {
              "data": {
                "$area": 400, 
                "$symbol": "code"
              }, 
              "name": "mipmapPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned long) 400"
            }, 
            {
              "data": {
                "$area": 312, 
                "$symbol": "code"
              }, 
              "name": "PostProcessManager(filament::FEngine&) 312"
            }, 
            {
              "data": {
                "$area": 256, 
                "$symbol": "code"
              }, 
              "name": "generateGaussianMipmap(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned long, bool, unsigned long, float) 256"
            }, 
            {
              "data": {
                "$area": 232, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::backend::CommandStream&) 232"
            }, 
            {
              "data": {
                "$area": 188, 
                "$symbol": "code"
              }, 
              "name": "prepareTaa(filament::TFrameHistory<filament::FrameHistoryEntry, 1ul>&, filament::CameraInfo const&, filament::View::TemporalAntiAliasingOptions const&) const 188"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "code"
              }, 
              "name": "registerPostProcessMaterial(utils::StaticString, unsigned char const*, int) 92"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "getPostProcessMaterial(utils::StaticString) 80"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "commitAndRender(filament::FrameGraphRenderTarget const&, filament::PostProcessManager::PostProcessMaterial const&, filament::backend::CommandStream&) const 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 20580, 
            "$dominant_symbol": "code"
          }, 
          "name": "OpenGLDriver 20.6k", 
          "children": [
            {
              "data": {
                "$area": 2084, 
                "$symbol": "weak symbol"
              }, 
              "name": "OpenGLDriver(filament::backend::OpenGLPlatform*) 2.1k"
            }, 
            {
              "data": {
                "$area": 1228, 
                "$symbol": "code"
              }, 
              "name": "framebufferTexture(filament::backend::TargetBufferInfo const&, filament::OpenGLDriver::GLRenderTarget const*, unsigned int) 1.2k"
            }, 
            {
              "data": {
                "$area": 1104, 
                "$symbol": "code"
              }, 
              "name": "setTextureData(filament::OpenGLDriver::GLTexture*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets const*) 1.1k"
            }, 
            {
              "data": {
                "$area": 1044, 
                "$symbol": "code"
              }, 
              "name": "~OpenGLDriver() 1.0k"
            }, 
            {
              "data": {
                "$area": 860, 
                "$symbol": "code"
              }, 
              "name": "setCompressedTextureData(filament::OpenGLDriver::GLTexture*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets const*) 860"
            }, 
            {
              "data": {
                "$area": 844, 
                "$symbol": "weak symbol"
              }, 
              "name": "createRenderTargetR(filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo) 844"
            }, 
            {
              "data": {
                "$area": 832, 
                "$symbol": "code"
              }, 
              "name": "setRasterStateSlow(filament::backend::RasterState) 832"
            }, 
            {
              "data": {
                "$area": 704, 
                "$symbol": "code"
              }, 
              "name": "updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*) 704"
            }, 
            {
              "data": {
                "$area": 692, 
                "$symbol": "code"
              }, 
              "name": "executeGpuCommandsCompleteOps() 692"
            }, 
            {
              "data": {
                "$area": 608, 
                "$symbol": "weak symbol"
              }, 
              "name": "readPixels(filament::backend::Handle<filament::backend::HwRenderTarget>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&)::{lambda()#1}::operator()() 608"
            }, 
            {
              "data": {
                "$area": 496, 
                "$dominant_symbol": "code"
              }, 
              "name": "DebugMarker 496", 
              "children": [
                {
                  "data": {
                    "$area": 280, 
                    "$symbol": "code"
                  }, 
                  "name": "DebugMarker(filament::OpenGLDriver&, char const*) 280"
                }, 
                {
                  "data": {
                    "$area": 216, 
                    "$symbol": "code"
                  }, 
                  "name": "~DebugMarker() 216"
                }
              ]
            }, 
            {
              "data": {
                "$area": 464, 
                "$symbol": "code"
              }, 
              "name": "getSamplerSlow(filament::backend::SamplerParams) const 464"
            }, 
            {
              "data": {
                "$area": 460, 
                "$dominant_symbol": "code"
              }, 
              "name": "HandleAllocator 460", 
              "children": [
                {
                  "data": {
                    "$area": 288, 
                    "$symbol": "code"
                  }, 
                  "name": "HandleAllocator(utils::HeapArea const&) 288"
                }, 
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "alloc(unsigned long, unsigned long, unsigned long) 120"
                }, 
                {
                  "data": {
                    "$area": 52, 
                    "$symbol": "code"
                  }, 
                  "name": "free(void*, unsigned long) 52"
                }
              ]
            }, 
            {
              "data": {
                "$area": 452, 
                "$symbol": "code"
              }, 
              "name": "terminate() 452"
            }, 
            {
              "data": {
                "$area": 392, 
                "$symbol": "code"
              }, 
              "name": "textureStorage(filament::OpenGLDriver::GLTexture*, unsigned int, unsigned int, unsigned int) 392"
            }, 
            {
              "data": {
                "$area": 376, 
                "$symbol": "code"
              }, 
              "name": "updateStreamAcquired(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*) 376"
            }, 
            {
              "data": {
                "$area": 364, 
                "$symbol": "code"
              }, 
              "name": "attachStream(filament::OpenGLDriver::GLTexture*, filament::OpenGLDriver::GLStream*) 364"
            }, 
            {
              "data": {
                "$area": 344, 
                "$symbol": "code"
              }, 
              "name": "executeEveryNowAndThenOps() 344"
            }, 
            {
              "data": {
                "$area": 312, 
                "$symbol": "code"
              }, 
              "name": "updateTextureLodRange(filament::OpenGLDriver::GLTexture*, signed char) 312"
            }, 
            {
              "data": {
                "$area": 312, 
                "$symbol": "code"
              }, 
              "name": "updateBuffer(unsigned int, filament::OpenGLDriver::GLBuffer*, filament::backend::BufferDescriptor const&, unsigned int) 312"
            }, 
            {
              "data": {
                "$area": 300, 
                "$symbol": "code"
              }, 
              "name": "clearWithRasterPipe(filament::backend::TargetBufferFlags, filament::math::details::TVec4<float> const&, float, int) 300"
            }, 
            {
              "data": {
                "$area": 268, 
                "$symbol": "code"
              }, 
              "name": "setViewportScissor(filament::backend::Viewport const&) 268"
            }, 
            {
              "data": {
                "$area": 248, 
                "$symbol": "code"
              }, 
              "name": "resolvePass(filament::OpenGLDriver::ResolveAction, filament::OpenGLDriver::GLRenderTarget const*, filament::backend::TargetBufferFlags) 248"
            }, 
            {
              "data": {
                "$area": 240, 
                "$symbol": "code"
              }, 
              "name": "detachStream(filament::OpenGLDriver::GLTexture*) 240"
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "setExternalTexture(filament::OpenGLDriver::GLTexture*, void*) 236"
            }, 
            {
              "data": {
                "$area": 228, 
                "$symbol": "code"
              }, 
              "name": "setAcquiredImage(filament::backend::Handle<filament::backend::HwStream>, void*, void (*)(void*, void*), void*) 228"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "code"
              }, 
              "name": "create(filament::backend::OpenGLPlatform*, void*) 216"
            }, 
            {
              "data": {
                "$area": 208, 
                "$symbol": "code"
              }, 
              "name": "updateStreams(filament::backend::CommandStream*) 208"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "allocateHandle(unsigned long) 184"
            }, 
            {
              "data": {
                "$area": 176, 
                "$symbol": "code"
              }, 
              "name": "getAttachments(std::__ndk1::array<unsigned int, 6ul>&, filament::OpenGLDriver::GLRenderTarget const*, filament::backend::TargetBufferFlags) 176"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "whenGpuCommandsComplete(std::__ndk1::function<void ()>) 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "createDefaultRenderTargetS() 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "createRenderTargetS() 172"
            }, 
            {
              "data": {
                "$area": 160, 
                "$symbol": "code"
              }, 
              "name": "replaceStream(filament::OpenGLDriver::GLTexture*, filament::OpenGLDriver::GLStream*) 160"
            }, 
            {
              "data": {
                "$area": 160, 
                "$symbol": "code"
              }, 
              "name": "bindTexture(unsigned int, filament::OpenGLDriver::GLTexture const*) 160"
            }, 
            {
              "data": {
                "$area": 152, 
                "$symbol": "code"
              }, 
              "name": "createStreamAcquired() 152"
            }, 
            {
              "data": {
                "$area": 152, 
                "$symbol": "code"
              }, 
              "name": "createStreamFromTextureIdS() 152"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "isTextureFormatSupported(filament::backend::TextureFormat) 148"
            }, 
            {
              "data": {
                "$area": 144, 
                "$symbol": "code"
              }, 
              "name": "createVertexBufferS() 144"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "destroyFence(filament::backend::Handle<filament::backend::HwFence>) 136"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "createSyncS() 136"
            }, 
            {
              "data": {
                "$area": 132, 
                "$symbol": "code"
              }, 
              "name": "runEveryNowAndThen(std::__ndk1::function<bool ()>) 132"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "createStreamNative(void*) 128"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "renderBufferStorage(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char) const 128"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "isRenderTargetFormatSupported(filament::backend::TextureFormat) 124"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "weak symbol"
              }, 
              "name": "readPixels(filament::backend::Handle<filament::backend::HwRenderTarget>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&)::{lambda()#1} [typeinfo name] 120"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "importTextureS() 112"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "createTextureS() 112"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "createTextureSwizzledS() 112"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "createRenderPrimitiveS() 104"
            }, 
            {
              "data": {
                "$area": 98, 
                "$symbol": "read-only data"
              }, 
              "name": "updateStreamAcquired(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_0 [typeinfo name] 98"
            }, 
            {
              "data": {
                "$area": 95, 
                "$symbol": "read-only data"
              }, 
              "name": "updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_1 [typeinfo name] 95"
            }, 
            {
              "data": {
                "$area": 95, 
                "$symbol": "read-only data"
              }, 
              "name": "updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_2 [typeinfo name] 95"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "code"
              }, 
              "name": "createProgramS() 92"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "code"
              }, 
              "name": "createIndexBufferS() 92"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "code"
              }, 
              "name": "createTimerQueryS() 92"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "weak symbol"
              }, 
              "name": "endTimerQuery(filament::backend::Handle<filament::backend::HwTimerQuery>)::{lambda()#1} [typeinfo name] 88"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "weak symbol"
              }, 
              "name": "createSyncR(filament::backend::Handle<filament::backend::HwSync>, int)::{lambda()#1} [typeinfo name] 80"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "getSyncStatus(filament::backend::Handle<filament::backend::HwSync>) 80"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "createUniformBufferS() 80"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "createFenceS() 56"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "createSwapChainS() 56"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "createSamplerGroupS() 56"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "createSwapChainHeadlessS() 56"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "wait(filament::backend::Handle<filament::backend::HwFence>, unsigned long) 52"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getTimerQueryValue(filament::backend::Handle<filament::backend::HwTimerQuery>, unsigned long*) 48"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "isTextureFormatMipmappable(filament::backend::TextureFormat) 44"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "getStreamTimestamp(filament::backend::Handle<filament::backend::HwStream>) 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "getClipSpaceParams() 36"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "setStreamDimensions(filament::backend::Handle<filament::backend::HwStream>, unsigned int, unsigned int) 32"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "setupExternalImage(void*) 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_1 [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "weak symbol"
              }, 
              "name": "createSyncR(filament::backend::Handle<filament::backend::HwSync>, int)::{lambda()#1} [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_2 [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "updateStreamAcquired(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_0 [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "weak symbol"
              }, 
              "name": "readPixels(filament::backend::Handle<filament::backend::HwRenderTarget>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&)::{lambda()#1} [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "weak symbol"
              }, 
              "name": "endTimerQuery(filament::backend::Handle<filament::backend::HwTimerQuery>)::{lambda()#1} [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "cancelExternalImage(void*) 16"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isFrameTimeSupported() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isFrameBufferFetchSupported() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getShaderModel() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "canGenerateMipmaps() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 15596, 
            "$dominant_symbol": "code"
          }, 
          "name": "ShadowMap 15.6k", 
          "children": [
            {
              "data": {
                "$area": 5956, 
                "$symbol": "code"
              }, 
              "name": "computeShadowCameraDirectional(filament::math::details::TVec3<float> const&, filament::FScene const*, filament::ShadowMap::CameraInfo const&, filament::FLightManager::ShadowParams const&, unsigned char, filament::ShadowMap::CascadeParameters) 6.0k"
            }, 
            {
              "data": {
                "$area": 1920, 
                "$symbol": "code"
              }, 
              "name": "computeShadowCameraSpot(filament::math::details::TVec3<float> const&, filament::math::details::TVec3<float> const&, float, float, filament::ShadowMap::CameraInfo const&, filament::FLightManager::ShadowParams const&) 1.9k"
            }, 
            {
              "data": {
                "$area": 1092, 
                "$symbol": "code"
              }, 
              "name": "computeSceneCascadeParams(utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&, unsigned long, filament::FView const&, filament::CameraInfo const&, unsigned char, filament::ShadowMap::CascadeParameters&) 1.1k"
            }, 
            {
              "data": {
                "$area": 908, 
                "$symbol": "code"
              }, 
              "name": "applyLISPSM(filament::math::details::TMat44<float>&, filament::ShadowMap::CameraInfo const&, filament::FLightManager::ShadowParams const&, filament::math::details::TMat44<float> const&, std::__ndk1::array<filament::math::details::TVec3<float>, 64ul> const&, unsigned long, filament::math::details::TVec3<float> const&) 908"
            }, 
            {
              "data": {
                "$area": 908, 
                "$symbol": "weak symbol"
              }, 
              "name": "intersectWithShadowCasters(filament::Aabb&, filament::math::details::TMat44<float> const&, filament::Aabb const&) 908"
            }, 
            {
              "data": {
                "$area": 880, 
                "$symbol": "code"
              }, 
              "name": "ShadowMap(filament::FEngine&) 880"
            }, 
            {
              "data": {
                "$area": 772, 
                "$symbol": "code"
              }, 
              "name": "update(utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&, unsigned long, filament::FScene const*, filament::CameraInfo const&, unsigned char, filament::ShadowMap::ShadowMapLayout, filament::ShadowMap::CascadeParameters const&) 772"
            }, 
            {
              "data": {
                "$area": 696, 
                "$symbol": "code"
              }, 
              "name": "intersectFrustumWithBox(std::__ndk1::array<filament::math::details::TVec3<float>, 64ul>&, filament::math::details::TVec3<float> const*, filament::Aabb const&) 696"
            }, 
            {
              "data": {
                "$area": 676, 
                "$symbol": "weak symbol"
              }, 
              "name": "intersectSegmentWithPlanarQuad(filament::math::details::TVec3<float>&, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>) 676"
            }, 
            {
              "data": {
                "$area": 400, 
                "$symbol": "code"
              }, 
              "name": "intersectFrustum(filament::math::details::TVec3<float>*, unsigned long, filament::math::details::TVec3<float> const*, filament::math::details::TVec3<float> const*) 400"
            }, 
            {
              "data": {
                "$area": 356, 
                "$symbol": "code"
              }, 
              "name": "getTextureCoordsMapping() const 356"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "code"
              }, 
              "name": "texelSizeWorldSpace(filament::math::details::TMat44<float> const&, filament::math::details::TMat44<float> const&) const 204"
            }, 
            {
              "data": {
                "$area": 188, 
                "$symbol": "code"
              }, 
              "name": "texelSizeWorldSpace(filament::math::details::TMat33<float> const&) const 188"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "~ShadowMap() 184"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "render(filament::backend::CommandStream&, utils::Range<unsigned int> const&, filament::RenderPass&, filament::FView&) 184"
            }, 
            {
              "data": {
                "$area": 84, 
                "$symbol": "code"
              }, 
              "name": "warpFrustum(float, float) 84"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "computeVsmLightSpaceMatrix(filament::math::details::TMat44<float> const&, filament::math::details::TMat44<float> const&, float) 80"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "directionalLightFrustum(float, float) 60"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "weak symbol"
              }, 
              "name": "sBoxSegments 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "weak symbol"
              }, 
              "name": "sBoxQuads 24"
            }
          ]
        }, 
        {
          "data": {
            "$area": 11864, 
            "$dominant_symbol": "code"
          }, 
          "name": "FView 11.9k", 
          "children": [
            {
              "data": {
                "$area": 2776, 
                "$symbol": "code"
              }, 
              "name": "FView(filament::FEngine&) 2.8k"
            }, 
            {
              "data": {
                "$area": 1876, 
                "$symbol": "code"
              }, 
              "name": "prepare(filament::FEngine&, filament::backend::CommandStream&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::Viewport const&, filament::math::details::TVec4<float> const&) 1.9k"
            }, 
            {
              "data": {
                "$area": 1180, 
                "$symbol": "code"
              }, 
              "name": "prepareLighting(filament::FEngine&, filament::backend::CommandStream&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::Viewport const&) 1.2k"
            }, 
            {
              "data": {
                "$area": 860, 
                "$symbol": "code"
              }, 
              "name": "prepareVisibleLights(filament::FLightManager const&, utils::JobSystem&, filament::Frustum const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>&) 860"
            }, 
            {
              "data": {
                "$area": 540, 
                "$symbol": "code"
              }, 
              "name": "prepareCamera(filament::CameraInfo const&) const 540"
            }, 
            {
              "data": {
                "$area": 468, 
                "$symbol": "weak symbol"
              }, 
              "name": "setAmbientOcclusionOptions(filament::View::AmbientOcclusionOptions) 468"
            }, 
            {
              "data": {
                "$area": 424, 
                "$symbol": "code"
              }, 
              "name": "prepareShadowing(filament::FEngine&, filament::backend::CommandStream&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>&) 424"
            }, 
            {
              "data": {
                "$area": 364, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 364"
            }, 
            {
              "data": {
                "$area": 360, 
                "$symbol": "code"
              }, 
              "name": "commitUniforms(filament::backend::CommandStream&) const 360"
            }, 
            {
              "data": {
                "$area": 300, 
                "$symbol": "code"
              }, 
              "name": "prepareVisibleRenderables(utils::JobSystem&, filament::Frustum const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&) const 300"
            }, 
            {
              "data": {
                "$area": 276, 
                "$symbol": "code"
              }, 
              "name": "updateScale(filament::FrameInfo const&) 276"
            }, 
            {
              "data": {
                "$area": 244, 
                "$symbol": "code"
              }, 
              "name": "computeVisibilityMasks(unsigned char, unsigned char const*, filament::FRenderableManager::Visibility const*, unsigned char*, unsigned long, bool) 244"
            }, 
            {
              "data": {
                "$area": 224, 
                "$symbol": "code"
              }, 
              "name": "commitFrameHistory(filament::FEngine&) 224"
            }, 
            {
              "data": {
                "$area": 224, 
                "$symbol": "code"
              }, 
              "name": "~FView() 224"
            }, 
            {
              "data": {
                "$area": 224, 
                "$symbol": "code"
              }, 
              "name": "drainFrameHistory(filament::FEngine&) 224"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "code"
              }, 
              "name": "prepareViewport(filament::Viewport const&) const 216"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "code"
              }, 
              "name": "partition(utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>*>, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>*>, unsigned char) 204"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "froxelize(filament::FEngine&) const 184"
            }, 
            {
              "data": {
                "$area": 156, 
                "$symbol": "code"
              }, 
              "name": "prepareSSAO(filament::backend::Handle<filament::backend::HwTexture>) const 156"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "cullRenderables(utils::JobSystem&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, filament::Frustum const&, unsigned long) 128"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "setDynamicResolutionOptions(filament::View::DynamicResolutionOptions const&) 128"
            }, 
            {
              "data": {
                "$area": 108, 
                "$symbol": "code"
              }, 
              "name": "cleanupRenderPasses() const 108"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "code"
              }, 
              "name": "prepareSSR(filament::backend::Handle<filament::backend::HwTexture>, float) const 92"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "updatePrimitivesLod(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, utils::Range<unsigned int>) 68"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "prepareShadow(filament::backend::Handle<filament::backend::HwTexture>) const 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "prepareStructure(filament::backend::Handle<filament::backend::HwTexture>) const 48"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "isSkyboxVisible() const 44"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "commitFroxels(filament::backend::CommandStream&) const 36"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "setVisibleLayers(unsigned char, unsigned char) 24"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "renderShadowMaps(filament::FrameGraph&, filament::FEngine&, filament::backend::CommandStream&, filament::RenderPass&) 20"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setViewport(filament::Viewport const&) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setDynamicLightingOptions(float, float) 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 11740, 
            "$dominant_symbol": "code"
          }, 
          "name": "FRenderer 11.7k", 
          "children": [
            {
              "data": {
                "$area": 3980, 
                "$symbol": "code"
              }, 
              "name": "renderJob(utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::FView&) 4.0k"
            }, 
            {
              "data": {
                "$area": 2124, 
                "$symbol": "code"
              }, 
              "name": "colorPass(filament::FrameGraph&, char const*, filament::FrameGraphTexture::Descriptor const&, filament::FRenderer::ColorPassConfig const&, filament::PostProcessManager::ColorGradingConfig, filament::RenderPass const&, filament::FView const&) const 2.1k"
            }, 
            {
              "data": {
                "$area": 1208, 
                "$symbol": "code"
              }, 
              "name": "refractionPass(filament::FrameGraph&, filament::FRenderer::ColorPassConfig, filament::PostProcessManager::ColorGradingConfig, filament::RenderPass const&, filament::FView const&) const 1.2k"
            }, 
            {
              "data": {
                "$area": 936, 
                "$symbol": "code"
              }, 
              "name": "beginFrame(filament::FSwapChain*, unsigned long, void (*)(filament::backend::PresentCallable, void*), void*) 936"
            }, 
            {
              "data": {
                "$area": 560, 
                "$symbol": "code"
              }, 
              "name": "FRenderer(filament::FEngine&) 560"
            }, 
            {
              "data": {
                "$area": 524, 
                "$symbol": "code"
              }, 
              "name": "endFrame() 524"
            }, 
            {
              "data": {
                "$area": 500, 
                "$symbol": "code"
              }, 
              "name": "render(filament::FView const*) 500"
            }, 
            {
              "data": {
                "$area": 468, 
                "$symbol": "code"
              }, 
              "name": "copyFrame(filament::FSwapChain*, filament::Viewport const&, filament::Viewport const&, unsigned int) 468"
            }, 
            {
              "data": {
                "$area": 392, 
                "$symbol": "code"
              }, 
              "name": "readPixels(filament::backend::Handle<filament::backend::HwRenderTarget>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 392"
            }, 
            {
              "data": {
                "$area": 336, 
                "$symbol": "code"
              }, 
              "name": "init() 336"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "~FRenderer() 168"
            }, 
            {
              "data": {
                "$area": 96, 
                "$symbol": "read-only data"
              }, 
              "name": "beginFrame(filament::FSwapChain*, unsigned long, void (*)(filament::backend::PresentCallable, void*), void*)::$_8 [typeinfo name] 96"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 88"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "getHdrFormat(filament::View const&, bool) const 72"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "getRenderTarget(filament::FView&) const 68"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "readPixels(unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 60"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "readPixels(filament::FRenderTarget*, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "resetUserTime() 36"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "initializeClearFlags() 36"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "getLdrFormat(bool) const 32"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "beginFrame(filament::FSwapChain*, unsigned long, void (*)(filament::backend::PresentCallable, void*), void*)::$_8 [typeinfo] 16"
            }
          ]
        }, 
        {
          "data": {
            "$area": 9596, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraph 9.6k", 
          "children": [
            {
              "data": {
                "$area": 2400, 
                "$symbol": "code"
              }, 
              "name": "compile() 2.4k"
            }, 
            {
              "data": {
                "$area": 1296, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraph() 1.3k"
            }, 
            {
              "data": {
                "$area": 832, 
                "$symbol": "code"
              }, 
              "name": "createResourceNode(filament::fg::ResourceEntryBase*) 832"
            }, 
            {
              "data": {
                "$area": 760, 
                "$symbol": "code"
              }, 
              "name": "FrameGraph(filament::ResourceAllocatorInterface&) 760"
            }, 
            {
              "data": {
                "$area": 528, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FEngine&, filament::backend::CommandStream&) 528"
            }, 
            {
              "data": {
                "$area": 504, 
                "$symbol": "code"
              }, 
              "name": "moveResource(filament::FrameGraphId<filament::FrameGraphRenderTarget>, filament::FrameGraphId<filament::FrameGraphTexture>) 504"
            }, 
            {
              "data": {
                "$area": 492, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 492", 
              "children": [
                {
                  "data": {
                    "$area": 288, 
                    "$symbol": "code"
                  }, 
                  "name": "createRenderTargetImpl(char const*, filament::FrameGraphRenderTarget::Descriptor const&) 288"
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "code"
                  }, 
                  "name": "readImpl(filament::FrameGraphHandle) 48"
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "code"
                  }, 
                  "name": "sample(filament::FrameGraphId<filament::FrameGraphTexture>) 48"
                }, 
                {
                  "data": {
                    "$area": 44, 
                    "$symbol": "code"
                  }, 
                  "name": "getName(filament::FrameGraphHandle const&) const 44"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "sideEffect() 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::FrameGraph&, filament::fg::PassNode&) 16"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "getPassName() const 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "writeImpl(filament::FrameGraphHandle) 12"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 448, 
                "$symbol": "code"
              }, 
              "name": "moveResourceBase(filament::FrameGraphHandle, filament::FrameGraphHandle) 448"
            }, 
            {
              "data": {
                "$area": 416, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::backend::CommandStream&) 416"
            }, 
            {
              "data": {
                "$area": 404, 
                "$symbol": "code"
              }, 
              "name": "create(filament::fg::ResourceEntryBase*) 404"
            }, 
            {
              "data": {
                "$area": 320, 
                "$symbol": "code"
              }, 
              "name": "reset() 320"
            }, 
            {
              "data": {
                "$area": 308, 
                "$symbol": "code"
              }, 
              "name": "executeInternal(filament::fg::PassNode const&, filament::backend::CommandStream&) 308"
            }, 
            {
              "data": {
                "$area": 284, 
                "$symbol": "code"
              }, 
              "name": "present(filament::FrameGraphHandle) 284"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "createPass(char const*, filament::FrameGraphPassExecutor*) 148"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "getResourceEntryBase(filament::FrameGraphHandle) 136"
            }, 
            {
              "data": {
                "$area": 132, 
                "$symbol": "code"
              }, 
              "name": "getResourceNode(filament::FrameGraphHandle) 132"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "code"
              }, 
              "name": "equal(filament::FrameGraphHandle, filament::FrameGraphHandle) const 92"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "isValid(filament::FrameGraphHandle) const 56"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getResourceEntryBaseUnchecked(filament::FrameGraphHandle) 20"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getResourceNodeUnchecked(filament::FrameGraphHandle) 16"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "export_graphviz(utils::io::ostream&, char const*) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 9148, 
            "$dominant_symbol": "code"
          }, 
          "name": "ShadowMapManager 9.1k", 
          "children": [
            {
              "data": {
                "$area": 2144, 
                "$symbol": "code"
              }, 
              "name": "render(filament::FrameGraph&, filament::FEngine&, filament::FView&, filament::backend::CommandStream&, filament::RenderPass&) 2.1k"
            }, 
            {
              "data": {
                "$area": 1660, 
                "$symbol": "code"
              }, 
              "name": "updateCascadeShadowMaps(filament::FEngine&, filament::FView&, filament::UniformBuffer&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>&) 1.7k"
            }, 
            {
              "data": {
                "$area": 1384, 
                "$symbol": "code"
              }, 
              "name": "ShadowMapManager(filament::FEngine&) 1.4k"
            }, 
            {
              "data": {
                "$area": 912, 
                "$dominant_symbol": "code"
              }, 
              "name": "CascadeSplits 912", 
              "children": [
                {
                  "data": {
                    "$area": 912, 
                    "$symbol": "code"
                  }, 
                  "name": "CascadeSplits(filament::ShadowMapManager::CascadeSplits::Params) 912"
                }
              ]
            }, 
            {
              "data": {
                "$area": 764, 
                "$symbol": "code"
              }, 
              "name": "updateSpotShadowMaps(filament::FEngine&, filament::FView&, filament::UniformBuffer&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>&) 764"
            }, 
            {
              "data": {
                "$area": 712, 
                "$symbol": "code"
              }, 
              "name": "fillWithDebugPattern(filament::backend::CommandStream&, filament::backend::Handle<filament::backend::HwTexture>, unsigned long) 712"
            }, 
            {
              "data": {
                "$area": 364, 
                "$symbol": "code"
              }, 
              "name": "setShadowCascades(unsigned long, unsigned long) 364"
            }, 
            {
              "data": {
                "$area": 352, 
                "$symbol": "code"
              }, 
              "name": "calculateTextureRequirements(filament::FEngine&, filament::FView&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>&) 352"
            }, 
            {
              "data": {
                "$area": 320, 
                "$symbol": "code"
              }, 
              "name": "addSpotShadowMap(unsigned long) 320"
            }, 
            {
              "data": {
                "$area": 264, 
                "$symbol": "code"
              }, 
              "name": "~ShadowMapManager() 264"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "update(filament::FEngine&, filament::FView&, filament::UniformBuffer&, filament::UniformBuffer&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>&) 148"
            }, 
            {
              "data": {
                "$area": 100, 
                "$symbol": "code"
              }, 
              "name": "prepareShadow(filament::backend::Handle<filament::backend::HwTexture>, filament::FView const&) const 100"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "reset() 20"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "fillWithDebugPattern(filament::backend::CommandStream&, filament::backend::Handle<filament::backend::HwTexture>, unsigned long)::$_4::__invoke(void*, unsigned long, void*) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8784, 
            "$dominant_symbol": "code"
          }, 
          "name": "Froxelizer 8.8k", 
          "children": [
            {
              "data": {
                "$area": 2528, 
                "$symbol": "code"
              }, 
              "name": "update() 2.5k"
            }, 
            {
              "data": {
                "$area": 2320, 
                "$symbol": "code"
              }, 
              "name": "froxelizePointAndSpotLight(std::__ndk1::array<unsigned int, 8192ul>&, unsigned long, filament::math::details::TMat44<float> const&, filament::Froxelizer::LightParams const&) const 2.3k"
            }, 
            {
              "data": {
                "$area": 828, 
                "$symbol": "code"
              }, 
              "name": "froxelizeAssignRecordsCompress() 828"
            }, 
            {
              "data": {
                "$area": 744, 
                "$symbol": "code"
              }, 
              "name": "Froxelizer(filament::FEngine&) 744"
            }, 
            {
              "data": {
                "$area": 544, 
                "$symbol": "code"
              }, 
              "name": "prepare(filament::backend::CommandStream&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::Viewport const&, filament::math::details::TMat44<float> const&, float, float) 544"
            }, 
            {
              "data": {
                "$area": 440, 
                "$symbol": "code"
              }, 
              "name": "computeLightTree(filament::Froxelizer::LightTreeNode*, utils::Slice<unsigned char, unsigned int> const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&, unsigned long) 440"
            }, 
            {
              "data": {
                "$area": 432, 
                "$symbol": "code"
              }, 
              "name": "froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&) 432"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "findSliceZ(float) const 148"
            }, 
            {
              "data": {
                "$area": 144, 
                "$symbol": "code"
              }, 
              "name": "setProjection(filament::math::details::TMat44<float> const&, float, float) 144"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "computeFroxelLayout(filament::math::details::TVec2<unsigned int>*, unsigned short*, unsigned short*, unsigned short*, filament::Viewport const&) 136"
            }, 
            {
              "data": {
                "$area": 108, 
                "$symbol": "code"
              }, 
              "name": "getFroxelAt(unsigned long, unsigned long, unsigned long) const 108"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "setViewport(filament::Viewport const&) 104"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "commit(filament::backend::CommandStream&) 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "clipToIndices(filament::math::details::TVec2<float> const&) const 72"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::backend::CommandStream&) 60"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "setOptions(float, float) 52"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "froxelizeLights(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&) 36"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "~Froxelizer() 16"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8072, 
            "$dominant_symbol": "code"
          }, 
          "name": "FTexture 8.1k", 
          "children": [
            {
              "data": {
                "$area": 3164, 
                "$symbol": "code"
              }, 
              "name": "generatePrefilterMipmap(filament::FEngine&, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets const&, filament::Texture::PrefilterOptions const*) 3.2k"
            }, 
            {
              "data": {
                "$area": 1024, 
                "$symbol": "code"
              }, 
              "name": "FTexture(filament::FEngine&, filament::Texture::Builder const&) 1.0k"
            }, 
            {
              "data": {
                "$area": 744, 
                "$symbol": "code"
              }, 
              "name": "setImage(filament::FEngine&, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) const 744"
            }, 
            {
              "data": {
                "$area": 660, 
                "$symbol": "code"
              }, 
              "name": "setImage(filament::FEngine&, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) const 660"
            }, 
            {
              "data": {
                "$area": 612, 
                "$symbol": "code"
              }, 
              "name": "validatePixelFormatAndType(filament::backend::TextureFormat, filament::backend::PixelDataFormat, filament::backend::PixelDataType) 612"
            }, 
            {
              "data": {
                "$area": 488, 
                "$symbol": "code"
              }, 
              "name": "generateMipmaps(filament::FEngine&) const::$_4::operator()(unsigned short) const 488"
            }, 
            {
              "data": {
                "$area": 432, 
                "$symbol": "code"
              }, 
              "name": "setImage(filament::FEngine&, unsigned long, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets const&) const 432"
            }, 
            {
              "data": {
                "$area": 296, 
                "$symbol": "code"
              }, 
              "name": "generateMipmaps(filament::FEngine&) const 296"
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "computeTextureDataSize(filament::backend::PixelDataFormat, filament::backend::PixelDataType, unsigned long, unsigned long, unsigned long) 140"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "setExternalStream(filament::FEngine&, filament::FStream*) 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "setExternalImage(filament::FEngine&, void*, unsigned long) 124"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "setExternalImage(filament::FEngine&, void*) 120"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "isTextureFormatSupported(filament::FEngine&, filament::backend::TextureFormat) 40"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getHeight(unsigned long) const 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getDepth(unsigned long) const 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getWidth(unsigned long) const 20"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "getFormatSize(filament::backend::TextureFormat) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 7112, 
            "$dominant_symbol": "code"
          }, 
          "name": "FMaterial 7.1k", 
          "children": [
            {
              "data": {
                "$area": 3032, 
                "$symbol": "code"
              }, 
              "name": "FMaterial(filament::FEngine&, filament::Material::Builder const&) 3.0k"
            }, 
            {
              "data": {
                "$area": 712, 
                "$symbol": "code"
              }, 
              "name": "getSurfaceProgramSlow(unsigned char) const 712"
            }, 
            {
              "data": {
                "$area": 632, 
                "$symbol": "code"
              }, 
              "name": "~FMaterial() 632"
            }, 
            {
              "data": {
                "$area": 376, 
                "$symbol": "code"
              }, 
              "name": "getProgramBuilderWithVariants(unsigned char, unsigned char, unsigned char) const 376"
            }, 
            {
              "data": {
                "$area": 352, 
                "$symbol": "code"
              }, 
              "name": "hasParameter(char const*) const 352"
            }, 
            {
              "data": {
                "$area": 328, 
                "$symbol": "code"
              }, 
              "name": "getPostProcessProgramSlow(unsigned char) const 328"
            }, 
            {
              "data": {
                "$area": 312, 
                "$symbol": "code"
              }, 
              "name": "applyPendingEdits() 312"
            }, 
            {
              "data": {
                "$area": 240, 
                "$symbol": "code"
              }, 
              "name": "getParameters(filament::Material::ParameterInfo*, unsigned long) const 240"
            }, 
            {
              "data": {
                "$area": 200, 
                "$symbol": "code"
              }, 
              "name": "isSampler(char const*) const 200"
            }, 
            {
              "data": {
                "$area": 200, 
                "$symbol": "code"
              }, 
              "name": "onQueryCallback(void*, unsigned long*) 200"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "reflect(utils::StaticString const&) const 184"
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "createAndCacheProgram(filament::backend::Program&&, unsigned char) const 140"
            }, 
            {
              "data": {
                "$area": 120, 
                "$dominant_symbol": "code"
              }, 
              "name": "DefaultMaterialBuilder 120", 
              "children": [
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "DefaultMaterialBuilder() 120"
                }
              ]
            }, 
            {
              "data": {
                "$area": 100, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 100"
            }, 
            {
              "data": {
                "$area": 96, 
                "$symbol": "code"
              }, 
              "name": "destroyPrograms(filament::FEngine&) 96"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "onEditCallback(void*, utils::CString const&, void const*, unsigned long) 56"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "createInstance(char const*) const 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getProgramSlow(unsigned char) const 16"
            }
          ]
        }, 
        {
          "data": {
            "$area": 6996, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "FMaterialInstance 7.0k", 
          "children": [
            {
              "data": {
                "$area": 712, 
                "$symbol": "code"
              }, 
              "name": "FMaterialInstance(filament::FEngine&, filament::FMaterial const*, char const*) 712"
            }, 
            {
              "data": {
                "$area": 312, 
                "$symbol": "code"
              }, 
              "name": "initDefaultInstance(filament::FEngine&, filament::FMaterial const*) 312"
            }, 
            {
              "data": {
                "$area": 248, 
                "$symbol": "code"
              }, 
              "name": "commitSlow(filament::backend::CommandStream&) const 248"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "code"
              }, 
              "name": "initialize(filament::FMaterial const*) 216"
            }, 
            {
              "data": {
                "$area": 212, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TMat33<float>, void>(char const*, filament::math::details::TMat33<float> const*, unsigned long) 212"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<float>, void>(char const*, filament::math::details::TVec3<float> const*, unsigned long) 204"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<bool>, void>(char const*, filament::math::details::TVec3<bool> const*, unsigned long) 204"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<unsigned int>, void>(char const*, filament::math::details::TVec3<unsigned int> const*, unsigned long) 204"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<int>, void>(char const*, filament::math::details::TVec3<int> const*, unsigned long) 204"
            }, 
            {
              "data": {
                "$area": 200, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TMat44<float>, void>(char const*, filament::math::details::TMat44<float> const*, unsigned long) 200"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<unsigned int>, void>(char const*, filament::math::details::TVec2<unsigned int> const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<bool, void>(char const*, bool const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<float, void>(char const*, float const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<int, void>(char const*, int const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<unsigned int>, void>(char const*, filament::math::details::TVec4<unsigned int> const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<bool>, void>(char const*, filament::math::details::TVec4<bool> const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<float>, void>(char const*, filament::math::details::TVec4<float> const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<int>, void>(char const*, filament::math::details::TVec4<int> const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<unsigned int, void>(char const*, unsigned int const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<float>, void>(char const*, filament::math::details::TVec2<float> const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<bool>, void>(char const*, filament::math::details::TVec2<bool> const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<int>, void>(char const*, filament::math::details::TVec2<int> const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 160, 
                "$symbol": "code"
              }, 
              "name": "~FMaterialInstance() 160"
            }, 
            {
              "data": {
                "$area": 144, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TMat33<float>, void>(char const*, filament::math::details::TMat33<float>) 144"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "setDoubleSided(bool) 128"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<float>, void>(char const*, filament::math::details::TVec4<float>) 116"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<float>, void>(char const*, filament::math::details::TVec3<float>) 104"
            }, 
            {
              "data": {
                "$area": 96, 
                "$symbol": "code"
              }, 
              "name": "FMaterialInstance() 96"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<int>, void>(char const*, filament::math::details::TVec3<int>) 92"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<unsigned int>, void>(char const*, filament::math::details::TVec3<unsigned int>) 92"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<int>, void>(char const*, filament::math::details::TVec4<int>) 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TMat44<float>, void>(char const*, filament::math::details::TMat44<float>) 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<unsigned int>, void>(char const*, filament::math::details::TVec4<unsigned int>) 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<float>, void>(char const*, filament::math::details::TVec2<float>) 88"
            }, 
            {
              "data": {
                "$area": 84, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<bool>, void>(char const*, filament::math::details::TVec3<bool>) 84"
            }, 
            {
              "data": {
                "$area": 84, 
                "$symbol": "code"
              }, 
              "name": "setParameter(char const*, filament::backend::Handle<filament::backend::HwTexture>, filament::backend::SamplerParams) 84"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "setParameter(char const*, filament::Texture const*, filament::TextureSampler const&) 80"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<float, void>(char const*, float) 80"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<bool, void>(char const*, bool) 76"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<unsigned int, void>(char const*, unsigned int) 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<unsigned int>, void>(char const*, filament::math::details::TVec2<unsigned int>) 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<bool>, void>(char const*, filament::math::details::TVec4<bool>) 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<int, void>(char const*, int) 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<int>, void>(char const*, filament::math::details::TVec2<int>) 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<bool>, void>(char const*, filament::math::details::TVec2<bool>) 72"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 64"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "getName() const 28"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setDepthCulling(bool) 20"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setColorWrite(bool) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setDepthWrite(bool) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setCullingMode(filament::backend::CullingMode) 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 6740, 
            "$dominant_symbol": "code"
          }, 
          "name": "OpenGLContext 6.7k", 
          "children": [
            {
              "data": {
                "$area": 3920, 
                "$symbol": "code"
              }, 
              "name": "OpenGLContext() 3.9k"
            }, 
            {
              "data": {
                "$area": 696, 
                "$symbol": "code"
              }, 
              "name": "initExtensionsGLES(int, int, std::__ndk1::set<utils::StaticString, std::__ndk1::less<utils::StaticString>, std::__ndk1::allocator<utils::StaticString> > const&) 696"
            }, 
            {
              "data": {
                "$area": 512, 
                "$symbol": "code"
              }, 
              "name": "deleteBuffers(int, unsigned int const*, unsigned int) 512"
            }, 
            {
              "data": {
                "$area": 448, 
                "$symbol": "code"
              }, 
              "name": "initExtensionsGL(int, int, std::__ndk1::set<utils::StaticString, std::__ndk1::less<utils::StaticString>, std::__ndk1::allocator<utils::StaticString> > const&) 448"
            }, 
            {
              "data": {
                "$area": 332, 
                "$symbol": "code"
              }, 
              "name": "bindBuffer(unsigned int, unsigned int) 332"
            }, 
            {
              "data": {
                "$area": 280, 
                "$symbol": "code"
              }, 
              "name": "unbindTexture(unsigned int, unsigned int) 280"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "deleteVextexArrays(int, unsigned int const*) 172"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "pixelStore(unsigned int, int) 148"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "hasExtension(std::__ndk1::set<utils::StaticString, std::__ndk1::less<utils::StaticString>, std::__ndk1::allocator<utils::StaticString> > const&, utils::StaticString) 128"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "unbindSampler(unsigned int) 104"
            }
          ]
        }, 
        {
          "data": {
            "$area": 6124, 
            "$dominant_symbol": "code"
          }, 
          "name": "FScene 6.1k", 
          "children": [
            {
              "data": {
                "$area": 1792, 
                "$symbol": "code"
              }, 
              "name": "prepare(filament::math::details::TMat44<float> const&) 1.8k"
            }, 
            {
              "data": {
                "$area": 1448, 
                "$symbol": "code"
              }, 
              "name": "prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>) 1.4k"
            }, 
            {
              "data": {
                "$area": 752, 
                "$symbol": "code"
              }, 
              "name": "updateUBOs(utils::Range<unsigned int>, filament::backend::Handle<filament::backend::HwUniformBuffer>) 752"
            }, 
            {
              "data": {
                "$area": 680, 
                "$symbol": "code"
              }, 
              "name": "~FScene() 680"
            }, 
            {
              "data": {
                "$area": 280, 
                "$symbol": "code"
              }, 
              "name": "FScene(filament::FEngine&) 280"
            }, 
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "getRenderableCount() const 260"
            }, 
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "getLightCount() const 260"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "addEntities(utils::Entity const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 108, 
                "$symbol": "code"
              }, 
              "name": "setSkybox(filament::FSkybox*) 108"
            }, 
            {
              "data": {
                "$area": 100, 
                "$symbol": "code"
              }, 
              "name": "hasEntity(utils::Entity) const 100"
            }, 
            {
              "data": {
                "$area": 96, 
                "$symbol": "code"
              }, 
              "name": "hasContactShadows() const 96"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "removeEntities(utils::Entity const*, unsigned long) 76"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "addEntity(utils::Entity) 48"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "remove(utils::Entity) 44"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 5664, 
            "$dominant_symbol": "code"
          }, 
          "name": "UniformInterfaceBlock 5.7k", 
          "children": [
            {
              "data": {
                "$area": 1872, 
                "$symbol": "code"
              }, 
              "name": "UniformInterfaceBlock(filament::UniformInterfaceBlock::Builder const&) 1.9k"
            }, 
            {
              "data": {
                "$area": 720, 
                "$symbol": "code"
              }, 
              "name": "~UniformInterfaceBlock() 720"
            }, 
            {
              "data": {
                "$area": 700, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 700", 
              "children": [
                {
                  "data": {
                    "$area": 156, 
                    "$symbol": "code"
                  }, 
                  "name": "add(utils::StaticString const&, unsigned long, filament::backend::UniformType, filament::backend::Precision) 156"
                }, 
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "code"
                  }, 
                  "name": "add(utils::CString const&, unsigned long, filament::backend::UniformType, filament::backend::Precision) 144"
                }, 
                {
                  "data": {
                    "$area": 132, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~Builder() 132"
                }, 
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "add(utils::CString&&, unsigned long, filament::backend::UniformType, filament::backend::Precision) 120"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "code"
                  }, 
                  "name": "name(utils::StaticString const&) 80"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "name(utils::CString const&) 36"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "name(utils::CString&&) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "build() 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 512, 
                "$symbol": "code"
              }, 
              "name": "operator=(filament::UniformInterfaceBlock&&) 512"
            }, 
            {
              "data": {
                "$area": 464, 
                "$symbol": "code"
              }, 
              "name": "UniformInterfaceBlock(filament::UniformInterfaceBlock const&) 464"
            }, 
            {
              "data": {
                "$area": 352, 
                "$symbol": "code"
              }, 
              "name": "UniformInterfaceBlock() 352"
            }, 
            {
              "data": {
                "$area": 316, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "Builder& filament 316", 
              "children": [
                {
                  "data": {
                    "$area": 316, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "UniformInterfaceBlock 316", 
                  "children": [
                    {
                      "data": {
                        "$area": 316, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": "Builder 316", 
                      "children": [
                        {
                          "data": {
                            "$area": 316, 
                            "$symbol": "weak symbol"
                          }, 
                          "name": "add<23ul>(char const (&) [23ul], unsigned long, filament::backend::UniformType, filament::backend::Precision) 316"
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 276, 
                "$symbol": "code"
              }, 
              "name": "getUniformOffset(char const*, unsigned long) const 276"
            }, 
            {
              "data": {
                "$area": 200, 
                "$symbol": "code"
              }, 
              "name": "UniformInterfaceBlock(filament::UniformInterfaceBlock&&) 200"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "operator=(filament::UniformInterfaceBlock const&) 116"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "strideForType(filament::backend::UniformType) 76"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "baseAlignmentForType(filament::backend::UniformType) 60"
            }
          ]
        }, 
        {
          "data": {
            "$area": 5567, 
            "$dominant_symbol": "code"
          }, 
          "name": "fg 5.6k", 
          "children": [
            {
              "data": {
                "$area": 2880, 
                "$dominant_symbol": "code"
              }, 
              "name": "PassNode 2.9k", 
              "children": [
                {
                  "data": {
                    "$area": 600, 
                    "$symbol": "code"
                  }, 
                  "name": "PassNode(filament::fg::PassNode&&) 600"
                }, 
                {
                  "data": {
                    "$area": 552, 
                    "$symbol": "code"
                  }, 
                  "name": "write(filament::FrameGraph&, filament::FrameGraphHandle const&) 552"
                }, 
                {
                  "data": {
                    "$area": 476, 
                    "$symbol": "code"
                  }, 
                  "name": "use(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphRenderTarget>) 476"
                }, 
                {
                  "data": {
                    "$area": 476, 
                    "$symbol": "code"
                  }, 
                  "name": "sample(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>) 476"
                }, 
                {
                  "data": {
                    "$area": 416, 
                    "$symbol": "code"
                  }, 
                  "name": "read(filament::FrameGraph&, filament::FrameGraphHandle) 416"
                }, 
                {
                  "data": {
                    "$area": 208, 
                    "$symbol": "code"
                  }, 
                  "name": "~PassNode() 208"
                }, 
                {
                  "data": {
                    "$area": 152, 
                    "$symbol": "code"
                  }, 
                  "name": "PassNode(filament::FrameGraph&, char const*, unsigned int, filament::FrameGraphPassExecutor*) 152"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1492, 
                "$dominant_symbol": "code"
              }, 
              "name": "RenderTargetResourceEntry 1.5k", 
              "children": [
                {
                  "data": {
                    "$area": 532, 
                    "$symbol": "code"
                  }, 
                  "name": "preExecuteDevirtualize(filament::FrameGraph&) 532"
                }, 
                {
                  "data": {
                    "$area": 476, 
                    "$symbol": "code"
                  }, 
                  "name": "update(filament::FrameGraph&, filament::fg::PassNode const&) 476"
                }, 
                {
                  "data": {
                    "$area": 328, 
                    "$symbol": "code"
                  }, 
                  "name": "resolve(filament::FrameGraph&) 328"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "code"
                  }, 
                  "name": "postExecuteDestroy(filament::FrameGraph&) 80"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~RenderTargetResourceEntry() 36"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "postExecuteDevirtualize(filament::FrameGraph&) 20"
                }, 
                {
                  "data": {
                    "$area": 6, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "resolve(filament::FrameGraph&)::usages 6"
                }, 
                {
                  "data": {
                    "$area": 6, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "resolve(filament::FrameGraph&)::flags 6"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "preExecuteDestroy(filament::FrameGraph&) 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "asRenderTargetResourceEntry() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 343, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "ResourceEntry<filament::FrameGraphTexture> 343", 
              "children": [
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [vtable] 80"
                }, 
                {
                  "data": {
                    "$area": 76, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "preExecuteDevirtualize(filament::FrameGraph&) 76"
                }, 
                {
                  "data": {
                    "$area": 68, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "postExecuteDestroy(filament::FrameGraph&) 68"
                }, 
                {
                  "data": {
                    "$area": 55, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 55"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~ResourceEntry() 36"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "resolve(filament::FrameGraph&) 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 332, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "ResourceEntry<filament::FrameGraphRenderTarget> 332", 
              "children": [
                {
                  "data": {
                    "$area": 88, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "postExecuteDestroy(filament::FrameGraph&) 88"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [vtable] 80"
                }, 
                {
                  "data": {
                    "$area": 60, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 60"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "preExecuteDevirtualize(filament::FrameGraph&) 40"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~ResourceEntry() 36"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "resolve(filament::FrameGraph&) 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 104, 
                "$dominant_symbol": "code"
              }, 
              "name": "ResourceEntryBase 104", 
              "children": [
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "code"
                  }, 
                  "name": "ResourceEntryBase(char const*, unsigned short, bool, unsigned char) 56"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "~ResourceEntryBase() 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "preExecuteDestroy(filament::FrameGraph&) 12"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "getResourceAllocator(filament::FrameGraph&) 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "postExecuteDevirtualize(filament::FrameGraph&) 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "asRenderTargetResourceEntry() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "data"
              }, 
              "name": "RenderTargetResourceEntry [vtable] 80"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "data"
              }, 
              "name": "ResourceEntryBase [vtable] 80"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "data"
              }, 
              "name": "VirtualResource [vtable] 72"
            }, 
            {
              "data": {
                "$area": 42, 
                "$symbol": "read-only data"
              }, 
              "name": "RenderTargetResourceEntry [typeinfo name] 42"
            }, 
            {
              "data": {
                "$area": 34, 
                "$symbol": "read-only data"
              }, 
              "name": "ResourceEntryBase [typeinfo name] 34"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "read-only data"
              }, 
              "name": "VirtualResource [typeinfo name] 32"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "RenderTargetResourceEntry [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ResourceEntryBase [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "VirtualResource [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$dominant_symbol": "code"
              }, 
              "name": "VirtualResource 12", 
              "children": [
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "~VirtualResource() 12"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 5256, 
            "$dominant_symbol": "code"
          }, 
          "name": "SamplerInterfaceBlock 5.3k", 
          "children": [
            {
              "data": {
                "$area": 1472, 
                "$symbol": "code"
              }, 
              "name": "SamplerInterfaceBlock(filament::SamplerInterfaceBlock::Builder const&) 1.5k"
            }, 
            {
              "data": {
                "$area": 900, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 900", 
              "children": [
                {
                  "data": {
                    "$area": 264, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 264"
                }, 
                {
                  "data": {
                    "$area": 180, 
                    "$symbol": "code"
                  }, 
                  "name": "add(utils::StaticString const&, filament::backend::SamplerType, filament::backend::SamplerFormat, filament::backend::Precision, bool) 180"
                }, 
                {
                  "data": {
                    "$area": 168, 
                    "$symbol": "code"
                  }, 
                  "name": "add(utils::CString const&, filament::backend::SamplerType, filament::backend::SamplerFormat, filament::backend::Precision, bool) 168"
                }, 
                {
                  "data": {
                    "$area": 140, 
                    "$symbol": "code"
                  }, 
                  "name": "add(utils::CString&&, filament::backend::SamplerType, filament::backend::SamplerFormat, filament::backend::Precision, bool) 140"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "code"
                  }, 
                  "name": "name(utils::StaticString const&) 80"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "name(utils::CString const&) 36"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "name(utils::CString&&) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "build() 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 720, 
                "$symbol": "code"
              }, 
              "name": "~SamplerInterfaceBlock() 720"
            }, 
            {
              "data": {
                "$area": 512, 
                "$symbol": "code"
              }, 
              "name": "operator=(filament::SamplerInterfaceBlock&&) 512"
            }, 
            {
              "data": {
                "$area": 464, 
                "$symbol": "code"
              }, 
              "name": "SamplerInterfaceBlock(filament::SamplerInterfaceBlock const&) 464"
            }, 
            {
              "data": {
                "$area": 352, 
                "$symbol": "code"
              }, 
              "name": "SamplerInterfaceBlock() 352"
            }, 
            {
              "data": {
                "$area": 272, 
                "$symbol": "code"
              }, 
              "name": "SamplerInterfaceBlock(filament::SamplerInterfaceBlock&&) 272"
            }, 
            {
              "data": {
                "$area": 244, 
                "$symbol": "code"
              }, 
              "name": "getSamplerInfo(char const*) const 244"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "code"
              }, 
              "name": "getUniformName(char const*, char const*) 204"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "operator=(filament::SamplerInterfaceBlock const&) 116"
            }
          ]
        }, 
        {
          "data": {
            "$area": 5076, 
            "$dominant_symbol": "code"
          }, 
          "name": "RenderPass 5.1k", 
          "children": [
            {
              "data": {
                "$area": 1148, 
                "$symbol": "weak symbol"
              }, 
              "name": "generateCommandsImpl<1u>(unsigned int, filament::RenderPass::Command*, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int> const&, utils::Range<unsigned int>, unsigned char, unsigned char, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>) 1.1k"
            }, 
            {
              "data": {
                "$area": 900, 
                "$symbol": "code"
              }, 
              "name": "recordDriverCommands(filament::backend::CommandStream&, filament::RenderPass::Command const*, filament::RenderPass::Command const*) const 900"
            }, 
            {
              "data": {
                "$area": 720, 
                "$symbol": "weak symbol"
              }, 
              "name": "generateCommandsImpl<2u>(unsigned int, filament::RenderPass::Command*, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int> const&, utils::Range<unsigned int>, unsigned char, unsigned char, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>) 720"
            }, 
            {
              "data": {
                "$area": 632, 
                "$symbol": "code"
              }, 
              "name": "appendCommands(filament::RenderPass::CommandTypeFlags) 632"
            }, 
            {
              "data": {
                "$area": 400, 
                "$symbol": "code"
              }, 
              "name": "RenderPass(filament::FEngine&, utils::GrowingSlice<filament::RenderPass::Command, unsigned int>) 400"
            }, 
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "sortCommands() 260"
            }, 
            {
              "data": {
                "$area": 232, 
                "$symbol": "code"
              }, 
              "name": "~RenderPass() 232"
            }, 
            {
              "data": {
                "$area": 220, 
                "$symbol": "code"
              }, 
              "name": "appendCustomCommand(filament::RenderPass::Pass, filament::RenderPass::CustomCommand, unsigned int, std::__ndk1::function<void ()>) 220"
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "updateSummedPrimitiveCounts(utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, utils::Range<unsigned int>) 140"
            }, 
            {
              "data": {
                "$area": 132, 
                "$symbol": "code"
              }, 
              "name": "execute(char const*, filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::RenderPassParams) const 132"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "RenderPass(filament::RenderPass const&) 120"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "weak symbol"
              }, 
              "name": "generateCommands(unsigned int, filament::RenderPass::Command*, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int> const&, utils::Range<unsigned int>, unsigned char, unsigned char, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>) 56"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "newCommandBuffer() 32"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "overridePolygonOffset(filament::backend::PolygonOffset*) 28"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "executeCommands(char const*) const 20"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "setGeometry(utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int> const&, utils::Range<unsigned int>, filament::backend::Handle<filament::backend::HwUniformBuffer>) 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setCamera(filament::CameraInfo const&) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setRenderFlags(unsigned char) 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 5004, 
            "$dominant_symbol": "code"
          }, 
          "name": "geometry 5.0k", 
          "children": [
            {
              "data": {
                "$area": 3700, 
                "$dominant_symbol": "code"
              }, 
              "name": "OrientationBuilderImpl 3.7k", 
              "children": [
                {
                  "data": {
                    "$area": 2040, 
                    "$symbol": "code"
                  }, 
                  "name": "buildWithUvs() 2.0k"
                }, 
                {
                  "data": {
                    "$area": 652, 
                    "$symbol": "code"
                  }, 
                  "name": "buildWithSuppliedTangents() 652"
                }, 
                {
                  "data": {
                    "$area": 620, 
                    "$symbol": "code"
                  }, 
                  "name": "buildWithNormalsOnly() 620"
                }, 
                {
                  "data": {
                    "$area": 388, 
                    "$symbol": "code"
                  }, 
                  "name": "buildWithFlatNormals() 388"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1304, 
                "$dominant_symbol": "code"
              }, 
              "name": "SurfaceOrientation 1.3k", 
              "children": [
                {
                  "data": {
                    "$area": 612, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "Builder 612", 
                  "children": [
                    {
                      "data": {
                        "$area": 288, 
                        "$symbol": "code"
                      }, 
                      "name": "build() 288"
                    }, 
                    {
                      "data": {
                        "$area": 120, 
                        "$symbol": "code"
                      }, 
                      "name": "Builder() 120"
                    }, 
                    {
                      "data": {
                        "$area": 40, 
                        "$symbol": "code"
                      }, 
                      "name": "Builder(filament::geometry::SurfaceOrientation::Builder&&) 40"
                    }, 
                    {
                      "data": {
                        "$area": 32, 
                        "$symbol": "code"
                      }, 
                      "name": "~Builder() 32"
                    }, 
                    {
                      "data": {
                        "$area": 20, 
                        "$symbol": "code"
                      }, 
                      "name": "operator=(filament::geometry::SurfaceOrientation::Builder&&) 20"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "tangents(filament::math::details::TVec4<float> const*, unsigned long) 16"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "uvs(filament::math::details::TVec2<float> const*, unsigned long) 16"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "positions(filament::math::details::TVec3<float> const*, unsigned long) 16"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "normals(filament::math::details::TVec3<float> const*, unsigned long) 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "triangles(filament::math::details::TVec3<unsigned short> const*) 12"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "vertexCount(unsigned long) 12"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "triangles(filament::math::details::TVec3<unsigned int> const*) 12"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "triangleCount(unsigned long) 12"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "getQuats(filament::math::details::TVec4<short>*, unsigned long, unsigned long) const 200"
                }, 
                {
                  "data": {
                    "$area": 184, 
                    "$symbol": "code"
                  }, 
                  "name": "getQuats(filament::math::details::TQuaternion<float>*, unsigned long, unsigned long) const 184"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "~SurfaceOrientation() 128"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "code"
                  }, 
                  "name": "getQuats(filament::math::details::TQuaternion<half>*, unsigned long, unsigned long) const 84"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "SurfaceOrientation(filament::geometry::SurfaceOrientation&&) 40"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::geometry::SurfaceOrientation&&) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "getVertexCount() const 20"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "SurfaceOrientation(filament::geometry::OrientationImpl*) 16"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 4780, 
            "$dominant_symbol": "code"
          }, 
          "name": "MaterialParser 4.8k", 
          "children": [
            {
              "data": {
                "$area": 3216, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "MaterialParserDetails 3.2k", 
              "children": [
                {
                  "data": {
                    "$area": 1144, 
                    "$symbol": "code"
                  }, 
                  "name": "MaterialParserDetails(filament::backend::Backend, void const*, unsigned long) 1.1k"
                }, 
                {
                  "data": {
                    "$area": 636, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~MaterialParserDetails() 636"
                }, 
                {
                  "data": {
                    "$area": 348, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "getFromSimpleChunk<unsigned long>(filamat::ChunkType, unsigned long*) const 348"
                }, 
                {
                  "data": {
                    "$area": 300, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "getFromSimpleChunk<unsigned int>(filamat::ChunkType, unsigned int*) const 300"
                }, 
                {
                  "data": {
                    "$area": 268, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "getFromSimpleChunk<bool>(filamat::ChunkType, bool*) const 268"
                }, 
                {
                  "data": {
                    "$area": 260, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "getFromSimpleChunk<float>(filamat::ChunkType, float*) const 260"
                }, 
                {
                  "data": {
                    "$area": 260, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "getFromSimpleChunk<unsigned char>(filamat::ChunkType, unsigned char*) const 260"
                }
              ]
            }, 
            {
              "data": {
                "$area": 284, 
                "$symbol": "code"
              }, 
              "name": "parse() 284"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "getSIB(filament::SamplerInterfaceBlock*) const 184"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "getUIB(filament::UniformInterfaceBlock*) const 184"
            }, 
            {
              "data": {
                "$area": 180, 
                "$symbol": "code"
              }, 
              "name": "getName(utils::CString*) const 180"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "getRequiredAttributes(utils::bitset<unsigned int, 1ul, void>*) const 80"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "getShader(filaflat::ShaderBuilder&, filament::backend::ShaderModel, unsigned char, filament::backend::ShaderType) 52"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getInterpolation(filament::Interpolation*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getShaderModels(unsigned int*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getDoubleSided(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getMaskThreshold(float*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getDepthTest(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "hasSpecularAntiAliasing(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "hasShadowMultiplier(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getBlendingMode(filament::BlendingMode*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getDepthWrite(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getSpecularAntiAliasingVariance(float*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "hasCustomDepthShader(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getDepthWriteSet(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getMaterialDomain(filament::MaterialDomain*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getSpecularAntiAliasingThreshold(float*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getVertexDomain(filament::VertexDomain*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getRefractionType(filament::RefractionType*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getMaterialVersion(unsigned int*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getMaterialProperties(unsigned long*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getDoubleSidedSet(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getRefractionMode(filament::RefractionMode*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getShading(filament::Shading*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getColorWrite(bool*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getCullingMode(filament::backend::CullingMode*) const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getTransparencyMode(filament::TransparencyMode*) const 24"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getChunkContainer() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "MaterialParser(filament::backend::Backend, void const*, unsigned long) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getChunkContainer() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 4552, 
            "$dominant_symbol": "code"
          }, 
          "name": "tonemap 4.6k", 
          "children": [
            {
              "data": {
                "$area": 1772, 
                "$symbol": "code"
              }, 
              "name": "ACES_Legacy(filament::math::details::TVec3<float>) 1.8k"
            }, 
            {
              "data": {
                "$area": 1748, 
                "$symbol": "code"
              }, 
              "name": "ACES(filament::math::details::TVec3<float>) 1.7k"
            }, 
            {
              "data": {
                "$area": 616, 
                "$symbol": "code"
              }, 
              "name": "Uchimura(filament::math::details::TVec3<float>) 616"
            }, 
            {
              "data": {
                "$area": 220, 
                "$symbol": "code"
              }, 
              "name": "DisplayRange(filament::math::details::TVec3<float>) 220"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "weak symbol"
              }, 
              "name": "Filmic(filament::math::details::TVec3<float>) 104"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "weak symbol"
              }, 
              "name": "Reinhard(filament::math::details::TVec3<float>) 88"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "Linear(filament::math::details::TVec3<float>) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 4344, 
            "$dominant_symbol": "code"
          }, 
          "name": "FRenderableManager 4.3k", 
          "children": [
            {
              "data": {
                "$area": 1252, 
                "$symbol": "code"
              }, 
              "name": "create(filament::RenderableManager::Builder const&, utils::Entity) 1.3k"
            }, 
            {
              "data": {
                "$area": 720, 
                "$symbol": "code"
              }, 
              "name": "~FRenderableManager() 720"
            }, 
            {
              "data": {
                "$area": 452, 
                "$symbol": "code"
              }, 
              "name": "makeBone(filament::PerRenderableUibBone*, filament::math::details::TMat44<float> const&) 452"
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "prepare(filament::backend::CommandStream&, utils::EntityInstance<filament::RenderableManager, false> const*, utils::Range<unsigned int>) const 236"
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "setMaterialInstanceAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned char, unsigned long, filament::FMaterialInstance const*) 236"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "code"
              }, 
              "name": "terminate() 216"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 216"
            }, 
            {
              "data": {
                "$area": 208, 
                "$symbol": "weak symbol"
              }, 
              "name": "gc(utils::EntityManager&) 208"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "setGeometryAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned char, unsigned long, filament::backend::PrimitiveType, filament::FVertexBuffer*, filament::FIndexBuffer*, unsigned long, unsigned long) 184"
            }, 
            {
              "data": {
                "$area": 176, 
                "$symbol": "code"
              }, 
              "name": "destroyComponent(utils::EntityInstance<filament::RenderableManager, false>) 176"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "destroyComponentPrimitives(filament::FEngine&, utils::Slice<filament::FRenderPrimitive, unsigned int>&) 116"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "FRenderableManager(filament::FEngine&) 80"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "setGeometryAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned char, unsigned long, filament::backend::PrimitiveType, unsigned long, unsigned long) 76"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getMaterialInstanceAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned char, unsigned long) const 60"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getEnabledAttributesAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned char, unsigned long) const 60"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "setBlendOrderAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned char, unsigned long, unsigned short) 56"
            }
          ]
        }, 
        {
          "data": {
            "$area": 4172, 
            "$dominant_symbol": "code"
          }, 
          "name": "UibGenerator 4.2k", 
          "children": [
            {
              "data": {
                "$area": 2524, 
                "$symbol": "code"
              }, 
              "name": "getPerViewUib() 2.5k"
            }, 
            {
              "data": {
                "$area": 608, 
                "$symbol": "code"
              }, 
              "name": "getPerRenderableUib() 608"
            }, 
            {
              "data": {
                "$area": 376, 
                "$symbol": "code"
              }, 
              "name": "getShadowUib() 376"
            }, 
            {
              "data": {
                "$area": 332, 
                "$symbol": "code"
              }, 
              "name": "getPerRenderableBonesUib() 332"
            }, 
            {
              "data": {
                "$area": 332, 
                "$symbol": "code"
              }, 
              "name": "getLightsUib() 332"
            }
          ]
        }, 
        {
          "data": {
            "$area": 4064, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameInfoManager 4.1k", 
          "children": [
            {
              "data": {
                "$area": 2488, 
                "$symbol": "code"
              }, 
              "name": "FrameInfoManager(filament::FEngine&) 2.5k"
            }, 
            {
              "data": {
                "$area": 1124, 
                "$symbol": "code"
              }, 
              "name": "update(filament::FrameInfoManager::Config const&, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >) 1.1k"
            }, 
            {
              "data": {
                "$area": 196, 
                "$symbol": "code"
              }, 
              "name": "beginFrame(filament::FrameInfoManager::Config const&, unsigned int) 196"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "terminate() 184"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "endFrame() 64"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~FrameInfoManager() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 3808, 
            "$dominant_symbol": "code"
          }, 
          "name": "FTransformManager 3.8k", 
          "children": [
            {
              "data": {
                "$area": 648, 
                "$symbol": "code"
              }, 
              "name": "swapNode(utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>) 648"
            }, 
            {
              "data": {
                "$area": 544, 
                "$symbol": "code"
              }, 
              "name": "~FTransformManager() 544"
            }, 
            {
              "data": {
                "$area": 368, 
                "$symbol": "code"
              }, 
              "name": "create(utils::Entity, utils::EntityInstance<filament::TransformManager, false>, filament::math::details::TMat44<float> const&) 368"
            }, 
            {
              "data": {
                "$area": 320, 
                "$symbol": "code"
              }, 
              "name": "setParent(utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>) 320"
            }, 
            {
              "data": {
                "$area": 288, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 288"
            }, 
            {
              "data": {
                "$area": 268, 
                "$symbol": "code"
              }, 
              "name": "commitLocalTransformTransaction() 268"
            }, 
            {
              "data": {
                "$area": 208, 
                "$symbol": "code"
              }, 
              "name": "setTransform(utils::EntityInstance<filament::TransformManager, false>, filament::math::details::TMat44<float> const&) 208"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "code"
              }, 
              "name": "gc(utils::EntityManager&) 204"
            }, 
            {
              "data": {
                "$area": 192, 
                "$symbol": "code"
              }, 
              "name": "transformChildren(filament::FTransformManager::Sim&, utils::EntityInstance<filament::TransformManager, false>) 192"
            }, 
            {
              "data": {
                "$area": 180, 
                "$symbol": "code"
              }, 
              "name": "updateNodeTransform(utils::EntityInstance<filament::TransformManager, false>) 180"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "updateNode(utils::EntityInstance<filament::TransformManager, false>) 112"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "getChildren(utils::EntityInstance<filament::TransformManager, false>, utils::Entity*, unsigned long) const 76"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "insertNode(utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>) 76"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "FTransformManager() 72"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "removeNode(utils::EntityInstance<filament::TransformManager, false>) 68"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "create(utils::Entity) 64"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getChildCount(utils::EntityInstance<filament::TransformManager, false>) const 48"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "getParent(utils::EntityInstance<filament::TransformManager, false>) const 32"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "openLocalTransformTransaction() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getChildrenBegin(utils::EntityInstance<filament::TransformManager, false>) const 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getChildrenEnd(utils::EntityInstance<filament::TransformManager, false>) const 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "validateNode(utils::EntityInstance<filament::TransformManager, false>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "terminate() 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 3412, 
            "$dominant_symbol": "code"
          }, 
          "name": "RenderableManager 3.4k", 
          "children": [
            {
              "data": {
                "$area": 2260, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 2.3k", 
              "children": [
                {
                  "data": {
                    "$area": 784, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(unsigned long) 784"
                }, 
                {
                  "data": {
                    "$area": 672, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&, utils::Entity) 672"
                }, 
                {
                  "data": {
                    "$area": 132, 
                    "$symbol": "code"
                  }, 
                  "name": "geometry(unsigned long, filament::backend::PrimitiveType, filament::VertexBuffer*, filament::IndexBuffer*, unsigned long, unsigned long) 132"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 128"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "geometry(unsigned long, filament::backend::PrimitiveType, filament::VertexBuffer*, filament::IndexBuffer*) 128"
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "code"
                  }, 
                  "name": "geometry(unsigned long, filament::backend::PrimitiveType, filament::VertexBuffer*, filament::IndexBuffer*, unsigned long, unsigned long, unsigned long, unsigned long) 48"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "material(unsigned long, filament::MaterialInstance const*) 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "blendOrder(unsigned long, unsigned short) 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::RenderableManager::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "receiveShadows(bool) 28"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "morphing(bool) 28"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "screenSpaceContactShadows(bool) 28"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "priority(unsigned char) 28"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "layerMask(unsigned char, unsigned char) 28"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "castShadows(bool) 28"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "boundingBox(filament::Box const&) 24"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "culling(bool) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::RenderableManager::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "skinning(unsigned long, filament::math::details::TMat44<float> const*) 16"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "skinning(unsigned long) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "skinning(unsigned long, filament::RenderableManager::Bone const*) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "setGeometryAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned long, filament::backend::PrimitiveType, filament::VertexBuffer*, filament::IndexBuffer*, unsigned long, unsigned long) 172"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "setBones(utils::EntityInstance<filament::RenderableManager, false>, filament::RenderableManager::Bone const*, unsigned long, unsigned long) 136"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "setBones(utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float> const*, unsigned long, unsigned long) 124"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "setGeometryAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned long, filament::backend::PrimitiveType, unsigned long, unsigned long) 80"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getMaterialInstanceAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned long) const 60"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getEnabledAttributesAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned long) const 60"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "setBlendOrderAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned long, unsigned short) 56"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "setAxisAlignedBoundingBox(utils::EntityInstance<filament::RenderableManager, false>, filament::Box const&) 44"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setScreenSpaceContactShadows(utils::EntityInstance<filament::RenderableManager, false>, bool) 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setReceiveShadows(utils::EntityInstance<filament::RenderableManager, false>, bool) 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setCastShadows(utils::EntityInstance<filament::RenderableManager, false>, bool) 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setCulling(utils::EntityInstance<filament::RenderableManager, false>, bool) 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "setLayerMask(utils::EntityInstance<filament::RenderableManager, false>, unsigned char, unsigned char) 36"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "setPriority(utils::EntityInstance<filament::RenderableManager, false>, unsigned char) 36"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "hasComponent(utils::Entity) const 32"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "getInstance(utils::Entity) const 28"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setMaterialInstanceAt(utils::EntityInstance<filament::RenderableManager, false>, unsigned long, filament::MaterialInstance const*) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setMorphWeights(utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TVec4<float> const&) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getAxisAlignedBoundingBox(utils::EntityInstance<filament::RenderableManager, false>) const 20"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getPrimitiveCount(utils::EntityInstance<filament::RenderableManager, false>) const 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "isShadowCaster(utils::EntityInstance<filament::RenderableManager, false>) const 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "isShadowReceiver(utils::EntityInstance<filament::RenderableManager, false>) const 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getLayerMask(utils::EntityInstance<filament::RenderableManager, false>) const 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 3304, 
            "$dominant_symbol": "code"
          }, 
          "name": "LightManager 3.3k", 
          "children": [
            {
              "data": {
                "$area": 1736, 
                "$dominant_symbol": "code"
              }, 
              "name": "ShadowCascades 1.7k", 
              "children": [
                {
                  "data": {
                    "$area": 956, 
                    "$symbol": "code"
                  }, 
                  "name": "computePracticalSplits(float*, unsigned char, float, float, float) 956"
                }, 
                {
                  "data": {
                    "$area": 492, 
                    "$symbol": "code"
                  }, 
                  "name": "computeLogSplits(float*, unsigned char, float, float) 492"
                }, 
                {
                  "data": {
                    "$area": 288, 
                    "$symbol": "code"
                  }, 
                  "name": "computeUniformSplits(float*, unsigned char) 288"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1068, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 1.1k", 
              "children": [
                {
                  "data": {
                    "$area": 408, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::LightManager::Type) 408"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::LightManager::Builder const&) 200"
                }, 
                {
                  "data": {
                    "$area": 60, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::LightManager::Builder const&) 60"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&, utils::Entity) 40"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "intensity(float, float) 36"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "shadowOptions(filament::LightManager::ShadowOptions const&) 36"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::LightManager::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "color(filament::math::details::TVec3<float> const&) 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "position(filament::math::details::TVec3<float> const&) 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "direction(filament::math::details::TVec3<float> const&) 24"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::LightManager::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "intensityCandela(float) 20"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "intensity(float) 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "spotLightCone(float, float) 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "castLight(bool) 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "castShadows(bool) 16"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "sunAngularRadius(float) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "falloff(float) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "sunHaloSize(float) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "sunHaloFalloff(float) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 60"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setShadowOptions(utils::EntityInstance<filament::LightManager, false>, filament::LightManager::ShadowOptions const&) 40"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "hasComponent(utils::Entity) const 32"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "getInstance(utils::Entity) const 28"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "getSunAngularRadius(utils::EntityInstance<filament::LightManager, false>) const 28"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getSpotLightOuterCone(utils::EntityInstance<filament::LightManager, false>) const 24"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getColor(utils::EntityInstance<filament::LightManager, false>) const 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getDirection(utils::EntityInstance<filament::LightManager, false>) const 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getPosition(utils::EntityInstance<filament::LightManager, false>) const 20"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getType(utils::EntityInstance<filament::LightManager, false>) const 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getShadowOptions(utils::EntityInstance<filament::LightManager, false>) const 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "isShadowCaster(utils::EntityInstance<filament::LightManager, false>) const 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "setDirection(utils::EntityInstance<filament::LightManager, false>, filament::math::details::TVec3<float> const&) 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getSunHaloSize(utils::EntityInstance<filament::LightManager, false>) const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getEntities() const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setIntensity(utils::EntityInstance<filament::LightManager, false>, float) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setIntensityCandela(utils::EntityInstance<filament::LightManager, false>, float) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getFalloff(utils::EntityInstance<filament::LightManager, false>) const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getComponentCount() const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getSunHaloFalloff(utils::EntityInstance<filament::LightManager, false>) const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getIntensity(utils::EntityInstance<filament::LightManager, false>) const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setShadowCaster(utils::EntityInstance<filament::LightManager, false>, bool) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setSunHaloSize(utils::EntityInstance<filament::LightManager, false>, float) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setFalloff(utils::EntityInstance<filament::LightManager, false>, float) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setColor(utils::EntityInstance<filament::LightManager, false>, filament::math::details::TVec3<float> const&) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setPosition(utils::EntityInstance<filament::LightManager, false>, filament::math::details::TVec3<float> const&) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setSpotLightCone(utils::EntityInstance<filament::LightManager, false>, float, float) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setSunHaloFalloff(utils::EntityInstance<filament::LightManager, false>, float) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setSunAngularRadius(utils::EntityInstance<filament::LightManager, false>, float) 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 3228, 
            "$dominant_symbol": "code"
          }, 
          "name": "OpenGLProgram 3.2k", 
          "children": [
            {
              "data": {
                "$area": 2104, 
                "$symbol": "code"
              }, 
              "name": "OpenGLProgram(filament::OpenGLDriver*, filament::backend::Program const&) 2.1k"
            }, 
            {
              "data": {
                "$area": 472, 
                "$symbol": "code"
              }, 
              "name": "updateSamplers(filament::OpenGLDriver*) 472"
            }, 
            {
              "data": {
                "$area": 340, 
                "$symbol": "code"
              }, 
              "name": "logCompilationError(utils::io::ostream&, unsigned int, char const*) 340"
            }, 
            {
              "data": {
                "$area": 312, 
                "$symbol": "code"
              }, 
              "name": "~OpenGLProgram() 312"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2964, 
            "$dominant_symbol": "code"
          }, 
          "name": "ResourceAllocator 3.0k", 
          "children": [
            {
              "data": {
                "$area": 868, 
                "$symbol": "code"
              }, 
              "name": "destroyTexture(filament::backend::Handle<filament::backend::HwTexture>) 868"
            }, 
            {
              "data": {
                "$area": 660, 
                "$symbol": "code"
              }, 
              "name": "createTexture(char const*, filament::backend::SamplerType, unsigned char, filament::backend::TextureFormat, unsigned char, unsigned int, unsigned int, unsigned int, filament::backend::TextureUsage) 660"
            }, 
            {
              "data": {
                "$area": 356, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "AssociativeContainer<filament::backend::Handle<filament::backend::HwTexture>, filament::ResourceAllocator::TextureKey, filament::ResourceAllocator::Hasher<filament::backend::Handle<filament::backend::HwTexture> > > 356", 
              "children": [
                {
                  "data": {
                    "$area": 356, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "emplace<filament::backend::Handle<filament::backend::HwTexture>&, filament::ResourceAllocator::TextureKey const&>(filament::backend::Handle<filament::backend::HwTexture>&, filament::ResourceAllocator::TextureKey const&) 356"
                }
              ]
            }, 
            {
              "data": {
                "$area": 248, 
                "$symbol": "code"
              }, 
              "name": "~ResourceAllocator() 248"
            }, 
            {
              "data": {
                "$area": 224, 
                "$symbol": "code"
              }, 
              "name": "gc() 224"
            }, 
            {
              "data": {
                "$area": 220, 
                "$symbol": "code"
              }, 
              "name": "createRenderTarget(char const*, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo) 220"
            }, 
            {
              "data": {
                "$area": 156, 
                "$symbol": "code"
              }, 
              "name": "terminate() 156"
            }, 
            {
              "data": {
                "$area": 100, 
                "$dominant_symbol": "code"
              }, 
              "name": "TextureKey 100", 
              "children": [
                {
                  "data": {
                    "$area": 100, 
                    "$symbol": "code"
                  }, 
                  "name": "getSize() const 100"
                }
              ]
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "code"
              }, 
              "name": "ResourceAllocator(filament::backend::CommandStream&) 88"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "destroyRenderTarget(filament::backend::Handle<filament::backend::HwRenderTarget>) 44"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2940, 
            "$dominant_symbol": "code"
          }, 
          "name": "PlatformEGL 2.9k", 
          "children": [
            {
              "data": {
                "$area": 1268, 
                "$symbol": "code"
              }, 
              "name": "createDriver(void*) 1.3k"
            }, 
            {
              "data": {
                "$area": 448, 
                "$symbol": "code"
              }, 
              "name": "initializeGlExtensions() 448"
            }, 
            {
              "data": {
                "$area": 144, 
                "$symbol": "code"
              }, 
              "name": "logEglError(char const*) 144"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "createSwapChain(void*, unsigned long&) 136"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "createSwapChain(unsigned int, unsigned int, unsigned long&) 116"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "destroySwapChain(filament::backend::Platform::SwapChain*) 104"
            }, 
            {
              "data": {
                "$area": 96, 
                "$symbol": "code"
              }, 
              "name": "waitFence(filament::backend::Platform::Fence*, unsigned long) 96"
            }, 
            {
              "data": {
                "$area": 84, 
                "$symbol": "code"
              }, 
              "name": "terminate() 84"
            }, 
            {
              "data": {
                "$area": 84, 
                "$symbol": "code"
              }, 
              "name": "createExternalImageTexture(void*) 84"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "PlatformEGL() 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "makeCurrent(filament::backend::Platform::SwapChain*, filament::backend::Platform::SwapChain*) 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "makeCurrent(void*, void*) 72"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "createFence() 44"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "destroyFence(filament::backend::Platform::Fence*) 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "weak symbol"
              }, 
              "name": "~PlatformEGL() 36"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "commit(filament::backend::Platform::SwapChain*) 32"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "destroyExternalImage(void*) 32"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "createStream(void*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "createExternalTextureStorage() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "getOSVersion() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "canCreateFence() 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "updateTexImage(filament::backend::Platform::Stream*, long*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setPresentationTime(long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "destroyExternalTextureStorage(filament::backend::Platform::ExternalTexture*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "detach(filament::backend::Platform::Stream*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "attach(filament::backend::Platform::Stream*, long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "reallocateExternalStorage(filament::backend::Platform::ExternalTexture*, unsigned int, unsigned int, filament::backend::TextureFormat) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "destroyStream(filament::backend::Platform::Stream*) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2880, 
            "$dominant_symbol": "code"
          }, 
          "name": "Frustum 2.9k", 
          "children": [
            {
              "data": {
                "$area": 1952, 
                "$symbol": "code"
              }, 
              "name": "Frustum(filament::math::details::TVec3<float> const*) 2.0k"
            }, 
            {
              "data": {
                "$area": 516, 
                "$symbol": "code"
              }, 
              "name": "setProjection(filament::math::details::TMat44<float> const&) 516"
            }, 
            {
              "data": {
                "$area": 328, 
                "$symbol": "code"
              }, 
              "name": "contains(filament::math::details::TVec3<float>) const 328"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "getNormalizedPlanes(filament::math::details::TVec4<float>*) const 52"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getNormalizedPlane(filament::Frustum::Plane) const 16"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "Frustum(filament::math::details::TMat44<float> const&) 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "intersects(filament::Box const&) const 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "intersects(filament::math::details::TVec4<float> const&) const 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2852, 
            "$dominant_symbol": "code"
          }, 
          "name": "Culler 2.9k", 
          "children": [
            {
              "data": {
                "$area": 1772, 
                "$symbol": "code"
              }, 
              "name": "intersects(unsigned char*, filament::Frustum const&, filament::math::details::TVec3<float> const*, filament::math::details::TVec3<float> const*, unsigned long, unsigned long) 1.8k"
            }, 
            {
              "data": {
                "$area": 892, 
                "$symbol": "code"
              }, 
              "name": "intersects(unsigned char*, filament::Frustum const&, filament::math::details::TVec4<float> const*, unsigned long) 892"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "intersects(filament::Frustum const&, filament::Box const&) 104"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "intersects(filament::Frustum const&, filament::math::details::TVec4<float> const&) 72"
            }, 
            {
              "data": {
                "$area": 12, 
                "$dominant_symbol": "code"
              }, 
              "name": "Test 12", 
              "children": [
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "intersects(unsigned char*, filament::Frustum const&, filament::math::details::TVec3<float> const*, filament::math::details::TVec3<float> const*, unsigned long) 8"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "intersects(unsigned char*, filament::Frustum const&, filament::math::details::TVec4<float> const*, unsigned long) 4"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 2760, 
            "$dominant_symbol": "code"
          }, 
          "name": "NoopDriver 2.8k", 
          "children": [
            {
              "data": {
                "$area": 1976, 
                "$symbol": "code"
              }, 
              "name": "NoopDriver() 2.0k"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "create() 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "~NoopDriver() 44"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "readPixels(filament::backend::Handle<filament::backend::HwRenderTarget>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "loadUniformBuffer(filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::backend::BufferDescriptor&&) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "readStreamPixels(filament::backend::Handle<filament::backend::HwStream>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "updateCubeImage(filament::backend::Handle<filament::backend::HwTexture>, unsigned int, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "updateIndexBuffer(filament::backend::Handle<filament::backend::HwIndexBuffer>, filament::backend::BufferDescriptor&&, unsigned int) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "updateVertexBuffer(filament::backend::Handle<filament::backend::HwVertexBuffer>, unsigned long, filament::backend::BufferDescriptor&&, unsigned int) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "update3DImage(filament::backend::Handle<filament::backend::HwTexture>, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "update2DImage(filament::backend::Handle<filament::backend::HwTexture>, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 20"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getClipSpaceParams() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "importTextureS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createSwapChainS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createSamplerGroupS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createDefaultRenderTargetS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createIndexBufferS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createFenceS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createVertexBufferS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "createStreamNative(void*) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createSwapChainHeadlessS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createSyncS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createTimerQueryS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createUniformBufferS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createTextureS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createRenderPrimitiveS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createProgramS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createStreamFromTextureIdS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createTextureSwizzledS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "createRenderTargetS() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "createStreamAcquired() 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isFrameTimeSupported() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getStreamTimestamp(filament::backend::Handle<filament::backend::HwStream>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "wait(filament::backend::Handle<filament::backend::HwFence>, unsigned long) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getSyncStatus(filament::backend::Handle<filament::backend::HwSync>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getShaderModel() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isTextureFormatSupported(filament::backend::TextureFormat) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "canGenerateMipmaps() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isRenderTargetFormatSupported(filament::backend::TextureFormat) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isFrameBufferFetchSupported() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getTimerQueryValue(filament::backend::Handle<filament::backend::HwTimerQuery>, unsigned long*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isTextureFormatMipmappable(filament::backend::TextureFormat) 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "commit(filament::backend::Handle<filament::backend::HwSwapChain>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "beginRenderPass(filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::RenderPassParams const&) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "endFrame(unsigned int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyTimerQuery(filament::backend::Handle<filament::backend::HwTimerQuery>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "startCapture(int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "createRenderTargetR(filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "tick(int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyProgram(filament::backend::Handle<filament::backend::HwProgram>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "generateMipmaps(filament::backend::Handle<filament::backend::HwTexture>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setFrameCompletedCallback(filament::backend::Handle<filament::backend::HwSwapChain>, void (*)(void*), void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyUniformBuffer(filament::backend::Handle<filament::backend::HwUniformBuffer>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setExternalImage(filament::backend::Handle<filament::backend::HwTexture>, void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "pushGroupMarker(char const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyStream(filament::backend::Handle<filament::backend::HwStream>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "beginTimerQuery(filament::backend::Handle<filament::backend::HwTimerQuery>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "bindUniformBuffer(unsigned long, filament::backend::Handle<filament::backend::HwUniformBuffer>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "draw(filament::backend::PipelineState, filament::backend::Handle<filament::backend::HwRenderPrimitive>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "bindUniformBufferRange(unsigned long, filament::backend::Handle<filament::backend::HwUniformBuffer>, unsigned long, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyVertexBuffer(filament::backend::Handle<filament::backend::HwVertexBuffer>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setFrameScheduledCallback(filament::backend::Handle<filament::backend::HwSwapChain>, void (*)(filament::backend::PresentCallable, void*), void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyRenderPrimitive(filament::backend::Handle<filament::backend::HwRenderPrimitive>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroySamplerGroup(filament::backend::Handle<filament::backend::HwSamplerGroup>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "flush(int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyTexture(filament::backend::Handle<filament::backend::HwTexture>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "updateStreams(filament::backend::CommandStream*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "endTimerQuery(filament::backend::Handle<filament::backend::HwTimerQuery>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "bindSamplers(unsigned long, filament::backend::Handle<filament::backend::HwSamplerGroup>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setExternalImagePlane(filament::backend::Handle<filament::backend::HwTexture>, void*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setupExternalImage(void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setRenderPrimitiveBuffer(filament::backend::Handle<filament::backend::HwRenderPrimitive>, filament::backend::Handle<filament::backend::HwVertexBuffer>, filament::backend::Handle<filament::backend::HwIndexBuffer>, unsigned int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setPresentationTime(long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroySwapChain(filament::backend::Handle<filament::backend::HwSwapChain>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "cancelExternalImage(void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "beginFrame(long, unsigned int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "stopCapture(int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "makeCurrent(filament::backend::Handle<filament::backend::HwSwapChain>, filament::backend::Handle<filament::backend::HwSwapChain>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "updateSamplerGroup(filament::backend::Handle<filament::backend::HwSamplerGroup>, filament::backend::SamplerGroup&&) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "insertEventMarker(char const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "endRenderPass(int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setStreamDimensions(filament::backend::Handle<filament::backend::HwStream>, unsigned int, unsigned int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "nextSubpass(int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyRenderTarget(filament::backend::Handle<filament::backend::HwRenderTarget>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyFence(filament::backend::Handle<filament::backend::HwFence>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setRenderPrimitiveRange(filament::backend::Handle<filament::backend::HwRenderPrimitive>, filament::backend::PrimitiveType, unsigned int, unsigned int, unsigned int, unsigned int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroyIndexBuffer(filament::backend::Handle<filament::backend::HwIndexBuffer>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "terminate() 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "blit(filament::backend::TargetBufferFlags, filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::Viewport, filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::Viewport, filament::backend::SamplerMagFilter) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "finish(int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroySync(filament::backend::Handle<filament::backend::HwSync>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setAcquiredImage(filament::backend::Handle<filament::backend::HwStream>, void*, void (*)(void*, void*), void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "popGroupMarker(int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setExternalStream(filament::backend::Handle<filament::backend::HwTexture>, filament::backend::Handle<filament::backend::HwStream>) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2596, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "math 2.6k", 
          "children": [
            {
              "data": {
                "$area": 2596, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "details 2.6k", 
              "children": [
                {
                  "data": {
                    "$area": 572, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "TMat44<float> 572", 
                  "children": [
                    {
                      "data": {
                        "$area": 572, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": " filament 572", 
                      "children": [
                        {
                          "data": {
                            "$area": 572, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "math 572", 
                          "children": [
                            {
                              "data": {
                                "$area": 572, 
                                "$dominant_symbol": "weak symbol"
                              }, 
                              "name": "details 572", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 572, 
                                    "$dominant_symbol": "weak symbol"
                                  }, 
                                  "name": "matrix 572", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 572, 
                                        "$symbol": "weak symbol"
                                      }, 
                                      "name": "gaussJordanInverse<filament::math::details::TMat44<float> >(filament::math::details::TMat44<float>) 572"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 392, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "TMat44<filament::math::details::arithmetic_result<double, float>::type> 392", 
                  "children": [
                    {
                      "data": {
                        "$area": 392, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": " filament 392", 
                      "children": [
                        {
                          "data": {
                            "$area": 392, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "math 392", 
                          "children": [
                            {
                              "data": {
                                "$area": 392, 
                                "$dominant_symbol": "weak symbol"
                              }, 
                              "name": "details 392", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 392, 
                                    "$symbol": "weak symbol"
                                  }, 
                                  "name": "operator*<float>(filament::math::details::TMat44<double>, filament::math::details::TMat44<float>) 392"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 384, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "TMat33<float> 384", 
                  "children": [
                    {
                      "data": {
                        "$area": 384, 
                        "$symbol": "code"
                      }, 
                      "name": "packTangentFrame(filament::math::details::TMat33<float> const&, unsigned long) 384"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 344, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "TMat44<filament::math::details::arithmetic_result<double, double>::type> 344", 
                  "children": [
                    {
                      "data": {
                        "$area": 344, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": " filament 344", 
                      "children": [
                        {
                          "data": {
                            "$area": 344, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "math 344", 
                          "children": [
                            {
                              "data": {
                                "$area": 344, 
                                "$dominant_symbol": "weak symbol"
                              }, 
                              "name": "details 344", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 344, 
                                    "$symbol": "weak symbol"
                                  }, 
                                  "name": "operator*<double>(filament::math::details::TMat44<double>, filament::math::details::TMat44<double>) 344"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 340, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "TQuaternion<filament::math::details::TMat33<float>::value_type> 340", 
                  "children": [
                    {
                      "data": {
                        "$area": 340, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": " filament 340", 
                      "children": [
                        {
                          "data": {
                            "$area": 340, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "math 340", 
                          "children": [
                            {
                              "data": {
                                "$area": 340, 
                                "$dominant_symbol": "code"
                              }, 
                              "name": "details 340", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 340, 
                                    "$dominant_symbol": "code"
                                  }, 
                                  "name": "matrix 340", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 340, 
                                        "$symbol": "code"
                                      }, 
                                      "name": "extractQuat<filament::math::details::TMat33<float> >(filament::math::details::TMat33<float> const&) 340"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 324, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "TQuaternion<filament::math::details::TMat44<float>::value_type> 324", 
                  "children": [
                    {
                      "data": {
                        "$area": 324, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": " filament 324", 
                      "children": [
                        {
                          "data": {
                            "$area": 324, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "math 324", 
                          "children": [
                            {
                              "data": {
                                "$area": 324, 
                                "$dominant_symbol": "weak symbol"
                              }, 
                              "name": "details 324", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 324, 
                                    "$dominant_symbol": "weak symbol"
                                  }, 
                                  "name": "matrix 324", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 324, 
                                        "$symbol": "weak symbol"
                                      }, 
                                      "name": "extractQuat<filament::math::details::TMat44<float> >(filament::math::details::TMat44<float> const&) 324"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 192, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "TMat44<filament::math::details::arithmetic_result<float, float>::type> 192", 
                  "children": [
                    {
                      "data": {
                        "$area": 192, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": " filament 192", 
                      "children": [
                        {
                          "data": {
                            "$area": 192, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "math 192", 
                          "children": [
                            {
                              "data": {
                                "$area": 192, 
                                "$dominant_symbol": "weak symbol"
                              }, 
                              "name": "details 192", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 192, 
                                    "$symbol": "weak symbol"
                                  }, 
                                  "name": "operator*<float>(filament::math::details::TMat44<float>, filament::math::details::TMat44<float>) 192"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$dominant_symbol": "read-only data"
                  }, 
                  "name": "matrix 48", 
                  "children": [
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "extractQuat<filament::math::details::TMat44<float> >(filament::math::details::TMat44<float> const&)::next_ijk 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "read-only data"
                      }, 
                      "name": "extractQuat<filament::math::details::TMat33<float> >(filament::math::details::TMat33<float> const&)::next_ijk 24"
                    }
                  ]
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 2564, 
            "$dominant_symbol": "code"
          }, 
          "name": "FLightManager 2.6k", 
          "children": [
            {
              "data": {
                "$area": 644, 
                "$symbol": "code"
              }, 
              "name": "create(filament::LightManager::Builder const&, utils::Entity) 644"
            }, 
            {
              "data": {
                "$area": 544, 
                "$symbol": "code"
              }, 
              "name": "~FLightManager() 544"
            }, 
            {
              "data": {
                "$area": 364, 
                "$symbol": "code"
              }, 
              "name": "setSpotLightCone(utils::EntityInstance<filament::LightManager, false>, float, float) 364"
            }, 
            {
              "data": {
                "$area": 208, 
                "$symbol": "weak symbol"
              }, 
              "name": "gc(utils::EntityManager&) 208"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "code"
              }, 
              "name": "setIntensity(utils::EntityInstance<filament::LightManager, false>, float, filament::FLightManager::IntensityUnit) 204"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "FLightManager(filament::FEngine&) 80"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "setFalloff(utils::EntityInstance<filament::LightManager, false>, float) 80"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "terminate() 76"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "setSunAngularRadius(utils::EntityInstance<filament::LightManager, false>, float) 72"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 60"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setSunHaloFalloff(utils::EntityInstance<filament::LightManager, false>, float) 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setSunHaloSize(utils::EntityInstance<filament::LightManager, false>, float) 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setColor(utils::EntityInstance<filament::LightManager, false>, filament::math::details::TVec3<float> const&) 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "setShadowCaster(utils::EntityInstance<filament::LightManager, false>, bool) 36"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "setLocalPosition(utils::EntityInstance<filament::LightManager, false>, filament::math::details::TVec3<float> const&) 36"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "setLocalDirection(utils::EntityInstance<filament::LightManager, false>, filament::math::details::TVec3<float>) 32"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "prepare(filament::backend::CommandStream&) const 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "init(filament::FEngine&) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2496, 
            "$dominant_symbol": "code"
          }, 
          "name": "CameraInfo 2.5k", 
          "children": [
            {
              "data": {
                "$area": 1384, 
                "$symbol": "code"
              }, 
              "name": "CameraInfo(filament::FCamera const&, filament::math::details::TMat44<float> const&) 1.4k"
            }, 
            {
              "data": {
                "$area": 1112, 
                "$symbol": "code"
              }, 
              "name": "CameraInfo(filament::FCamera const&) 1.1k"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2488, 
            "$dominant_symbol": "code"
          }, 
          "name": "FCamera 2.5k", 
          "children": [
            {
              "data": {
                "$area": 696, 
                "$symbol": "code"
              }, 
              "name": "setProjection(filament::Camera::Projection, double, double, double, double, double, double) 696"
            }, 
            {
              "data": {
                "$area": 400, 
                "$symbol": "code"
              }, 
              "name": "lookAt(filament::math::details::TVec3<float> const&, filament::math::details::TVec3<float> const&, filament::math::details::TVec3<float> const&) 400"
            }, 
            {
              "data": {
                "$area": 192, 
                "$symbol": "code"
              }, 
              "name": "FCamera(filament::FEngine&, utils::Entity) 192"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "weak symbol"
              }, 
              "name": "getFieldOfView(filament::Camera::Fov) const 184"
            }, 
            {
              "data": {
                "$area": 180, 
                "$symbol": "code"
              }, 
              "name": "getFrustum(filament::math::details::TMat44<double> const&, filament::math::details::TMat44<float> const&) 180"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "getFrustum() const 172"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "setProjection(double, double, double, double, filament::Camera::Fov) 136"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "setLensProjection(double, double, double, double) 120"
            }, 
            {
              "data": {
                "$area": 84, 
                "$symbol": "code"
              }, 
              "name": "setCustomProjection(filament::math::details::TMat44<double> const&, double, double) 84"
            }, 
            {
              "data": {
                "$area": 84, 
                "$symbol": "code"
              }, 
              "name": "setExposure(float, float, float) 84"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "getViewMatrix() const 64"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "setModelMatrix(filament::math::details::TMat44<float> const&) 60"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "getModelMatrix() const 56"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getViewMatrix(filament::math::details::TMat44<float> const&) 48"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setScaling(filament::math::details::TVec4<double> const&) 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2471, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::screenSpaceAmbientOcclusion(filament::FrameGraph&, filament::RenderPass&, filament::Viewport const&, filament::CameraInfo const&, filament::View::AmbientOcclusionOptions)::SSAOPassData, filament::PostProcessManager::screenSpaceAmbientOcclusion(filament::FrameGraph&, filament::RenderPass&, filament::Viewport const&, filament::CameraInfo const&, filament::View::AmbientOcclusionOptions)::$_5> 2.5k", 
          "children": [
            {
              "data": {
                "$area": 2100, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 2.1k"
            }, 
            {
              "data": {
                "$area": 255, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 255"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2460, 
            "$dominant_symbol": "code"
          }, 
          "name": "TimerQueryFence 2.5k", 
          "children": [
            {
              "data": {
                "$area": 816, 
                "$symbol": "code"
              }, 
              "name": "TimerQueryFence(filament::backend::OpenGLPlatform&) 816"
            }, 
            {
              "data": {
                "$area": 796, 
                "$symbol": "code"
              }, 
              "name": "~TimerQueryFence() 796"
            }, 
            {
              "data": {
                "$area": 328, 
                "$symbol": "code"
              }, 
              "name": "endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*) 328"
            }, 
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "enqueue(std::__ndk1::function<void ()>&&) 260"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "beginTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*) 172"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "flush() 56"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "queryResultAvailable(filament::OpenGLDriver::GLTimerQuery*) 20"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "queryResult(filament::OpenGLDriver::GLTimerQuery*) 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2404, 
            "$dominant_symbol": "code"
          }, 
          "name": "FColorGrading 2.4k", 
          "children": [
            {
              "data": {
                "$area": 2352, 
                "$symbol": "code"
              }, 
              "name": "FColorGrading(filament::FEngine&, filament::ColorGrading::Builder const&) 2.4k"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 40"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~FColorGrading() 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "FColorGrading(filament::FEngine&, filament::ColorGrading::Builder const&)::$_1::__invoke(void*, unsigned long, void*) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2268, 
            "$dominant_symbol": "code"
          }, 
          "name": "ColorGrading 2.3k", 
          "children": [
            {
              "data": {
                "$area": 1612, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 1.6k", 
              "children": [
                {
                  "data": {
                    "$area": 320, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 320"
                }, 
                {
                  "data": {
                    "$area": 252, 
                    "$symbol": "code"
                  }, 
                  "name": "shadowsMidtonesHighlights(filament::math::details::TVec4<float>, filament::math::details::TVec4<float>, filament::math::details::TVec4<float>, filament::math::details::TVec4<float>) 252"
                }, 
                {
                  "data": {
                    "$area": 216, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::ColorGrading::Builder const&) 216"
                }, 
                {
                  "data": {
                    "$area": 208, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 208"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "channelMixer(filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>) 128"
                }, 
                {
                  "data": {
                    "$area": 96, 
                    "$symbol": "code"
                  }, 
                  "name": "slopeOffsetPower(filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>) 96"
                }, 
                {
                  "data": {
                    "$area": 92, 
                    "$symbol": "code"
                  }, 
                  "name": "curves(filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>) 92"
                }, 
                {
                  "data": {
                    "$area": 68, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::ColorGrading::Builder const&) 68"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "whiteBalance(float, float) 40"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::ColorGrading::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "saturation(float) 28"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "contrast(float) 28"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "vibrance(float) 28"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::ColorGrading::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "toneMapping(filament::ColorGrading::ToneMapping) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "quality(filament::ColorGrading::QualityLevel) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 656, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "BuilderDetails 656", 
              "children": [
                {
                  "data": {
                    "$area": 656, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "operator==(filament::ColorGrading::BuilderDetails const&) const 656"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 1844, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::gaussianBlurPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, bool, unsigned long, float)::BlurPassData, filament::PostProcessManager::gaussianBlurPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, bool, unsigned long, float)::$_10> 1.8k", 
          "children": [
            {
              "data": {
                "$area": 1528, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 1.5k"
            }, 
            {
              "data": {
                "$area": 200, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 200"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1808, 
            "$dominant_symbol": "code"
          }, 
          "name": "FDebugRegistry 1.8k", 
          "children": [
            {
              "data": {
                "$area": 976, 
                "$symbol": "code"
              }, 
              "name": "FDebugRegistry() 976"
            }, 
            {
              "data": {
                "$area": 504, 
                "$symbol": "code"
              }, 
              "name": "registerProperty(utils::StaticString, void*, filament::DebugRegistry::Type) 504"
            }, 
            {
              "data": {
                "$area": 328, 
                "$symbol": "code"
              }, 
              "name": "getPropertyAddress(char const*) 328"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1798, 
            "$dominant_symbol": "code"
          }, 
          "name": "FFence 1.8k", 
          "children": [
            {
              "data": {
                "$area": 792, 
                "$symbol": "code"
              }, 
              "name": "FFence(filament::FEngine&, filament::FFence::Type) 792"
            }, 
            {
              "data": {
                "$area": 488, 
                "$dominant_symbol": "code"
              }, 
              "name": "FenceSignal 488", 
              "children": [
                {
                  "data": {
                    "$area": 300, 
                    "$symbol": "code"
                  }, 
                  "name": "wait(unsigned long) 300"
                }, 
                {
                  "data": {
                    "$area": 188, 
                    "$symbol": "code"
                  }, 
                  "name": "signal(filament::FFence::FenceSignal::State) 188"
                }
              ]
            }, 
            {
              "data": {
                "$area": 276, 
                "$symbol": "code"
              }, 
              "name": "wait(filament::Fence::Mode, unsigned long) 276"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 116"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "waitAndDestroy(filament::FFence*, filament::Fence::Mode) 60"
            }, 
            {
              "data": {
                "$area": 50, 
                "$symbol": "read-only data"
              }, 
              "name": "FFence(filament::FEngine&, filament::FFence::Type)::$_0 [typeinfo name] 50"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "FFence(filament::FEngine&, filament::FFence::Type)::$_0 [typeinfo] 16"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1772, 
            "$dominant_symbol": "code"
          }, 
          "name": "ExternalStreamManagerAndroid 1.8k", 
          "children": [
            {
              "data": {
                "$area": 520, 
                "$symbol": "code"
              }, 
              "name": "ExternalStreamManagerAndroid() 520"
            }, 
            {
              "data": {
                "$area": 268, 
                "$symbol": "code"
              }, 
              "name": "attach(filament::backend::Platform::Stream*, long) 268"
            }, 
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "getEnvironmentSlow() 260"
            }, 
            {
              "data": {
                "$area": 188, 
                "$symbol": "code"
              }, 
              "name": "updateTexImage(filament::backend::Platform::Stream*, long*) 188"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "acquire(_jobject*) 184"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "detach(filament::backend::Platform::Stream*) 128"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "get() 124"
            }, 
            {
              "data": {
                "$area": 100, 
                "$symbol": "code"
              }, 
              "name": "release(filament::backend::Platform::Stream*) 100"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1744, 
            "$dominant_symbol": "code"
          }, 
          "name": "Color 1.7k", 
          "children": [
            {
              "data": {
                "$area": 484, 
                "$symbol": "code"
              }, 
              "name": "illuminantD(float) 484"
            }, 
            {
              "data": {
                "$area": 468, 
                "$symbol": "code"
              }, 
              "name": "cct(float) 468"
            }, 
            {
              "data": {
                "$area": 324, 
                "$symbol": "code"
              }, 
              "name": "sRGBToLinear(filament::math::details::TVec3<float>) 324"
            }, 
            {
              "data": {
                "$area": 320, 
                "$symbol": "code"
              }, 
              "name": "linearToSRGB(filament::math::details::TVec3<float>) 320"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "absorptionAtDistance(filament::math::details::TVec3<float> const&, float) 148"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1688, 
            "$dominant_symbol": "code"
          }, 
          "name": "IndirectLight 1.7k", 
          "children": [
            {
              "data": {
                "$area": 1272, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 1.3k", 
              "children": [
                {
                  "data": {
                    "$area": 304, 
                    "$symbol": "code"
                  }, 
                  "name": "radiance(unsigned char, filament::math::details::TVec3<float> const*) 304"
                }, 
                {
                  "data": {
                    "$area": 264, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 264"
                }, 
                {
                  "data": {
                    "$area": 216, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::IndirectLight::Builder const&) 216"
                }, 
                {
                  "data": {
                    "$area": 160, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 160"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "irradiance(unsigned char, filament::math::details::TVec3<float> const*) 112"
                }, 
                {
                  "data": {
                    "$area": 68, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::IndirectLight::Builder const&) 68"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::IndirectLight::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "rotation(filament::math::details::TMat33<float> const&) 28"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::IndirectLight::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "intensity(float) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "reflections(filament::Texture const*) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "irradiance(filament::Texture const*) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "getDirectionEstimate() const 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "getDirectionEstimate(filament::math::details::TVec3<float> const*) 172"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setRotation(filament::math::details::TMat33<float> const&) 20"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setIntensity(float) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getReflectionsTexture() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getIrradianceTexture() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getColorEstimate(filament::math::details::TVec3<float>) const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getIntensity() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getRotation() const 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "getColorEstimate(filament::math::details::TVec3<float> const*, filament::math::details::TVec3<float>) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1676, 
            "$dominant_symbol": "code"
          }, 
          "name": "PlatformEGLAndroid 1.7k", 
          "children": [
            {
              "data": {
                "$area": 424, 
                "$symbol": "code"
              }, 
              "name": "createDriver(void*) 424"
            }, 
            {
              "data": {
                "$area": 344, 
                "$symbol": "code"
              }, 
              "name": "PlatformEGLAndroid() 344"
            }, 
            {
              "data": {
                "$area": 284, 
                "$symbol": "code"
              }, 
              "name": "transformAcquiredImage(filament::backend::AcquiredImage) 284"
            }, 
            {
              "data": {
                "$area": 268, 
                "$symbol": "code"
              }, 
              "name": "reallocateExternalStorage(filament::backend::Platform::ExternalTexture*, unsigned int, unsigned int, filament::backend::TextureFormat) 268"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "transformAcquiredImage(filament::backend::AcquiredImage)::$_0::__invoke(void*, void*) 128"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "destroyExternalTextureStorage(filament::backend::Platform::ExternalTexture*) 80"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "setPresentationTime(long) 56"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "weak symbol"
              }, 
              "name": "~PlatformEGLAndroid() 36"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "attach(filament::backend::Platform::Stream*, long) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "createStream(void*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroyStream(filament::backend::Platform::Stream*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "createExternalTextureStorage() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "updateTexImage(filament::backend::Platform::Stream*, long*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "detach(filament::backend::Platform::Stream*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getOSVersion() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1631, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::taa(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::TFrameHistory<filament::FrameHistoryEntry, 1ul>&, filament::View::TemporalAntiAliasingOptions, filament::PostProcessManager::ColorGradingConfig)::TAAData, filament::PostProcessManager::taa(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::TFrameHistory<filament::FrameHistoryEntry, 1ul>&, filament::View::TemporalAntiAliasingOptions, filament::PostProcessManager::ColorGradingConfig)::$_33> 1.6k", 
          "children": [
            {
              "data": {
                "$area": 1244, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 1.2k"
            }, 
            {
              "data": {
                "$area": 271, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 271"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1624, 
            "$dominant_symbol": "code"
          }, 
          "name": "Camera 1.6k", 
          "children": [
            {
              "data": {
                "$area": 176, 
                "$symbol": "code"
              }, 
              "name": "inverseProjection(filament::math::details::TMat44<double> const&) 176"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "getFrustum() const 172"
            }, 
            {
              "data": {
                "$area": 160, 
                "$symbol": "code"
              }, 
              "name": "inverseProjection(filament::math::details::TMat44<float> const&) 160"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "getProjectionMatrix() const 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "getCullingProjectionMatrix() const 124"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "setLensProjection(double, double, double, double) 120"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "getUpVector() const 116"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "getLeftVector() const 116"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "getForwardVector() const 116"
            }, 
            {
              "data": {
                "$area": 84, 
                "$symbol": "code"
              }, 
              "name": "setExposure(float, float, float) 84"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "getModelMatrix() const 76"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "getPosition() const 64"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "lookAt(filament::math::details::TVec3<float> const&, filament::math::details::TVec3<float> const&) 48"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "getFieldOfViewInDegrees(filament::Camera::Fov) const 36"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setScaling(filament::math::details::TVec4<double> const&) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getAperture() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getScaling() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getCullingFar() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getSensitivity() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getEntity() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getNear() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getShutterSpeed() const 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "lookAt(filament::math::details::TVec3<float> const&, filament::math::details::TVec3<float> const&, filament::math::details::TVec3<float> const&) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setCustomProjection(filament::math::details::TMat44<double> const&, double, double) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setProjection(double, double, double, double, filament::Camera::Fov) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "getViewMatrix() const 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setProjection(filament::Camera::Projection, double, double, double, double, double, double) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setModelMatrix(filament::math::details::TMat44<float> const&) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1555, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::bilateralBlurPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::math::details::TVec2<int>, float, filament::backend::TextureFormat, filament::PostProcessManager::BilateralPassConfig)::BlurPassData, filament::PostProcessManager::bilateralBlurPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::math::details::TVec2<int>, float, filament::backend::TextureFormat, filament::PostProcessManager::BilateralPassConfig)::$_7> 1.6k", 
          "children": [
            {
              "data": {
                "$area": 1164, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 1.2k"
            }, 
            {
              "data": {
                "$area": 275, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 275"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1540, 
            "$dominant_symbol": "code"
          }, 
          "name": "ExternalTextureManagerAndroid 1.5k", 
          "children": [
            {
              "data": {
                "$area": 436, 
                "$symbol": "code"
              }, 
              "name": "alloc(filament::backend::Platform::ExternalTexture*, unsigned int, unsigned int, filament::backend::TextureFormat, unsigned long) 436"
            }, 
            {
              "data": {
                "$area": 240, 
                "$symbol": "code"
              }, 
              "name": "ExternalTextureManagerAndroid() 240"
            }, 
            {
              "data": {
                "$area": 232, 
                "$symbol": "code"
              }, 
              "name": "~ExternalTextureManagerAndroid() 232"
            }, 
            {
              "data": {
                "$area": 224, 
                "$symbol": "code"
              }, 
              "name": "create() 224"
            }, 
            {
              "data": {
                "$area": 144, 
                "$symbol": "code"
              }, 
              "name": "destroyStorage(filament::backend::Platform::ExternalTexture*) 144"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "get() 120"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "code"
              }, 
              "name": "reallocate(filament::backend::Platform::ExternalTexture*, unsigned int, unsigned int, filament::backend::TextureFormat, unsigned long) 92"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::backend::Platform::ExternalTexture*) 52"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1532, 
            "$dominant_symbol": "code"
          }, 
          "name": "VertexBuffer 1.5k", 
          "children": [
            {
              "data": {
                "$area": 1176, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 1.2k", 
              "children": [
                {
                  "data": {
                    "$area": 296, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 296"
                }, 
                {
                  "data": {
                    "$area": 240, 
                    "$symbol": "code"
                  }, 
                  "name": "attribute(filament::VertexAttribute, unsigned char, filament::backend::ElementType, unsigned int, unsigned char) 240"
                }, 
                {
                  "data": {
                    "$area": 224, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 224"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::VertexBuffer::Builder const&) 200"
                }, 
                {
                  "data": {
                    "$area": 60, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::VertexBuffer::Builder const&) 60"
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "code"
                  }, 
                  "name": "normalized(filament::VertexAttribute, bool) 48"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::VertexBuffer::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::VertexBuffer::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "bufferCount(unsigned char) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "vertexCount(unsigned int) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "code"
              }, 
              "name": "populateTangentQuaternions(filament::VertexBuffer::QuatTangentContext const&) 216"
            }, 
            {
              "data": {
                "$area": 132, 
                "$symbol": "code"
              }, 
              "name": "setBufferAt(filament::Engine&, unsigned char, filament::backend::BufferDescriptor&&, unsigned int) 132"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getVertexCount() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1532, 
            "$dominant_symbol": "code"
          }, 
          "name": "FVertexBuffer 1.5k", 
          "children": [
            {
              "data": {
                "$area": 1352, 
                "$symbol": "code"
              }, 
              "name": "FVertexBuffer(filament::FEngine&, filament::VertexBuffer::Builder const&) 1.4k"
            }, 
            {
              "data": {
                "$area": 132, 
                "$symbol": "code"
              }, 
              "name": "setBufferAt(filament::FEngine&, unsigned char, filament::backend::BufferDescriptor&&, unsigned int) 132"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 40"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getVertexCount() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1512, 
            "$dominant_symbol": "code"
          }, 
          "name": "GPUBuffer 1.5k", 
          "children": [
            {
              "data": {
                "$area": 736, 
                "$symbol": "code"
              }, 
              "name": "GPUBuffer(filament::backend::CommandStream&, filament::GPUBuffer::Element, unsigned long, unsigned long) 736"
            }, 
            {
              "data": {
                "$area": 312, 
                "$symbol": "code"
              }, 
              "name": "GPUBuffer(filament::GPUBuffer&&) 312"
            }, 
            {
              "data": {
                "$area": 144, 
                "$symbol": "code"
              }, 
              "name": "commitSlow(filament::backend::CommandStream&, void const*, void const*) 144"
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "operator=(filament::GPUBuffer&&) 140"
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "swap(filament::GPUBuffer&) 140"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::backend::CommandStream&) 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1491, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::colorGrading(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FColorGrading const*, filament::backend::TextureFormat, bool, bool, filament::math::details::TVec2<float>, filament::View::BloomOptions, filament::View::VignetteOptions, bool)::PostProcessColorGrading, filament::PostProcessManager::colorGrading(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FColorGrading const*, filament::backend::TextureFormat, bool, bool, filament::math::details::TVec2<float>, filament::View::BloomOptions, filament::View::VignetteOptions, bool)::$_29> 1.5k", 
          "children": [
            {
              "data": {
                "$area": 1048, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 1.0k"
            }, 
            {
              "data": {
                "$area": 327, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 327"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1480, 
            "$dominant_symbol": "code"
          }, 
          "name": "Texture 1.5k", 
          "children": [
            {
              "data": {
                "$area": 768, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 768", 
              "children": [
                {
                  "data": {
                    "$area": 212, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 212"
                }, 
                {
                  "data": {
                    "$area": 176, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 176"
                }, 
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::Texture::Builder const&) 136"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::Texture::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::Texture::Builder const&) 28"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "levels(unsigned char) 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "swizzle(filament::backend::TextureSwizzle, filament::backend::TextureSwizzle, filament::backend::TextureSwizzle, filament::backend::TextureSwizzle) 24"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::Texture::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "usage(filament::backend::TextureUsage) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "width(unsigned int) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "import(long) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "height(unsigned int) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "depth(unsigned int) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "sampler(filament::backend::SamplerType) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "format(filament::backend::TextureFormat) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "computeTextureDataSize(filament::backend::PixelDataFormat, filament::backend::PixelDataType, unsigned long, unsigned long, unsigned long) 140"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "setExternalStream(filament::Engine&, filament::Stream*) 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "setExternalImage(filament::Engine&, void*, unsigned long) 124"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "setExternalImage(filament::Engine&, void*) 120"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "setImage(filament::Engine&, unsigned long, filament::backend::PixelBufferDescriptor&&) const 44"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "isTextureFormatSupported(filament::Engine&, filament::backend::TextureFormat) 40"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getHeight(unsigned long) const 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getDepth(unsigned long) const 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setImage(filament::Engine&, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) const 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getWidth(unsigned long) const 20"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getFormat() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getTarget() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getLevels() const 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setImage(filament::Engine&, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) const 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "generatePrefilterMipmap(filament::Engine&, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets const&, filament::Texture::PrefilterOptions const*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "setImage(filament::Engine&, unsigned long, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets const&) const 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "generateMipmaps(filament::Engine&) const 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1399, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::bloomPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::backend::TextureFormat, filament::View::BloomOptions&, filament::math::details::TVec2<float>)::BloomPassData, filament::PostProcessManager::bloomPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::backend::TextureFormat, filament::View::BloomOptions&, filament::math::details::TVec2<float>)::$_25> 1.4k", 
          "children": [
            {
              "data": {
                "$area": 1028, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 1.0k"
            }, 
            {
              "data": {
                "$area": 255, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 255"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1380, 
            "$dominant_symbol": "code"
          }, 
          "name": "View 1.4k", 
          "children": [
            {
              "data": {
                "$area": 176, 
                "$symbol": "code"
              }, 
              "name": "setBloomOptions(filament::View::BloomOptions) 176"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "setFogOptions(filament::View::FogOptions) 172"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "setDynamicResolutionOptions(filament::View::DynamicResolutionOptions const&) 128"
            }, 
            {
              "data": {
                "$area": 108, 
                "$symbol": "code"
              }, 
              "name": "setVignetteOptions(filament::View::VignetteOptions) 108"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "setName(char const*) 68"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "setTemporalAntiAliasingOptions(filament::View::TemporalAntiAliasingOptions) 64"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "setAmbientOcclusionOptions(filament::View::AmbientOcclusionOptions const&) 64"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "setDepthOfFieldOptions(filament::View::DepthOfFieldOptions) 64"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "setColorGrading(filament::ColorGrading*) 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getDynamicResolutionOptions() const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "getFogOptions() const 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "setVisibleLayers(unsigned char, unsigned char) 24"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setAmbientOcclusion(filament::View::AmbientOcclusion) 20"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getVignetteOptions() const 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "setSampleCount(unsigned char) 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setVsmShadowOptions(filament::View::VsmShadowOptions const&) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setScreenSpaceRefractionEnabled(bool) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setPostProcessingEnabled(bool) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setFrontFaceWindingInverted(bool) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getDirectionalLightCamera() const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setViewport(filament::Viewport const&) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setShadowingEnabled(bool) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setRenderQuality(filament::View::RenderQuality const&) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getDepthOfFieldOptions() const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getBloomOptions() const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setFrustumCullingEnabled(bool) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getViewport() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isFrustumCullingEnabled() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getCamera() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getRenderQuality() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setAntiAliasing(filament::View::AntiAliasing) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getBlendMode() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getTemporalAntiAliasingOptions() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getRenderTarget() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setDithering(filament::View::Dithering) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getDithering() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getScene() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getColorGrading() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getAntiAliasing() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setDebugCamera(filament::Camera*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setScene(filament::Scene*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getName() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setBlendMode(filament::View::BlendMode) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getToneMapping() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getAmbientOcclusion() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isFrontFaceWindingInverted() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setToneMapping(filament::View::ToneMapping) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getAmbientOcclusionOptions() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setCamera(filament::Camera*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getSampleCount() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isShadowingEnabled() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getVisibleLayers() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isPostProcessingEnabled() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setShadowType(filament::View::ShadowType) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setDynamicLightingOptions(float, float) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isScreenSpaceRefractionEnabled() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setRenderTarget(filament::RenderTarget*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getVsmShadowOptions() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1300, 
            "$dominant_symbol": "code"
          }, 
          "name": "FCameraManager 1.3k", 
          "children": [
            {
              "data": {
                "$area": 544, 
                "$symbol": "code"
              }, 
              "name": "~FCameraManager() 544"
            }, 
            {
              "data": {
                "$area": 252, 
                "$symbol": "code"
              }, 
              "name": "gc(utils::EntityManager&) 252"
            }, 
            {
              "data": {
                "$area": 228, 
                "$symbol": "code"
              }, 
              "name": "create(utils::Entity) 228"
            }, 
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "terminate() 120"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "FCameraManager(filament::FEngine&) 80"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 76"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1279, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::bloomPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::backend::TextureFormat, filament::View::BloomOptions&, filament::math::details::TVec2<float>)::BloomPassData, filament::PostProcessManager::bloomPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::backend::TextureFormat, filament::View::BloomOptions&, filament::math::details::TVec2<float>)::$_27> 1.3k", 
          "children": [
            {
              "data": {
                "$area": 908, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 908"
            }, 
            {
              "data": {
                "$area": 255, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 255"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1242, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::PostProcessDofMipmap, filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_14> 1.2k", 
          "children": [
            {
              "data": {
                "$area": 904, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 904"
            }, 
            {
              "data": {
                "$area": 222, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 222"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1200, 
            "$dominant_symbol": "code"
          }, 
          "name": "Material 1.2k", 
          "children": [
            {
              "data": {
                "$area": 728, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 728", 
              "children": [
                {
                  "data": {
                    "$area": 372, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 372"
                }, 
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::Material::Builder const&) 120"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 112"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::Material::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::Material::Builder const&) 28"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::Material::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "package(void const*, unsigned long) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 200, 
                "$symbol": "code"
              }, 
              "name": "isSampler(char const*) const 200"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getParameterCount() const 48"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "isDepthCullingEnabled() const 24"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "createInstance(char const*) const 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "isDepthWriteEnabled() const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "isColorWriteEnabled() const 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getCullingMode() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getVertexDomain() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getSpecularAntiAliasingVariance() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "hasShadowMultiplier() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getShading() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getRequiredAttributes() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "hasSpecularAntiAliasing() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getBlendingMode() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getMaterialDomain() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getDefaultInstance() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getMaskThreshold() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getTransparencyMode() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "isDoubleSided() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getRefractionType() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getRefractionMode() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getName() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getSpecularAntiAliasingThreshold() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getInterpolation() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getDefaultInstance() 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "getParameters(filament::Material::ParameterInfo*, unsigned long) const 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "hasParameter(char const*) const 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1196, 
            "$dominant_symbol": "code"
          }, 
          "name": "FSkybox 1.2k", 
          "children": [
            {
              "data": {
                "$area": 784, 
                "$symbol": "code"
              }, 
              "name": "FSkybox(filament::FEngine&, filament::Skybox::Builder const&) 784"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "setLayerMask(unsigned char, unsigned char) 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "createMaterial(filament::FEngine&) 124"
            }, 
            {
              "data": {
                "$area": 100, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 100"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "commit(filament::backend::CommandStream&) 48"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "setColor(filament::math::details::TVec4<float>) 16"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1192, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::blendBlit(filament::FrameGraph&, bool, filament::View::QualityLevel, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FrameGraphTexture::Descriptor)::QuadBlitData, filament::PostProcessManager::blendBlit(filament::FrameGraph&, bool, filament::View::QualityLevel, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FrameGraphTexture::Descriptor)::$_37> 1.2k", 
          "children": [
            {
              "data": {
                "$area": 860, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 860"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 216"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1156, 
            "$dominant_symbol": "code"
          }, 
          "name": "FStream 1.2k", 
          "children": [
            {
              "data": {
                "$area": 536, 
                "$symbol": "code"
              }, 
              "name": "FStream(filament::FEngine&, filament::Stream::Builder const&) 536"
            }, 
            {
              "data": {
                "$area": 332, 
                "$symbol": "code"
              }, 
              "name": "readPixels(unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 332"
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "setDimensions(unsigned int, unsigned int) 116"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "setAcquiredImage(void*, void (*)(void*, void*), void*) 72"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getTimestamp() const 60"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1152, 
            "$dominant_symbol": "code"
          }, 
          "name": "OpenGLBlitter 1.2k", 
          "children": [
            {
              "data": {
                "$area": 428, 
                "$dominant_symbol": "code"
              }, 
              "name": "State 428", 
              "children": [
                {
                  "data": {
                    "$area": 240, 
                    "$symbol": "code"
                  }, 
                  "name": "save() 240"
                }, 
                {
                  "data": {
                    "$area": 188, 
                    "$symbol": "code"
                  }, 
                  "name": "restore() 188"
                }
              ]
            }, 
            {
              "data": {
                "$area": 376, 
                "$symbol": "code"
              }, 
              "name": "init() 376"
            }, 
            {
              "data": {
                "$area": 248, 
                "$symbol": "code"
              }, 
              "name": "blit(unsigned int, unsigned int, unsigned int, unsigned int) 248"
            }, 
            {
              "data": {
                "$area": 100, 
                "$symbol": "code"
              }, 
              "name": "terminate() 100"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1136, 
            "$dominant_symbol": "code"
          }, 
          "name": "FIndirectLight 1.1k", 
          "children": [
            {
              "data": {
                "$area": 360, 
                "$symbol": "code"
              }, 
              "name": "FIndirectLight(filament::FEngine&, filament::IndirectLight::Builder const&) 360"
            }, 
            {
              "data": {
                "$area": 356, 
                "$symbol": "code"
              }, 
              "name": "getColorEstimate(filament::math::details::TVec3<float> const*, filament::math::details::TVec3<float>) 356"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "getDirectionEstimate() const 172"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "getDirectionEstimate(filament::math::details::TVec3<float> const*) 172"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "getIrradianceHwHandle() const 32"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "getReflectionHwHandle() const 32"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getColorEstimate(filament::math::details::TVec3<float>) const 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1110, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::FRenderer::colorPass(filament::FrameGraph&, char const*, filament::FrameGraphTexture::Descriptor const&, filament::FRenderer::ColorPassConfig const&, filament::PostProcessManager::ColorGradingConfig, filament::RenderPass const&, filament::FView const&) const::ColorPassData, filament::FRenderer::colorPass(filament::FrameGraph&, char const*, filament::FrameGraphTexture::Descriptor const&, filament::FRenderer::ColorPassConfig const&, filament::PostProcessManager::ColorGradingConfig, filament::RenderPass const&, filament::FView const&) const::$_7> 1.1k", 
          "children": [
            {
              "data": {
                "$area": 656, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 656"
            }, 
            {
              "data": {
                "$area": 270, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 270"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 104"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1088, 
            "$dominant_symbol": "code"
          }, 
          "name": "Scene 1.1k", 
          "children": [
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "getLightCount() const 260"
            }, 
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "getRenderableCount() const 260"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "addEntities(utils::Entity const*, unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 108, 
                "$symbol": "code"
              }, 
              "name": "setSkybox(filament::Skybox*) 108"
            }, 
            {
              "data": {
                "$area": 100, 
                "$symbol": "code"
              }, 
              "name": "hasEntity(utils::Entity) const 100"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "removeEntities(utils::Entity const*, unsigned long) 76"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "addEntity(utils::Entity) 48"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "remove(utils::Entity) 44"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setIndirectLight(filament::IndirectLight const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getSkybox() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getSkybox() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1080, 
            "$dominant_symbol": "code"
          }, 
          "name": "SamplerBindingMap 1.1k", 
          "children": [
            {
              "data": {
                "$area": 940, 
                "$symbol": "code"
              }, 
              "name": "populate(filament::SamplerInterfaceBlock const*, char const*) 940"
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "addSampler(filament::SamplerBindingInfo) 140"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1024, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::PostProcessDof, filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_19> 1.0k", 
          "children": [
            {
              "data": {
                "$area": 692, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 692"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 216"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 923, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::PostProcessDofCombine, filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_23> 923", 
          "children": [
            {
              "data": {
                "$area": 584, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 584"
            }, 
            {
              "data": {
                "$area": 223, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 223"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 888, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::ShadowMapManager::render(filament::FrameGraph&, filament::FEngine&, filament::FView&, filament::backend::CommandStream&, filament::RenderPass&)::ShadowPassData, filament::ShadowMapManager::render(filament::FrameGraph&, filament::FEngine&, filament::FView&, filament::backend::CommandStream&, filament::RenderPass&)::$_1> 888", 
          "children": [
            {
              "data": {
                "$area": 372, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 372"
            }, 
            {
              "data": {
                "$area": 240, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 240"
            }, 
            {
              "data": {
                "$area": 196, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 196"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 888, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "MaterialInstance 888", 
          "children": [
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "setDoubleSided(bool) 128"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "setParameter(char const*, filament::RgbaType, filament::math::details::TVec4<float>) 124"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "setParameter(char const*, filament::Texture const*, filament::TextureSampler const&) 80"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "setParameter(char const*, filament::RgbType, filament::math::details::TVec3<float>) 56"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TMat33<float>, void>(char const*, filament::math::details::TMat33<float>) 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TMat44<float>, void>(char const*, filament::math::details::TMat44<float>) 48"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "setScissor(unsigned int, unsigned int, unsigned int, unsigned int) 40"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "setMaskThreshold(float) 28"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "setSpecularAntiAliasingVariance(float) 28"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "getName() const 28"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "setSpecularAntiAliasingThreshold(float) 24"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setDepthCulling(bool) 20"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setPolygonOffset(float, float) 20"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "unsetScissor() 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setColorWrite(bool) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setDepthWrite(bool) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getMaterial() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<int>, void>(char const*, filament::math::details::TVec3<int>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<bool>, void>(char const*, filament::math::details::TVec4<bool>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setCullingMode(filament::backend::CullingMode) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<bool>, void>(char const*, filament::math::details::TVec3<bool>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<unsigned int>, void>(char const*, filament::math::details::TVec3<unsigned int>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<bool>, void>(char const*, filament::math::details::TVec2<bool>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<bool, void>(char const*, bool) 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<float>, void>(char const*, filament::math::details::TVec3<float> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<unsigned int, void>(char const*, unsigned int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<unsigned int>, void>(char const*, filament::math::details::TVec2<unsigned int>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TMat44<float>, void>(char const*, filament::math::details::TMat44<float> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<int>, void>(char const*, filament::math::details::TVec2<int> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<bool, void>(char const*, bool const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<bool>, void>(char const*, filament::math::details::TVec3<bool> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<int, void>(char const*, int const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<unsigned int>, void>(char const*, filament::math::details::TVec4<unsigned int> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<bool>, void>(char const*, filament::math::details::TVec4<bool> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<float>, void>(char const*, filament::math::details::TVec4<float> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<int>, void>(char const*, filament::math::details::TVec4<int> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<int>, void>(char const*, filament::math::details::TVec4<int>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<int>, void>(char const*, filament::math::details::TVec2<int>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<float, void>(char const*, float const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<int, void>(char const*, int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<unsigned int>, void>(char const*, filament::math::details::TVec4<unsigned int>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<unsigned int, void>(char const*, unsigned int const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<float>, void>(char const*, filament::math::details::TVec2<float> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<float>, void>(char const*, filament::math::details::TVec2<float>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<float>, void>(char const*, filament::math::details::TVec3<float>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<bool>, void>(char const*, filament::math::details::TVec2<bool> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec2<unsigned int>, void>(char const*, filament::math::details::TVec2<unsigned int> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<float, void>(char const*, float) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<unsigned int>, void>(char const*, filament::math::details::TVec3<unsigned int> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec4<float>, void>(char const*, filament::math::details::TVec4<float>) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TMat33<float>, void>(char const*, filament::math::details::TMat33<float> const*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "setParameter<filament::math::details::TVec3<int>, void>(char const*, filament::math::details::TVec3<int> const*, unsigned long) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 872, 
            "$dominant_symbol": "code"
          }, 
          "name": "SibGenerator 872", 
          "children": [
            {
              "data": {
                "$area": 556, 
                "$symbol": "code"
              }, 
              "name": "getPerViewSib(unsigned char)::$_0::operator()(bool) const 556"
            }, 
            {
              "data": {
                "$area": 276, 
                "$symbol": "code"
              }, 
              "name": "getPerViewSib(unsigned char) 276"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "getSib(unsigned char, unsigned char) 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 838, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::PostProcessDofMedian, filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_21> 838", 
          "children": [
            {
              "data": {
                "$area": 500, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 500"
            }, 
            {
              "data": {
                "$area": 222, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 222"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 824, 
            "$dominant_symbol": "code"
          }, 
          "name": "RenderTarget 824", 
          "children": [
            {
              "data": {
                "$area": 776, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 776", 
              "children": [
                {
                  "data": {
                    "$area": 356, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 356"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 128"
                }, 
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::RenderTarget::Builder const&) 120"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::RenderTarget::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::RenderTarget::Builder const&) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::RenderTarget::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "texture(filament::RenderTarget::AttachmentPoint, filament::Texture*) 20"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "layer(filament::RenderTarget::AttachmentPoint, unsigned int) 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "mipLevel(filament::RenderTarget::AttachmentPoint, unsigned char) 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "face(filament::RenderTarget::AttachmentPoint, filament::backend::TextureCubemapFace) 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getTexture(filament::RenderTarget::AttachmentPoint) const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getMipLevel(filament::RenderTarget::AttachmentPoint) const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getFace(filament::RenderTarget::AttachmentPoint) const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getLayer(filament::RenderTarget::AttachmentPoint) const 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 768, 
            "$dominant_symbol": "code"
          }, 
          "name": "Engine 768", 
          "children": [
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Camera const*) 80"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 76"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "streamAlloc(unsigned long, unsigned long) 76"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Engine**) 68"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "createCamera() 68"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getCameraComponent(utils::Entity) 60"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Engine*) 52"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "execute() 40"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "createCamera(utils::Entity) 32"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "destroyCameraComponent(utils::Entity) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::VertexBuffer const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getJobSystem() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getRenderableManager() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "createFence() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Skybox const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getLightManager() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::ColorGrading const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Stream const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::IndirectLight const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::IndexBuffer const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::SwapChain const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getTransformManager() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Renderer const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getDefaultMaterial() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::RenderTarget const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getDebugRegistry() 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::View const*) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getBackend() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Scene const*) 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Material const*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "createAsync(void (*)(void*, void*), void*, filament::backend::Backend, filament::backend::Platform*, void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Fence const*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "flushAndWait() 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "createScene() 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "create(filament::backend::Backend, filament::backend::Platform*, void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::Texture const*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::MaterialInstance const*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "createRenderer() 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "createSwapChain(void*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "createSwapChain(unsigned int, unsigned int, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "getEngine(void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "createView() 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 764, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::vsmMipmapPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, unsigned long)::VsmMipData, filament::PostProcessManager::vsmMipmapPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned char, unsigned long)::$_41> 764", 
          "children": [
            {
              "data": {
                "$area": 468, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 468"
            }, 
            {
              "data": {
                "$area": 180, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 180"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 758, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::PostProcessDofDownsample, filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_12> 758", 
          "children": [
            {
              "data": {
                "$area": 416, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 416"
            }, 
            {
              "data": {
                "$area": 226, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 226"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 740, 
            "$dominant_symbol": "code"
          }, 
          "name": "Stream 740", 
          "children": [
            {
              "data": {
                "$area": 480, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 480", 
              "children": [
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::Stream::Builder const&) 136"
                }, 
                {
                  "data": {
                    "$area": 104, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 104"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 80"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::Stream::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::Stream::Builder const&) 28"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::Stream::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "stream(long) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "width(unsigned int) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "height(unsigned int) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "stream(void*) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 116, 
                "$symbol": "code"
              }, 
              "name": "setDimensions(unsigned int, unsigned int) 116"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "setAcquiredImage(void*, void (*)(void*, void*), void*) 72"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getTimestamp() const 60"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getStreamType() const 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "readPixels(unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 731, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::PostProcessDofTiling1, filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_16> 731", 
          "children": [
            {
              "data": {
                "$area": 392, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 392"
            }, 
            {
              "data": {
                "$area": 223, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 223"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 720, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameSkipper 720", 
          "children": [
            {
              "data": {
                "$area": 368, 
                "$symbol": "code"
              }, 
              "name": "~FrameSkipper() 368"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "beginFrame() 172"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "endFrame() 148"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "FrameSkipper(filament::FEngine&, unsigned long) 32"
            }
          ]
        }, 
        {
          "data": {
            "$area": 708, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_17::operator()(filament::FrameGraphId<filament::FrameGraphTexture>) const::PostProcessDofDilate, filament::PostProcessManager::dof(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::View::DepthOfFieldOptions const&, bool, filament::CameraInfo const&)::$_17::operator()(filament::FrameGraphId<filament::FrameGraphTexture>) const::{lambda(filament::FrameGraphPassResources const&, auto:1 const&, filament::backend::CommandStream&)#1}> 708", 
          "children": [
            {
              "data": {
                "$area": 312, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 312"
            }, 
            {
              "data": {
                "$area": 280, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 280"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 696, 
            "$dominant_symbol": "code"
          }, 
          "name": "FSwapChain 696", 
          "children": [
            {
              "data": {
                "$area": 288, 
                "$symbol": "code"
              }, 
              "name": "FSwapChain(filament::FEngine&, unsigned int, unsigned int, unsigned long) 288"
            }, 
            {
              "data": {
                "$area": 272, 
                "$symbol": "code"
              }, 
              "name": "FSwapChain(filament::FEngine&, void*, unsigned long) 272"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "setFrameScheduledCallback(void (*)(filament::backend::PresentCallable, void*), void*) 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "setFrameCompletedCallback(void (*)(void*), void*) 48"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 680, 
            "$dominant_symbol": "code"
          }, 
          "name": "Skybox 680", 
          "children": [
            {
              "data": {
                "$area": 516, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 516", 
              "children": [
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 136"
                }, 
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::Skybox::Builder const&) 120"
                }, 
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 84"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::Skybox::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::Skybox::Builder const&) 28"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "color(filament::math::details::TVec4<float>) 24"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::Skybox::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "showSun(bool) 16"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "intensity(float) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "environment(filament::Texture*) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "setLayerMask(unsigned char, unsigned char) 124"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "setColor(filament::math::details::TVec4<float>) 16"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getLayerMask() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getIntensity() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getTexture() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 668, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "GLUtils 668", 
          "children": [
            {
              "data": {
                "$area": 436, 
                "$symbol": "weak symbol"
              }, 
              "name": "split(char const*) 436"
            }, 
            {
              "data": {
                "$area": 212, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "unordered_string_set 212", 
              "children": [
                {
                  "data": {
                    "$area": 212, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "has(char const*) 212"
                }
              ]
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "weak symbol"
              }, 
              "name": "getInternalFormat(filament::backend::TextureFormat) 20"
            }
          ]
        }, 
        {
          "data": {
            "$area": 668, 
            "$dominant_symbol": "code"
          }, 
          "name": "Aabb 668", 
          "children": [
            {
              "data": {
                "$area": 428, 
                "$symbol": "code"
              }, 
              "name": "transform(filament::math::details::TMat44<float> const&) const 428"
            }, 
            {
              "data": {
                "$area": 172, 
                "$symbol": "code"
              }, 
              "name": "contains(filament::math::details::TVec3<float>) const 172"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "getCorners() const 68"
            }
          ]
        }, 
        {
          "data": {
            "$area": 617, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::mipmapPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned long)::DepthMipData, filament::PostProcessManager::mipmapPass(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, unsigned long)::$_3> 617", 
          "children": [
            {
              "data": {
                "$area": 328, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 328"
            }, 
            {
              "data": {
                "$area": 173, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 173"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 612, 
            "$dominant_symbol": "code"
          }, 
          "name": "TransformManager 612", 
          "children": [
            {
              "data": {
                "$area": 208, 
                "$symbol": "code"
              }, 
              "name": "setTransform(utils::EntityInstance<filament::TransformManager, false>, filament::math::details::TMat44<float> const&) 208"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "getChildren(utils::EntityInstance<filament::TransformManager, false>, utils::Entity*, unsigned long) const 76"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "create(utils::Entity, utils::EntityInstance<filament::TransformManager, false>) 64"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getChildCount(utils::EntityInstance<filament::TransformManager, false>) const 48"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "getParent(utils::EntityInstance<filament::TransformManager, false>) const 32"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "hasComponent(utils::Entity) const 32"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "getInstance(utils::Entity) const 28"
            }, 
            {
              "data": {
                "$area": 24, 
                "$dominant_symbol": "code"
              }, 
              "name": "children_iterator 24", 
              "children": [
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "operator++() 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getTransform(utils::EntityInstance<filament::TransformManager, false>) const 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "getWorldTransform(utils::EntityInstance<filament::TransformManager, false>) const 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getChildrenBegin(utils::EntityInstance<filament::TransformManager, false>) const 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "setParent(utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "create(utils::Entity, utils::EntityInstance<filament::TransformManager, false>, filament::math::details::TMat44<float> const&) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "openLocalTransformTransaction() 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "destroy(utils::Entity) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getChildrenEnd(utils::EntityInstance<filament::TransformManager, false>) const 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "commitLocalTransformTransaction() 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 608, 
            "$dominant_symbol": "code"
          }, 
          "name": "UniformBuffer 608", 
          "children": [
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "UniformBuffer(filament::UniformBuffer&&) 168"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "UniformBuffer(unsigned long) 168"
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "setUniforms(filament::UniformBuffer const&) 140"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "operator=(filament::UniformBuffer&&) 124"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "free(void*, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "alloc(unsigned long) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 589, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::fxaa(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::backend::TextureFormat, bool)::PostProcessFXAA, filament::PostProcessManager::fxaa(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::backend::TextureFormat, bool)::$_31> 589", 
          "children": [
            {
              "data": {
                "$area": 280, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 280"
            }, 
            {
              "data": {
                "$area": 193, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 193"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 588, 
            "$dominant_symbol": "code"
          }, 
          "name": "ChunkUniformInterfaceBlock 588", 
          "children": [
            {
              "data": {
                "$area": 588, 
                "$symbol": "code"
              }, 
              "name": "unflatten(filaflat::Unflattener&, filament::UniformInterfaceBlock*) 588"
            }
          ]
        }, 
        {
          "data": {
            "$area": 531, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::opaqueBlit(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FrameGraphTexture::Descriptor, filament::backend::SamplerMagFilter)::PostProcessScaling, filament::PostProcessManager::opaqueBlit(filament::FrameGraph&, filament::FrameGraphId<filament::FrameGraphTexture>, filament::FrameGraphTexture::Descriptor, filament::backend::SamplerMagFilter)::$_35> 531", 
          "children": [
            {
              "data": {
                "$area": 231, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 231"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 184"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 505, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::structure(filament::FrameGraph&, filament::RenderPass const&, unsigned int, unsigned int, float)::StructurePassData, filament::PostProcessManager::structure(filament::FrameGraph&, filament::RenderPass const&, unsigned int, unsigned int, float)::$_1> 505", 
          "children": [
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 168"
            }, 
            {
              "data": {
                "$area": 153, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 153"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 104"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 504, 
            "$dominant_symbol": "code"
          }, 
          "name": "FRenderTarget 504", 
          "children": [
            {
              "data": {
                "$area": 272, 
                "$symbol": "code"
              }, 
              "name": "createHandle(filament::FEngine&, filament::RenderTarget::Builder const&) 272"
            }, 
            {
              "data": {
                "$area": 192, 
                "$symbol": "code"
              }, 
              "name": "FRenderTarget(filament::FEngine&, filament::RenderTarget::Builder const&) 192"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 484, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "ResourceListBase 484", 
          "children": [
            {
              "data": {
                "$area": 292, 
                "$symbol": "weak symbol"
              }, 
              "name": "~ResourceListBase() 292"
            }, 
            {
              "data": {
                "$area": 100, 
                "$symbol": "weak symbol"
              }, 
              "name": "remove(void const*) 100"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "weak symbol"
              }, 
              "name": "ResourceListBase(char const*) 48"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "weak symbol"
              }, 
              "name": "insert(void*) 44"
            }
          ]
        }, 
        {
          "data": {
            "$area": 476, 
            "$dominant_symbol": "code"
          }, 
          "name": "Exposure 476", 
          "children": [
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "exposure(filament::Camera const&) 64"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "exposure(float) 52"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "exposure(float, float, float) 52"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "luminance(filament::Camera const&) 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "illuminance(filament::Camera const&) 48"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "ev100(filament::Camera const&) 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "luminance(float, float, float) 36"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "illuminance(float, float, float) 36"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "illuminance(float) 28"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "ev100(float, float, float) 28"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "ev100FromIlluminance(float) 20"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "luminance(float) 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "ev100FromLuminance(float) 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 465, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::PostProcessManager::resolve(filament::FrameGraph&, char const*, filament::FrameGraphId<filament::FrameGraphTexture>)::ResolveData, filament::PostProcessManager::resolve(filament::FrameGraph&, char const*, filament::FrameGraphId<filament::FrameGraphTexture>)::$_39> 465", 
          "children": [
            {
              "data": {
                "$area": 180, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 180"
            }, 
            {
              "data": {
                "$area": 169, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 169"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 460, 
            "$dominant_symbol": "code"
          }, 
          "name": "IndexBuffer 460", 
          "children": [
            {
              "data": {
                "$area": 384, 
                "$dominant_symbol": "code"
              }, 
              "name": "Builder 384", 
              "children": [
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::IndexBuffer::Builder const&) 120"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder() 112"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~Builder() 32"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "Builder(filament::IndexBuffer::Builder&&) 32"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::IndexBuffer::Builder const&) 28"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "operator=(filament::IndexBuffer::Builder&&) 20"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "build(filament::Engine&) 16"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "indexCount(unsigned int) 12"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "bufferType(filament::IndexBuffer::IndexType) 12"
                }
              ]
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "setBuffer(filament::Engine&, filament::backend::BufferDescriptor&&, unsigned int) 68"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getIndexCount() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 444, 
            "$symbol": "weak symbol"
          }, 
          "name": "ACEScct_to_linearAP1(filament::math::details::TVec3<float>) 444"
        }, 
        {
          "data": {
            "$area": 436, 
            "$symbol": "code"
          }, 
          "name": "addSamplerGroup(filament::backend::Program&, unsigned char, filament::SamplerInterfaceBlock const&, filament::SamplerBindingMap const&) 436"
        }, 
        {
          "data": {
            "$area": 432, 
            "$dominant_symbol": "code"
          }, 
          "name": "ChunkSamplerInterfaceBlock 432", 
          "children": [
            {
              "data": {
                "$area": 432, 
                "$symbol": "code"
              }, 
              "name": "unflatten(filaflat::Unflattener&, filament::SamplerInterfaceBlock*) 432"
            }
          ]
        }, 
        {
          "data": {
            "$area": 428, 
            "$dominant_symbol": "code"
          }, 
          "name": "FRenderPrimitive 428", 
          "children": [
            {
              "data": {
                "$area": 228, 
                "$symbol": "code"
              }, 
              "name": "init(filament::backend::CommandStream&, filament::RenderableManager::Builder::Entry const&) 228"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "set(filament::FEngine&, filament::backend::PrimitiveType, filament::FVertexBuffer*, filament::FIndexBuffer*, unsigned long, unsigned long, unsigned long, unsigned long) 104"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "set(filament::FEngine&, filament::backend::PrimitiveType, unsigned long, unsigned long, unsigned long, unsigned long) 56"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 420, 
            "$dominant_symbol": "code"
          }, 
          "name": "Renderer 420", 
          "children": [
            {
              "data": {
                "$area": 160, 
                "$symbol": "code"
              }, 
              "name": "setFrameRateOptions(filament::Renderer::FrameRateOptions const&) 160"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "readPixels(unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 60"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "getUserTime() const 44"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "readPixels(filament::RenderTarget*, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&) 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "resetUserTime() 36"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "setClearOptions(filament::Renderer::ClearOptions const&) 24"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "setDisplayInfo(filament::Renderer::DisplayInfo const&) 20"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "beginFrame(filament::SwapChain*, unsigned long) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getEngine() 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "render(filament::View const*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "copyFrame(filament::SwapChain*, filament::Viewport const&, filament::Viewport const&, unsigned int) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "beginFrame(filament::SwapChain*, unsigned long, void (*)(filament::backend::PresentCallable, void*), void*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "endFrame() 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 402, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::ShadowMapManager::render(filament::FrameGraph&, filament::FEngine&, filament::FView&, filament::backend::CommandStream&, filament::RenderPass&)::DebugPatternData, filament::ShadowMapManager::render(filament::FrameGraph&, filament::FEngine&, filament::FView&, filament::backend::CommandStream&, filament::RenderPass&)::$_3> 402", 
          "children": [
            {
              "data": {
                "$area": 198, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 198"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 88"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 36"
            }
          ]
        }, 
        {
          "data": {
            "$area": 396, 
            "$dominant_symbol": "code"
          }, 
          "name": "DebugRegistry 396", 
          "children": [
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "getProperty(char const*, filament::math::details::TVec3<float>*) const 56"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getProperty(char const*, int*) const 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getProperty(char const*, filament::math::details::TVec2<float>*) const 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getProperty(char const*, filament::math::details::TVec4<float>*) const 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getProperty(char const*, bool*) const 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "getProperty(char const*, float*) const 48"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "hasProperty(char const*) const 28"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "getProperties() const 20"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setProperty(char const*, filament::math::details::TVec4<float>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setProperty(char const*, float) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setProperty(char const*, bool) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setProperty(char const*, int) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setProperty(char const*, filament::math::details::TVec2<float>) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "setProperty(char const*, filament::math::details::TVec3<float>) 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "getPropertyAddress(char const*) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 396, 
            "$dominant_symbol": "code"
          }, 
          "name": "FIndexBuffer 396", 
          "children": [
            {
              "data": {
                "$area": 288, 
                "$symbol": "code"
              }, 
              "name": "FIndexBuffer(filament::FEngine&, filament::IndexBuffer::Builder const&) 288"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "setBuffer(filament::FEngine&, filament::backend::BufferDescriptor&&, unsigned int) 68"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "terminate(filament::FEngine&) 40"
            }
          ]
        }, 
        {
          "data": {
            "$area": 372, 
            "$dominant_symbol": "code"
          }, 
          "name": "VirtualMachineEnv 372", 
          "children": [
            {
              "data": {
                "$area": 124, 
                "$symbol": "weak symbol"
              }, 
              "name": "get() 124"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "code"
              }, 
              "name": "handleException(_JNIEnv*) 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "code"
              }, 
              "name": "JNI_OnLoad(_JavaVM*) 88"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "getEnvironmentSlow() 60"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "get()::instance [guard variable] 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "get()::instance 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 360, 
            "$symbol": "data"
          }, 
          "name": "NoopDriver [vtable] 360"
        }, 
        {
          "data": {
            "$area": 360, 
            "$symbol": "data"
          }, 
          "name": "OpenGLDriver [vtable] 360"
        }, 
        {
          "data": {
            "$area": 320, 
            "$symbol": "weak symbol"
          }, 
          "name": "linearAP1_to_ACEScct(filament::math::details::TVec3<float>) 320"
        }, 
        {
          "data": {
            "$area": 296, 
            "$dominant_symbol": "code"
          }, 
          "name": "TimerQueryFallback 296", 
          "children": [
            {
              "data": {
                "$area": 156, 
                "$symbol": "code"
              }, 
              "name": "beginTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*) 156"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*) 64"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "TimerQueryFallback() 32"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "queryResultAvailable(filament::OpenGLDriver::GLTimerQuery*) 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "~TimerQueryFallback() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "queryResult(filament::OpenGLDriver::GLTimerQuery*) 12"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "flush() 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 276, 
            "$symbol": "code"
          }, 
          "name": "createParser(filament::backend::Backend, void const*, unsigned long) 276"
        }, 
        {
          "data": {
            "$area": 264, 
            "$symbol": "data"
          }, 
          "name": "PlatformEGLAndroid [vtable] 264"
        }, 
        {
          "data": {
            "$area": 264, 
            "$symbol": "data"
          }, 
          "name": "PlatformEGL [vtable] 264"
        }, 
        {
          "data": {
            "$area": 256, 
            "$dominant_symbol": "code"
          }, 
          "name": "TimerQueryNative 256", 
          "children": [
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "queryResult(filament::OpenGLDriver::GLTimerQuery*) 60"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "queryResultAvailable(filament::OpenGLDriver::GLTimerQuery*) 56"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "beginTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*) 52"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*) 40"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "TimerQueryNative(filament::OpenGLContext&) 32"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "~TimerQueryNative() 12"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "flush() 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 248, 
            "$symbol": "code"
          }, 
          "name": "rigidTransform(filament::Box const&, filament::math::details::TMat44<float> const&) 248"
        }, 
        {
          "data": {
            "$area": 240, 
            "$dominant_symbol": "code"
          }, 
          "name": "Blackboard 240", 
          "children": [
            {
              "data": {
                "$area": 212, 
                "$symbol": "code"
              }, 
              "name": "getHandle(utils::StaticString const&) const 212"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "remove(utils::StaticString const&) 28"
            }
          ]
        }, 
        {
          "data": {
            "$area": 232, 
            "$symbol": "code"
          }, 
          "name": "rigidTransform(filament::Box const&, filament::math::details::TMat33<float> const&) 232"
        }, 
        {
          "data": {
            "$area": 230, 
            "$symbol": "read-only data"
          }, 
          "name": "s_fragmentES 230"
        }, 
        {
          "data": {
            "$area": 200, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphTexture 200", 
          "children": [
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "create(filament::ResourceAllocatorInterface&, char const*, filament::FrameGraphTexture::Descriptor const&) 136"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "destroy(filament::ResourceAllocatorInterface&) 64"
            }
          ]
        }, 
        {
          "data": {
            "$area": 181, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPass<filament::FrameGraph::Empty, filament::FrameGraph::present(filament::FrameGraphHandle)::$_3> 181", 
          "children": [
            {
              "data": {
                "$area": 93, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 93"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 40"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPass() 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "execute(filament::FrameGraphPassResources const&, filament::backend::CommandStream&) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 172, 
            "$symbol": "weak symbol"
          }, 
          "name": "LogC_to_linear(filament::math::details::TVec3<float>) 172"
        }, 
        {
          "data": {
            "$area": 171, 
            "$symbol": "read-only data"
          }, 
          "name": "s_fragmentGL 171"
        }, 
        {
          "data": {
            "$area": 156, 
            "$symbol": "weak symbol"
          }, 
          "name": "linear_to_LogC(filament::math::details::TVec3<float>) 156"
        }, 
        {
          "data": {
            "$area": 120, 
            "$dominant_symbol": "code"
          }, 
          "name": "Viewport 120", 
          "children": [
            {
              "data": {
                "$area": 120, 
                "$symbol": "code"
              }, 
              "name": "scale(filament::math::details::TVec2<float>) const 120"
            }
          ]
        }, 
        {
          "data": {
            "$area": 104, 
            "$dominant_symbol": "code"
          }, 
          "name": "SwapChain 104", 
          "children": [
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "setFrameScheduledCallback(void (*)(filament::backend::PresentCallable, void*), void*) 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "setFrameCompletedCallback(void (*)(void*), void*) 48"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getNativeWindow() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 100, 
            "$symbol": "code"
          }, 
          "name": "selectLumaTransform(filament::ColorGrading::ToneMapping) 100"
        }, 
        {
          "data": {
            "$area": 84, 
            "$symbol": "code"
          }, 
          "name": "selectColorGradingTransformIn(filament::ColorGrading::ToneMapping) 84"
        }, 
        {
          "data": {
            "$area": 84, 
            "$symbol": "code"
          }, 
          "name": "selectColorGradingTransformOut(filament::ColorGrading::ToneMapping) 84"
        }, 
        {
          "data": {
            "$area": 80, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPassResources 80", 
          "children": [
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "getResourceEntryBase(filament::FrameGraphHandle) const 52"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "FrameGraphPassResources(filament::FrameGraph&, filament::fg::PassNode const&) 16"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "getPassName() const 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 76, 
            "$symbol": "code"
          }, 
          "name": "selectLutTextureParams(filament::ColorGrading::QualityLevel, filament::backend::TextureFormat&, filament::backend::PixelDataFormat&, filament::backend::PixelDataType&) 76"
        }, 
        {
          "data": {
            "$area": 72, 
            "$symbol": "data"
          }, 
          "name": "TimerQueryNative [vtable] 72"
        }, 
        {
          "data": {
            "$area": 72, 
            "$symbol": "data"
          }, 
          "name": "TimerQueryInterface [vtable] 72"
        }, 
        {
          "data": {
            "$area": 72, 
            "$symbol": "data"
          }, 
          "name": "TimerQueryFence [vtable] 72"
        }, 
        {
          "data": {
            "$area": 72, 
            "$symbol": "data"
          }, 
          "name": "TimerQueryFallback [vtable] 72"
        }, 
        {
          "data": {
            "$area": 71, 
            "$symbol": "read-only data"
          }, 
          "name": "s_vertexGL 71"
        }, 
        {
          "data": {
            "$area": 69, 
            "$symbol": "read-only data"
          }, 
          "name": "s_vertexES 69"
        }, 
        {
          "data": {
            "$area": 68, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "PlatformNoop 68", 
          "children": [
            {
              "data": {
                "$area": 36, 
                "$symbol": "weak symbol"
              }, 
              "name": "~PlatformNoop() 36"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "createDriver(void*) 24"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "weak symbol"
              }, 
              "name": "getOSVersion() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 64, 
            "$symbol": "read-only data"
          }, 
          "name": "dataTypeToTextureFormat(filament::GPUBuffer::Element)::formats 64"
        }, 
        {
          "data": {
            "$area": 64, 
            "$symbol": "data"
          }, 
          "name": "ResourceAllocatorInterface [vtable] 64"
        }, 
        {
          "data": {
            "$area": 64, 
            "$symbol": "data"
          }, 
          "name": "ResourceAllocator [vtable] 64"
        }, 
        {
          "data": {
            "$area": 56, 
            "$symbol": "data"
          }, 
          "name": "PlatformNoop [vtable] 56"
        }, 
        {
          "data": {
            "$area": 48, 
            "$symbol": "read-only data"
          }, 
          "name": "sFullScreenTriangleVertices 48"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "FrameGraphPassExecutor [vtable] 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "read-only data"
          }, 
          "name": "ResourceAllocatorInterface [typeinfo name] 40"
        }, 
        {
          "data": {
            "$area": 36, 
            "$symbol": "read-only data"
          }, 
          "name": "sRGB_to_AP1 36"
        }, 
        {
          "data": {
            "$area": 36, 
            "$symbol": "read-only data"
          }, 
          "name": "sRGB_to_REC2020 36"
        }, 
        {
          "data": {
            "$area": 36, 
            "$symbol": "read-only data"
          }, 
          "name": "FrameGraphPassExecutor [typeinfo name] 36"
        }, 
        {
          "data": {
            "$area": 36, 
            "$symbol": "read-only data"
          }, 
          "name": "AP1_to_sRGB 36"
        }, 
        {
          "data": {
            "$area": 36, 
            "$symbol": "code"
          }, 
          "name": "selectLogToLinearTransform(filament::ColorGrading::ToneMapping) 36"
        }, 
        {
          "data": {
            "$area": 36, 
            "$symbol": "code"
          }, 
          "name": "selectLinearToLogTransform(filament::ColorGrading::ToneMapping) 36"
        }, 
        {
          "data": {
            "$area": 36, 
            "$symbol": "read-only data"
          }, 
          "name": "REC2020_to_sRGB 36"
        }, 
        {
          "data": {
            "$area": 33, 
            "$symbol": "read-only data"
          }, 
          "name": "TimerQueryInterface [typeinfo name] 33"
        }, 
        {
          "data": {
            "$area": 32, 
            "$dominant_symbol": "code"
          }, 
          "name": "FrameGraphPassExecutor 32", 
          "children": [
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "FrameGraphPassExecutor() 20"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "~FrameGraphPassExecutor() 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 32, 
            "$symbol": "read-only data"
          }, 
          "name": "PlatformEGLAndroid [typeinfo name] 32"
        }, 
        {
          "data": {
            "$area": 32, 
            "$symbol": "read-only data"
          }, 
          "name": "TimerQueryFallback [typeinfo name] 32"
        }, 
        {
          "data": {
            "$area": 31, 
            "$symbol": "weak symbol"
          }, 
          "name": "FMaterialInstance [typeinfo name] 31"
        }, 
        {
          "data": {
            "$area": 31, 
            "$symbol": "read-only data"
          }, 
          "name": "ResourceAllocator [typeinfo name] 31"
        }, 
        {
          "data": {
            "$area": 30, 
            "$symbol": "read-only data"
          }, 
          "name": "TimerQueryNative [typeinfo name] 30"
        }, 
        {
          "data": {
            "$area": 29, 
            "$symbol": "read-only data"
          }, 
          "name": "TimerQueryFence [typeinfo name] 29"
        }, 
        {
          "data": {
            "$area": 28, 
            "$symbol": "weak symbol"
          }, 
          "name": "FIndirectLight [typeinfo name] 28"
        }, 
        {
          "data": {
            "$area": 27, 
            "$symbol": "weak symbol"
          }, 
          "name": "FVertexBuffer [typeinfo name] 27"
        }, 
        {
          "data": {
            "$area": 27, 
            "$symbol": "weak symbol"
          }, 
          "name": "FRenderTarget [typeinfo name] 27"
        }, 
        {
          "data": {
            "$area": 27, 
            "$symbol": "weak symbol"
          }, 
          "name": "FColorGrading [typeinfo name] 27"
        }, 
        {
          "data": {
            "$area": 26, 
            "$symbol": "weak symbol"
          }, 
          "name": "FIndexBuffer [typeinfo name] 26"
        }, 
        {
          "data": {
            "$area": 26, 
            "$symbol": "read-only data"
          }, 
          "name": "OpenGLDriver [typeinfo name] 26"
        }, 
        {
          "data": {
            "$area": 26, 
            "$symbol": "read-only data"
          }, 
          "name": "PlatformNoop [typeinfo name] 26"
        }, 
        {
          "data": {
            "$area": 25, 
            "$symbol": "read-only data"
          }, 
          "name": "PlatformEGL [typeinfo name] 25"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "PlatformEGLAndroid [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "PlatformEGL [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "read-only data"
          }, 
          "name": "NoopDriver [typeinfo name] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "weak symbol"
          }, 
          "name": "FSwapChain [typeinfo name] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "NoopDriver [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "OpenGLDriver [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "PlatformNoop [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "TimerQueryNative [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "TimerQueryFallback [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "ResourceAllocator [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "TimerQueryFence [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 22, 
            "$symbol": "weak symbol"
          }, 
          "name": "FRenderer [typeinfo name] 22"
        }, 
        {
          "data": {
            "$area": 22, 
            "$symbol": "weak symbol"
          }, 
          "name": "FMaterial [typeinfo name] 22"
        }, 
        {
          "data": {
            "$area": 21, 
            "$symbol": "weak symbol"
          }, 
          "name": "FTexture [typeinfo name] 21"
        }, 
        {
          "data": {
            "$area": 20, 
            "$symbol": "code"
          }, 
          "name": "selectLutDimension(filament::ColorGrading::QualityLevel) 20"
        }, 
        {
          "data": {
            "$area": 20, 
            "$symbol": "weak symbol"
          }, 
          "name": "FSkybox [typeinfo name] 20"
        }, 
        {
          "data": {
            "$area": 20, 
            "$symbol": "weak symbol"
          }, 
          "name": "FStream [typeinfo name] 20"
        }, 
        {
          "data": {
            "$area": 20, 
            "$symbol": "code"
          }, 
          "name": "selectToneMapping(filament::ColorGrading::ToneMapping) 20"
        }, 
        {
          "data": {
            "$area": 19, 
            "$symbol": "weak symbol"
          }, 
          "name": "FFence [typeinfo name] 19"
        }, 
        {
          "data": {
            "$area": 19, 
            "$symbol": "weak symbol"
          }, 
          "name": "FScene [typeinfo name] 19"
        }, 
        {
          "data": {
            "$area": 18, 
            "$symbol": "weak symbol"
          }, 
          "name": "FView [typeinfo name] 18"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "data"
          }, 
          "name": "FrameGraphPassExecutor [typeinfo] 16"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "data"
          }, 
          "name": "ResourceAllocatorInterface [typeinfo] 16"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "data"
          }, 
          "name": "TimerQueryInterface [typeinfo] 16"
        }, 
        {
          "data": {
            "$area": 12, 
            "$dominant_symbol": "code"
          }, 
          "name": "ResourceAllocatorInterface 12", 
          "children": [
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "~ResourceAllocatorInterface() 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 12, 
            "$dominant_symbol": "code"
          }, 
          "name": "TimerQueryInterface 12", 
          "children": [
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "~TimerQueryInterface() 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "Fence 8", 
          "children": [
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "wait(filament::Fence::Mode, unsigned long) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "waitAndDestroy(filament::Fence*, filament::Fence::Mode) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 6, 
            "$symbol": "read-only data"
          }, 
          "name": "sFullScreenTriangleIndices 6"
        }, 
        {
          "data": {
            "$area": 4, 
            "$symbol": "code"
          }, 
          "name": "JNI_OnLoad(_JavaVM*, void*) 4"
        }
      ]
    }, 
    {
      "data": {
        "$area": 104893, 
        "$dominant_symbol": "code"
      }, 
      "name": "std 104.9k", 
      "children": [
        {
          "data": {
            "$area": 101021, 
            "$dominant_symbol": "code"
          }, 
          "name": "__ndk1 101.0k", 
          "children": [
            {
              "data": {
                "$area": 25438, 
                "$dominant_symbol": "code"
              }, 
              "name": "__function 25.4k", 
              "children": [
                {
                  "data": {
                    "$area": 2336, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::equirectangularToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&)::$_2, std::__ndk1::allocator<filament::ibl::CubemapUtils::equirectangularToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&)::$_2>, void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 2.3k", 
                  "children": [
                    {
                      "data": {
                        "$area": 1856, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 1.9k"
                    }, 
                    {
                      "data": {
                        "$area": 220, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 220"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 64, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 64"
                    }, 
                    {
                      "data": {
                        "$area": 32, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 32"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 1614, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<std::__ndk1::reference_wrapper<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_4>, std::__ndk1::allocator<std::__ndk1::reference_wrapper<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_4> >, void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 1.6k", 
                  "children": [
                    {
                      "data": {
                        "$area": 1064, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 1.1k"
                    }, 
                    {
                      "data": {
                        "$area": 306, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 306"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 1401, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapIBL::diffuseIrradiance(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, unsigned long, std::__ndk1::function<void (unsigned long, float)>)::$_7, std::__ndk1::allocator<filament::ibl::CubemapIBL::diffuseIrradiance(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, unsigned long, std::__ndk1::function<void (unsigned long, float)>)::$_7>, void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 1.4k", 
                  "children": [
                    {
                      "data": {
                        "$area": 864, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 864"
                    }, 
                    {
                      "data": {
                        "$area": 261, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 261"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 72, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 72"
                    }, 
                    {
                      "data": {
                        "$area": 40, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 40"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 1203, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<std::__ndk1::__bind<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, unsigned long, unsigned long&, unsigned long const&>, std::__ndk1::allocator<std::__ndk1::__bind<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, unsigned long, unsigned long&, unsigned long const&> >, void ()> 1.2k", 
                  "children": [
                    {
                      "data": {
                        "$area": 508, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 508"
                    }, 
                    {
                      "data": {
                        "$area": 435, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 435"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 64, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 64"
                    }, 
                    {
                      "data": {
                        "$area": 32, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 32"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 1117, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<std::__ndk1::reference_wrapper<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_0>, std::__ndk1::allocator<std::__ndk1::reference_wrapper<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_0> >, void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 1.1k", 
                  "children": [
                    {
                      "data": {
                        "$area": 584, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 584"
                    }, 
                    {
                      "data": {
                        "$area": 289, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 289"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 950, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::crossToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&)::$_6, std::__ndk1::allocator<filament::ibl::CubemapUtils::crossToCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Image const&)::$_6>, void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 950", 
                  "children": [
                    {
                      "data": {
                        "$area": 496, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 496"
                    }, 
                    {
                      "data": {
                        "$area": 210, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 210"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 897, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::mirrorCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&)::$_9, std::__ndk1::allocator<filament::ibl::CubemapUtils::mirrorCubemap(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&)::$_9>, void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 897", 
                  "children": [
                    {
                      "data": {
                        "$area": 452, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 452"
                    }, 
                    {
                      "data": {
                        "$area": 201, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 201"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 875, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapIBL::brdf(utils::JobSystem&, filament::ibl::Cubemap&, float)::$_8, std::__ndk1::allocator<filament::ibl::CubemapIBL::brdf(utils::JobSystem&, filament::ibl::Cubemap&, float)::$_8>, void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 875", 
                  "children": [
                    {
                      "data": {
                        "$area": 432, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 432"
                    }, 
                    {
                      "data": {
                        "$area": 199, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 199"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 855, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<std::__ndk1::__bind<filament::ibl::CubemapUtils::process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}&, std::__ndk1::reference_wrapper<utils::JobSystem>, utils::JobSystem::Job*&>, std::__ndk1::allocator<utils::JobSystem::Job*&>, void ()> 855", 
                  "children": [
                    {
                      "data": {
                        "$area": 371, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 371"
                    }, 
                    {
                      "data": {
                        "$area": 192, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 192"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 80, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 80"
                    }, 
                    {
                      "data": {
                        "$area": 48, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<std::__ndk1::allocator<utils::JobSystem::Job*&> >*) const 48"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 816, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<std::__ndk1::__bind<filament::TimerQueryFence::endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*)::$_1>, std::__ndk1::allocator<std::__ndk1::__bind<filament::TimerQueryFence::endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*)::$_1> >, void ()> 816", 
                  "children": [
                    {
                      "data": {
                        "$area": 200, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 200"
                    }, 
                    {
                      "data": {
                        "$area": 160, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 160"
                    }, 
                    {
                      "data": {
                        "$area": 96, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 96"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 84, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 84"
                    }, 
                    {
                      "data": {
                        "$area": 64, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 64"
                    }, 
                    {
                      "data": {
                        "$area": 44, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 44"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 790, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::FFence::FFence(filament::FEngine&, filament::FFence::Type)::$_0, std::__ndk1::allocator<filament::FFence::FFence(filament::FEngine&, filament::FFence::Type)::$_0>, void ()> 790", 
                  "children": [
                    {
                      "data": {
                        "$area": 200, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 200"
                    }, 
                    {
                      "data": {
                        "$area": 106, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 106"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 88"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 88"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 88"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 12"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 764, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<std::__ndk1::__bind<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}&, std::__ndk1::reference_wrapper<utils::JobSystem>, utils::JobSystem::Job*&>, std::__ndk1::allocator<utils::JobSystem::Job*&>, void ()> 764", 
                  "children": [
                    {
                      "data": {
                        "$area": 292, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 292"
                    }, 
                    {
                      "data": {
                        "$area": 180, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 180"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 80, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 80"
                    }, 
                    {
                      "data": {
                        "$area": 48, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<std::__ndk1::allocator<utils::JobSystem::Job*&> >*) const 48"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 623, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::OpenGLDriver::updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_2, std::__ndk1::allocator<filament::OpenGLDriver::updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_2>, void ()> 623", 
                  "children": [
                    {
                      "data": {
                        "$area": 196, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 196"
                    }, 
                    {
                      "data": {
                        "$area": 151, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 151"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 72, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 72"
                    }, 
                    {
                      "data": {
                        "$area": 40, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 40"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 621, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::FRenderer::beginFrame(filament::FSwapChain*, unsigned long, void (*)(filament::backend::PresentCallable, void*), void*)::$_8, std::__ndk1::allocator<filament::FRenderer::beginFrame(filament::FSwapChain*, unsigned long, void (*)(filament::backend::PresentCallable, void*), void*)::$_8>, void ()> 621", 
                  "children": [
                    {
                      "data": {
                        "$area": 192, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 192"
                    }, 
                    {
                      "data": {
                        "$area": 153, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 153"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 72, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 72"
                    }, 
                    {
                      "data": {
                        "$area": 40, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 40"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 604, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::generateUVGrid(utils::JobSystem&, filament::ibl::Cubemap&, unsigned long, unsigned long)::$_10, std::__ndk1::allocator<filament::ibl::CubemapUtils::generateUVGrid(utils::JobSystem&, filament::ibl::Cubemap&, unsigned long, unsigned long)::$_10>, void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 604", 
                  "children": [
                    {
                      "data": {
                        "$area": 200, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 200"
                    }, 
                    {
                      "data": {
                        "$area": 144, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 144"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 64, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 64"
                    }, 
                    {
                      "data": {
                        "$area": 32, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 32"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 603, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::downsampleCubemapLevelBoxFilter(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&)::$_7, std::__ndk1::allocator<filament::ibl::CubemapUtils::downsampleCubemapLevelBoxFilter(utils::JobSystem&, filament::ibl::Cubemap&, filament::ibl::Cubemap const&)::$_7>, void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 603", 
                  "children": [
                    {
                      "data": {
                        "$area": 219, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 219"
                    }, 
                    {
                      "data": {
                        "$area": 140, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&, unsigned long&&, filament::ibl::Cubemap::Face&&, filament::math::details::TVec3<float>*&&, unsigned long&&) 140"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>*) const 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 584, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<filament::OpenGLDriver::createSyncR(filament::backend::Handle<filament::backend::HwSync>, int)::{lambda()#1}, std::__ndk1::allocator<{lambda()#1}>, bool ()> 584", 
                  "children": [
                    {
                      "data": {
                        "$area": 136, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 136"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 88"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 84, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 84"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<std::__ndk1::allocator<{lambda()#1}> >*) const 56"
                    }, 
                    {
                      "data": {
                        "$area": 44, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 44"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 8, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 8"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 547, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::processSingleThreaded<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::$_5, std::__ndk1::allocator<filament::ibl::CubemapUtils::processSingleThreaded<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::$_5>, void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)> 547", 
                  "children": [
                    {
                      "data": {
                        "$area": 327, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 327"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>*) const 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&) 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 535, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::OpenGLDriver::updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_1, std::__ndk1::allocator<filament::OpenGLDriver::updateStreamTexId(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_1>, void ()> 535", 
                  "children": [
                    {
                      "data": {
                        "$area": 151, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 151"
                    }, 
                    {
                      "data": {
                        "$area": 124, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 124"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 64, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 64"
                    }, 
                    {
                      "data": {
                        "$area": 32, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 32"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 532, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::$_6, std::__ndk1::allocator<filament::ibl::CubemapUtils::process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::$_6>, void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)> 532", 
                  "children": [
                    {
                      "data": {
                        "$area": 312, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 312"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>*) const 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&) 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 518, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::OpenGLDriver::updateStreamAcquired(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_0, std::__ndk1::allocator<filament::OpenGLDriver::updateStreamAcquired(filament::OpenGLDriver::GLTexture*, filament::backend::CommandStream*)::$_0>, void ()> 518", 
                  "children": [
                    {
                      "data": {
                        "$area": 154, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 154"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 88"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 72, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 72"
                    }, 
                    {
                      "data": {
                        "$area": 40, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 40"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 480, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<filament::OpenGLDriver::endTimerQuery(filament::backend::Handle<filament::backend::HwTimerQuery>)::{lambda()#1}, std::__ndk1::allocator<{lambda()#1}>, bool ()> 480", 
                  "children": [
                    {
                      "data": {
                        "$area": 144, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 144"
                    }, 
                    {
                      "data": {
                        "$area": 92, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 92"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<std::__ndk1::allocator<{lambda()#1}> >*) const 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 469, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_8, std::__ndk1::allocator<filament::ibl::CubemapUtils::processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_8>, void (filament::ibl::CubemapUtils::EmptyState&)> 469", 
                  "children": [
                    {
                      "data": {
                        "$area": 249, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 249"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&)>*) const 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&) 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 469, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_1, std::__ndk1::allocator<filament::ibl::CubemapUtils::processSingleThreaded<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_1>, void (filament::ibl::CubemapUtils::EmptyState&)> 469", 
                  "children": [
                    {
                      "data": {
                        "$area": 249, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 249"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&)>*) const 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&) 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 461, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<std::__ndk1::__bind<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, filament::FRenderableManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&>, std::__ndk1::allocator<std::__ndk1::__bind<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, filament::FRenderableManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&> >, void ()> 461", 
                  "children": [
                    {
                      "data": {
                        "$area": 165, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 165"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 68, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 68"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 460, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<std::__ndk1::__bind<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, filament::FTransformManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&>, std::__ndk1::allocator<std::__ndk1::__bind<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, filament::FTransformManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&> >, void ()> 460", 
                  "children": [
                    {
                      "data": {
                        "$area": 164, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 164"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 68, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 68"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 457, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<std::__ndk1::__bind<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, filament::FCameraManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&>, std::__ndk1::allocator<std::__ndk1::__bind<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, filament::FCameraManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&> >, void ()> 457", 
                  "children": [
                    {
                      "data": {
                        "$area": 161, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 161"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 68, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 68"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 456, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<std::__ndk1::__bind<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, filament::FLightManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&>, std::__ndk1::allocator<std::__ndk1::__bind<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, filament::FLightManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&> >, void ()> 456", 
                  "children": [
                    {
                      "data": {
                        "$area": 160, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 160"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 68, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 68"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 454, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_3, std::__ndk1::allocator<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_3>, void (filament::ibl::CubemapUtils::EmptyState&)> 454", 
                  "children": [
                    {
                      "data": {
                        "$area": 234, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 234"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&)>*) const 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&) 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 454, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_2, std::__ndk1::allocator<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::$_2>, void (filament::ibl::CubemapUtils::EmptyState&)> 454", 
                  "children": [
                    {
                      "data": {
                        "$area": 234, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 234"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void (filament::ibl::CubemapUtils::EmptyState&)>*) const 16"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()(filament::ibl::CubemapUtils::EmptyState&) 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 444, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<filament::OpenGLDriver::readPixels(filament::backend::Handle<filament::backend::HwRenderTarget>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&)::{lambda()#1}, std::__ndk1::allocator<{lambda()#1}>, void ()> 444", 
                  "children": [
                    {
                      "data": {
                        "$area": 176, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 176"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 64, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 64"
                    }, 
                    {
                      "data": {
                        "$area": 32, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<std::__ndk1::allocator<{lambda()#1}> >*) const 32"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 8, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 8"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 430, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__func<filament::backend::CommandStream::execute(void*)::$_0, std::__ndk1::allocator<filament::backend::CommandStream::execute(void*)::$_0>, void ()> 430", 
                  "children": [
                    {
                      "data": {
                        "$area": 106, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 106"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "data"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 80, 
                        "$symbol": "code"
                      }, 
                      "name": "operator()() 80"
                    }, 
                    {
                      "data": {
                        "$area": 56, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone() const 56"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "code"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "code"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 24"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "code"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 395, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__func<std::__ndk1::__bind<void (filament::FEngine::*)(), filament::FEngine*>, std::__ndk1::allocator<std::__ndk1::__bind<void (filament::FEngine::*)(), filament::FEngine*> >, void ()> 395", 
                  "children": [
                    {
                      "data": {
                        "$area": 99, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 99"
                    }, 
                    {
                      "data": {
                        "$area": 88, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [vtable] 88"
                    }, 
                    {
                      "data": {
                        "$area": 68, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone() const 68"
                    }, 
                    {
                      "data": {
                        "$area": 36, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__clone(std::__ndk1::__function::__base<void ()>*) const 36"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target(std::type_info const&) const 28"
                    }, 
                    {
                      "data": {
                        "$area": 28, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "operator()() 28"
                    }, 
                    {
                      "data": {
                        "$area": 24, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 24"
                    }, 
                    {
                      "data": {
                        "$area": 12, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "target_type() const 12"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy_deallocate() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "~__func() 4"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "destroy() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 392, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "__value_func<void ()> 392", 
                  "children": [
                    {
                      "data": {
                        "$area": 320, 
                        "$symbol": "code"
                      }, 
                      "name": "swap(std::__ndk1::__function::__value_func<void ()>&) 320"
                    }, 
                    {
                      "data": {
                        "$area": 72, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "__value_func<filament::OpenGLDriver::readPixels(filament::backend::Handle<filament::backend::HwRenderTarget>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&)::{lambda()#1}, std::__ndk1::allocator<{lambda()#1}> >(filament::OpenGLDriver::readPixels(filament::backend::Handle<filament::backend::HwRenderTarget>, unsigned int, unsigned int, unsigned int, unsigned int, filament::backend::PixelBufferDescriptor&&)::{lambda()#1}&&, std::__ndk1::allocator<{lambda()#1}> const&) 72"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 245, 
                    "$dominant_symbol": "read-only data"
                  }, 
                  "name": "__base<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 245", 
                  "children": [
                    {
                      "data": {
                        "$area": 225, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 225"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 16"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__base() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 229, 
                    "$dominant_symbol": "read-only data"
                  }, 
                  "name": "__base<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)> 229", 
                  "children": [
                    {
                      "data": {
                        "$area": 209, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 209"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 16"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__base() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 146, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__base<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)> 146", 
                  "children": [
                    {
                      "data": {
                        "$area": 126, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 126"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 16"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__base() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 98, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "__base<void (filament::ibl::CubemapUtils::EmptyState&)> 98", 
                  "children": [
                    {
                      "data": {
                        "$area": 78, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo name] 78"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": " [typeinfo] 16"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__base() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 57, 
                    "$dominant_symbol": "read-only data"
                  }, 
                  "name": "__base<bool ()> 57", 
                  "children": [
                    {
                      "data": {
                        "$area": 37, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 37"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 16"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__base() 4"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 57, 
                    "$dominant_symbol": "read-only data"
                  }, 
                  "name": "__base<void ()> 57", 
                  "children": [
                    {
                      "data": {
                        "$area": 37, 
                        "$symbol": "read-only data"
                      }, 
                      "name": " [typeinfo name] 37"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "data"
                      }, 
                      "name": " [typeinfo] 16"
                    }, 
                    {
                      "data": {
                        "$area": 4, 
                        "$symbol": "code"
                      }, 
                      "name": "~__base() 4"
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 3356, 
                "$symbol": "code"
              }, 
              "name": "__sort<filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*> >(utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&) 3.4k"
            }, 
            {
              "data": {
                "$area": 2636, 
                "$symbol": "code"
              }, 
              "name": "__sort<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_3&, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*>(filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_3&) 2.6k"
            }, 
            {
              "data": {
                "$area": 1816, 
                "$symbol": "code"
              }, 
              "name": "__next_prime(unsigned long) 1.8k"
            }, 
            {
              "data": {
                "$area": 1440, 
                "$symbol": "weak symbol"
              }, 
              "name": "__sort<std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&, filament::RenderPass::Command*>(filament::RenderPass::Command*, filament::RenderPass::Command*, std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&) 1.4k"
            }, 
            {
              "data": {
                "$area": 1432, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<std::__ndk1::function<void ()>, utils::STLAllocator<std::__ndk1::function<void ()>, utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> > > 1.4k", 
              "children": [
                {
                  "data": {
                    "$area": 540, 
                    "$symbol": "code"
                  }, 
                  "name": "__push_back_slow_path<std::__ndk1::function<void ()> >(std::__ndk1::function<void ()>&&) 540"
                }, 
                {
                  "data": {
                    "$area": 392, 
                    "$symbol": "code"
                  }, 
                  "name": "reserve(unsigned long) 392"
                }, 
                {
                  "data": {
                    "$area": 384, 
                    "$symbol": "code"
                  }, 
                  "name": "vector(std::__ndk1::vector<std::__ndk1::function<void ()>, utils::STLAllocator<std::__ndk1::function<void ()>, utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> > > const&) 384"
                }, 
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 116"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1420, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<filament::SamplerInterfaceBlock::Builder::Entry, std::__ndk1::allocator<filament::SamplerInterfaceBlock::Builder::Entry> > 1.4k", 
              "children": [
                {
                  "data": {
                    "$area": 484, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__emplace_back_slow_path<utils::StaticString const&, filament::backend::SamplerType&, filament::backend::SamplerFormat&, filament::backend::Precision&, bool&>(utils::StaticString const&, filament::backend::SamplerType&, filament::backend::SamplerFormat&, filament::backend::Precision&, bool&) 484"
                }, 
                {
                  "data": {
                    "$area": 480, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__emplace_back_slow_path<utils::CString const&, filament::backend::SamplerType&, filament::backend::SamplerFormat&, filament::backend::Precision&, bool&>(utils::CString const&, filament::backend::SamplerType&, filament::backend::SamplerFormat&, filament::backend::Precision&, bool&) 480"
                }, 
                {
                  "data": {
                    "$area": 456, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__emplace_back_slow_path<utils::CString, filament::backend::SamplerType&, filament::backend::SamplerFormat&, filament::backend::Precision&, bool&>(utils::CString&&, filament::backend::SamplerType&, filament::backend::SamplerFormat&, filament::backend::Precision&, bool&) 456"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1380, 
                "$symbol": "code"
              }, 
              "name": "__insertion_sort_incomplete<filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*> >(utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&) 1.4k"
            }, 
            {
              "data": {
                "$area": 1308, 
                "$symbol": "code"
              }, 
              "name": "__sort<std::__ndk1::__less<std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> > >&, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*>(std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::__less<std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> > >&) 1.3k"
            }, 
            {
              "data": {
                "$area": 1308, 
                "$symbol": "code"
              }, 
              "name": "__insertion_sort_incomplete<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_3&, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*>(filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_3&) 1.3k"
            }, 
            {
              "data": {
                "$area": 1276, 
                "$dominant_symbol": "code"
              }, 
              "name": "basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > 1.3k", 
              "children": [
                {
                  "data": {
                    "$area": 336, 
                    "$symbol": "code"
                  }, 
                  "name": "assign(char const*, unsigned long) 336"
                }, 
                {
                  "data": {
                    "$area": 312, 
                    "$symbol": "code"
                  }, 
                  "name": "__grow_by_and_replace(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, char const*) 312"
                }, 
                {
                  "data": {
                    "$area": 260, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " std 260", 
                  "children": [
                    {
                      "data": {
                        "$area": 260, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "__ndk1 260", 
                      "children": [
                        {
                          "data": {
                            "$area": 260, 
                            "$symbol": "code"
                          }, 
                          "name": "operator+<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >(char const*, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&) 260"
                        }
                      ]
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 196, 
                    "$symbol": "code"
                  }, 
                  "name": "append(char const*, unsigned long) 196"
                }, 
                {
                  "data": {
                    "$area": 152, 
                    "$symbol": "code"
                  }, 
                  "name": "basic_string<decltype(nullptr)>(char const*) 152"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "~basic_string() 20"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1216, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<filament::UniformInterfaceBlock::Builder::Entry, std::__ndk1::allocator<filament::UniformInterfaceBlock::Builder::Entry> > 1.2k", 
              "children": [
                {
                  "data": {
                    "$area": 416, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__emplace_back_slow_path<utils::StaticString const&, unsigned int, filament::backend::UniformType&, filament::backend::Precision&>(utils::StaticString const&, unsigned int&&, filament::backend::UniformType&, filament::backend::Precision&) 416"
                }, 
                {
                  "data": {
                    "$area": 412, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__emplace_back_slow_path<utils::CString const&, unsigned int, filament::backend::UniformType&, filament::backend::Precision&>(utils::CString const&, unsigned int&&, filament::backend::UniformType&, filament::backend::Precision&) 412"
                }, 
                {
                  "data": {
                    "$area": 388, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__emplace_back_slow_path<utils::CString, unsigned int, filament::backend::UniformType&, filament::backend::Precision&>(utils::CString&&, unsigned int&&, filament::backend::UniformType&, filament::backend::Precision&) 388"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1168, 
                "$dominant_symbol": "code"
              }, 
              "name": "__murmur2_or_cityhash<unsigned long, 64ul> 1.2k", 
              "children": [
                {
                  "data": {
                    "$area": 908, 
                    "$symbol": "code"
                  }, 
                  "name": "operator()(void const*, unsigned long) 908"
                }, 
                {
                  "data": {
                    "$area": 260, 
                    "$symbol": "code"
                  }, 
                  "name": "__hash_len_0_to_16(char const*, unsigned long) 260"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1092, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<std::__ndk1::function<void ()>, std::__ndk1::allocator<std::__ndk1::function<void ()> > > 1.1k", 
              "children": [
                {
                  "data": {
                    "$area": 532, 
                    "$symbol": "code"
                  }, 
                  "name": "__push_back_slow_path<std::__ndk1::function<void ()> >(std::__ndk1::function<void ()>&&) 532"
                }, 
                {
                  "data": {
                    "$area": 420, 
                    "$symbol": "code"
                  }, 
                  "name": "reserve(unsigned long) 420"
                }, 
                {
                  "data": {
                    "$area": 140, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 140"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1080, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<char const*, unsigned int>, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<char const*, unsigned int>, true> > > 1.1k", 
              "children": [
                {
                  "data": {
                    "$area": 632, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 632"
                }, 
                {
                  "data": {
                    "$area": 448, 
                    "$symbol": "code"
                  }, 
                  "name": "vector(std::__ndk1::vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<char const*, unsigned int>, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<char const*, unsigned int>, true> > > const&) 448"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1036, 
                "$dominant_symbol": "code"
              }, 
              "name": "deque<unsigned int, std::__ndk1::allocator<unsigned int> > 1.0k", 
              "children": [
                {
                  "data": {
                    "$area": 1036, 
                    "$symbol": "code"
                  }, 
                  "name": "__add_back_capacity() 1.0k"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1024, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > 1.0k", 
              "children": [
                {
                  "data": {
                    "$area": 628, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__push_back_slow_path<filament::ibl::Cubemap>(filament::ibl::Cubemap&&) 628"
                }, 
                {
                  "data": {
                    "$area": 396, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "reserve(unsigned long) 396"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1008, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<utils::Entity, false>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<utils::Entity, false> > > 1.0k", 
              "children": [
                {
                  "data": {
                    "$area": 1008, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 1.0k"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1008, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle>, tsl::robin_map<utils::StaticString, filament::FrameGraphHandle, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, filament::FrameGraphHandle, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 1.0k", 
              "children": [
                {
                  "data": {
                    "$area": 1008, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": " tsl 1.0k", 
                  "children": [
                    {
                      "data": {
                        "$area": 1008, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": "detail_robin_hash 1.0k", 
                      "children": [
                        {
                          "data": {
                            "$area": 1008, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle>, tsl::robin_map<utils::StaticString, filament::FrameGraphHandle, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, filament::FrameGraphHandle, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.0k", 
                          "children": [
                            {
                              "data": {
                                "$area": 552, 
                                "$symbol": "weak symbol"
                              }, 
                              "name": "insert_impl<utils::StaticString, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>, std::__ndk1::tuple<filament::FrameGraphId<filament::FrameGraphTexture>&> >(utils::StaticString const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>&&, std::__ndk1::tuple<filament::FrameGraphId<filament::FrameGraphTexture>&>&&) 552"
                            }, 
                            {
                              "data": {
                                "$area": 456, 
                                "$symbol": "weak symbol"
                              }, 
                              "name": "insert_impl<utils::StaticString, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>, std::__ndk1::tuple<filament::FrameGraphHandle&&> >(utils::StaticString const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>&&, std::__ndk1::tuple<filament::FrameGraphHandle&&>&&) 456"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 1000, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial>, tsl::robin_map<utils::StaticString, filament::PostProcessManager::PostProcessMaterial, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, filament::PostProcessManager::PostProcessMaterial, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 1000", 
              "children": [
                {
                  "data": {
                    "$area": 1000, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": " tsl 1000", 
                  "children": [
                    {
                      "data": {
                        "$area": 1000, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": "detail_robin_hash 1000", 
                      "children": [
                        {
                          "data": {
                            "$area": 1000, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial>, tsl::robin_map<utils::StaticString, filament::PostProcessManager::PostProcessMaterial, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, filament::PostProcessManager::PostProcessMaterial, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1000", 
                          "children": [
                            {
                              "data": {
                                "$area": 528, 
                                "$symbol": "weak symbol"
                              }, 
                              "name": "insert_impl<utils::StaticString, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>, std::__ndk1::tuple<filament::FEngine&, unsigned char const*&, int&> >(utils::StaticString const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>&&, std::__ndk1::tuple<filament::FEngine&, unsigned char const*&, int&>&&) 528"
                            }, 
                            {
                              "data": {
                                "$area": 472, 
                                "$symbol": "weak symbol"
                              }, 
                              "name": "insert_impl<utils::StaticString, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>, std::__ndk1::tuple<> >(utils::StaticString const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>&&, std::__ndk1::tuple<>&&) 472"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 980, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<std::__ndk1::vector<unsigned char, std::__ndk1::allocator<unsigned char> >, std::__ndk1::allocator<std::__ndk1::vector<unsigned char, std::__ndk1::allocator<unsigned char> > > > 980", 
              "children": [
                {
                  "data": {
                    "$area": 640, 
                    "$symbol": "code"
                  }, 
                  "name": "__emplace_back_slow_path<char const*&, char const*>(char const*&, char const*&&) 640"
                }, 
                {
                  "data": {
                    "$area": 340, 
                    "$symbol": "code"
                  }, 
                  "name": "reserve(unsigned long) 340"
                }
              ]
            }, 
            {
              "data": {
                "$area": 932, 
                "$dominant_symbol": "code"
              }, 
              "name": "__hash_table<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >, std::__ndk1::hash<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >, std::__ndk1::equal_to<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >, std::__ndk1::allocator<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > > > 932", 
              "children": [
                {
                  "data": {
                    "$area": 704, 
                    "$symbol": "code"
                  }, 
                  "name": "__rehash(unsigned long) 704"
                }, 
                {
                  "data": {
                    "$area": 228, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash(unsigned long) 228"
                }
              ]
            }, 
            {
              "data": {
                "$area": 920, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<filament::SamplerInterfaceBlock::SamplerInfo, std::__ndk1::allocator<filament::SamplerInterfaceBlock::SamplerInfo> > 920", 
              "children": [
                {
                  "data": {
                    "$area": 544, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__append(unsigned long) 544"
                }, 
                {
                  "data": {
                    "$area": 260, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "vector(std::__ndk1::vector<filament::SamplerInterfaceBlock::SamplerInfo, std::__ndk1::allocator<filament::SamplerInterfaceBlock::SamplerInfo> > const&) 260"
                }, 
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 116"
                }
              ]
            }, 
            {
              "data": {
                "$area": 912, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<std::__ndk1::pair<filament::ShadowMapManager::ShadowMapEntry const*, filament::RenderPass>, std::__ndk1::allocator<std::__ndk1::pair<filament::ShadowMapManager::ShadowMapEntry const*, filament::RenderPass> > > 912", 
              "children": [
                {
                  "data": {
                    "$area": 456, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__emplace_back_slow_path<filament::ShadowMapManager::ShadowMapEntry const*, filament::RenderPass&>(filament::ShadowMapManager::ShadowMapEntry const*&&, filament::RenderPass&) 456"
                }, 
                {
                  "data": {
                    "$area": 344, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "reserve(unsigned long) 344"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 112"
                }
              ]
            }, 
            {
              "data": {
                "$area": 868, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*>, tsl::robin_map<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 868", 
              "children": [
                {
                  "data": {
                    "$area": 868, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 868", 
                  "children": [
                    {
                      "data": {
                        "$area": 868, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 868", 
                      "children": [
                        {
                          "data": {
                            "$area": 868, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*>, tsl::robin_map<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 868", 
                          "children": [
                            {
                              "data": {
                                "$area": 444, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<std::__ndk1::__thread_id, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<std::__ndk1::__thread_id const&>, std::__ndk1::tuple<> >(std::__ndk1::__thread_id const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<std::__ndk1::__thread_id const&>&&, std::__ndk1::tuple<>&&) 444"
                            }, 
                            {
                              "data": {
                                "$area": 424, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<std::__ndk1::__thread_id, std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >(std::__ndk1::__thread_id const&, std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*>&&) 424"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 852, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle>, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle>, true> > > 852", 
              "children": [
                {
                  "data": {
                    "$area": 852, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__append(unsigned long) 852"
                }
              ]
            }, 
            {
              "data": {
                "$area": 848, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<utils::StaticString, void*>, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<utils::StaticString, void*>, true> > > 848", 
              "children": [
                {
                  "data": {
                    "$area": 848, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 848"
                }
              ]
            }, 
            {
              "data": {
                "$area": 848, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc>, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc>, true> > > 848", 
              "children": [
                {
                  "data": {
                    "$area": 848, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 848"
                }
              ]
            }, 
            {
              "data": {
                "$area": 844, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<unsigned int, unsigned int>, false>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<unsigned int, unsigned int>, false> > > 844", 
              "children": [
                {
                  "data": {
                    "$area": 844, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 844"
                }
              ]
            }, 
            {
              "data": {
                "$area": 844, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo>, false>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo>, false> > > 844", 
              "children": [
                {
                  "data": {
                    "$area": 844, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__append(unsigned long) 844"
                }
              ]
            }, 
            {
              "data": {
                "$area": 844, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<utils::Entity, unsigned int>, false>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<utils::Entity, unsigned int>, false> > > 844", 
              "children": [
                {
                  "data": {
                    "$area": 844, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 844"
                }
              ]
            }, 
            {
              "data": {
                "$area": 836, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<utils::EntityManager::Listener*, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<utils::EntityManager::Listener*, true> > > 836", 
              "children": [
                {
                  "data": {
                    "$area": 836, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 836"
                }
              ]
            }, 
            {
              "data": {
                "$area": 836, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<void*, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<void*, true> > > 836", 
              "children": [
                {
                  "data": {
                    "$area": 836, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 836"
                }
              ]
            }, 
            {
              "data": {
                "$area": 836, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<filament::UniformInterfaceBlock::UniformInfo, std::__ndk1::allocator<filament::UniformInterfaceBlock::UniformInfo> > 836", 
              "children": [
                {
                  "data": {
                    "$area": 432, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__append(unsigned long) 432"
                }, 
                {
                  "data": {
                    "$area": 288, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "vector(std::__ndk1::vector<filament::UniformInterfaceBlock::UniformInfo, std::__ndk1::allocator<filament::UniformInterfaceBlock::UniformInfo> > const&) 288"
                }, 
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 116"
                }
              ]
            }, 
            {
              "data": {
                "$area": 832, 
                "$dominant_symbol": "code"
              }, 
              "name": "__split_buffer<unsigned int*, std::__ndk1::allocator<unsigned int*> > 832", 
              "children": [
                {
                  "data": {
                    "$area": 420, 
                    "$symbol": "code"
                  }, 
                  "name": "push_front(unsigned int*&&) 420"
                }, 
                {
                  "data": {
                    "$area": 412, 
                    "$symbol": "code"
                  }, 
                  "name": "push_back(unsigned int*&&) 412"
                }
              ]
            }, 
            {
              "data": {
                "$area": 832, 
                "$dominant_symbol": "code"
              }, 
              "name": "__split_buffer<unsigned int*, std::__ndk1::allocator<unsigned int*>&> 832", 
              "children": [
                {
                  "data": {
                    "$area": 420, 
                    "$symbol": "code"
                  }, 
                  "name": "push_front(unsigned int* const&) 420"
                }, 
                {
                  "data": {
                    "$area": 412, 
                    "$symbol": "code"
                  }, 
                  "name": "push_back(unsigned int*&&) 412"
                }
              ]
            }, 
            {
              "data": {
                "$area": 804, 
                "$dominant_symbol": "code"
              }, 
              "name": "system_error 804", 
              "children": [
                {
                  "data": {
                    "$area": 488, 
                    "$symbol": "code"
                  }, 
                  "name": "system_error(std::__ndk1::error_code, char const*) 488"
                }, 
                {
                  "data": {
                    "$area": 272, 
                    "$symbol": "code"
                  }, 
                  "name": "__init(std::__ndk1::error_code const&, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >) 272"
                }, 
                {
                  "data": {
                    "$area": 44, 
                    "$symbol": "code"
                  }, 
                  "name": "~system_error() 44"
                }
              ]
            }, 
            {
              "data": {
                "$area": 768, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<std::__ndk1::__hash_iterator<std::__ndk1::__hash_node<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >, void*>*>, bool> 768", 
              "children": [
                {
                  "data": {
                    "$area": 768, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " std 768", 
                  "children": [
                    {
                      "data": {
                        "$area": 768, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "__ndk1 768", 
                      "children": [
                        {
                          "data": {
                            "$area": 768, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "__hash_table<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >, std::__ndk1::hash<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >, std::__ndk1::equal_to<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >, std::__ndk1::allocator<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > > > 768", 
                          "children": [
                            {
                              "data": {
                                "$area": 768, 
                                "$symbol": "code"
                              }, 
                              "name": "__emplace_unique_key_args<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&, std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >&&) 768"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 728, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo>, tsl::robin_map<unsigned int, filament::SamplerBindingInfo, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<unsigned int, filament::SamplerBindingInfo, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 728", 
              "children": [
                {
                  "data": {
                    "$area": 728, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": " tsl 728", 
                  "children": [
                    {
                      "data": {
                        "$area": 728, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": "detail_robin_hash 728", 
                      "children": [
                        {
                          "data": {
                            "$area": 728, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo>, tsl::robin_map<unsigned int, filament::SamplerBindingInfo, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<unsigned int, filament::SamplerBindingInfo, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 728", 
                          "children": [
                            {
                              "data": {
                                "$area": 728, 
                                "$symbol": "weak symbol"
                              }, 
                              "name": "insert_impl<unsigned int, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<unsigned int&&>, std::__ndk1::tuple<> >(unsigned int const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<unsigned int&&>&&, std::__ndk1::tuple<>&&) 728"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 724, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__hash_table<std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> >, std::__ndk1::__unordered_map_hasher<filament::FMaterial const*, std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> >, std::__ndk1::hash<filament::FMaterial const*>, true>, std::__ndk1::__unordered_map_equal<filament::FMaterial const*, std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> >, std::__ndk1::equal_to<filament::FMaterial const*>, true>, std::__ndk1::allocator<std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> > > > 724", 
              "children": [
                {
                  "data": {
                    "$area": 496, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__rehash(unsigned long) 496"
                }, 
                {
                  "data": {
                    "$area": 228, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "rehash(unsigned long) 228"
                }
              ]
            }, 
            {
              "data": {
                "$area": 700, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial>, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial>, true> > > 700", 
              "children": [
                {
                  "data": {
                    "$area": 700, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__append(unsigned long) 700"
                }
              ]
            }, 
            {
              "data": {
                "$area": 700, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<filament::ibl::Image, std::__ndk1::allocator<filament::ibl::Image> > 700", 
              "children": [
                {
                  "data": {
                    "$area": 372, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__push_back_slow_path<filament::ibl::Image>(filament::ibl::Image&&) 372"
                }, 
                {
                  "data": {
                    "$area": 328, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "reserve(unsigned long) 328"
                }
              ]
            }, 
            {
              "data": {
                "$area": 692, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<void*, tsl::robin_set<void*, std::__ndk1::hash<void*>, std::__ndk1::equal_to<void*>, std::__ndk1::allocator<void*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<void*>, std::__ndk1::equal_to<void*>, std::__ndk1::allocator<void*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 692", 
              "children": [
                {
                  "data": {
                    "$area": 692, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 692", 
                  "children": [
                    {
                      "data": {
                        "$area": 692, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 692", 
                      "children": [
                        {
                          "data": {
                            "$area": 692, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<void*, tsl::robin_set<void*, std::__ndk1::hash<void*>, std::__ndk1::equal_to<void*>, std::__ndk1::allocator<void*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<void*>, std::__ndk1::equal_to<void*>, std::__ndk1::allocator<void*>, false, tsl::rh::power_of_two_growth_policy<2ul> > 692", 
                          "children": [
                            {
                              "data": {
                                "$area": 692, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<void*, void* const&>(void* const&, void* const&) 692"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 692, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<utils::EntityManager::Listener*, tsl::robin_set<utils::EntityManager::Listener*, std::__ndk1::hash<utils::EntityManager::Listener*>, std::__ndk1::equal_to<utils::EntityManager::Listener*>, std::__ndk1::allocator<utils::EntityManager::Listener*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<utils::EntityManager::Listener*>, std::__ndk1::equal_to<utils::EntityManager::Listener*>, std::__ndk1::allocator<utils::EntityManager::Listener*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 692", 
              "children": [
                {
                  "data": {
                    "$area": 692, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 692", 
                  "children": [
                    {
                      "data": {
                        "$area": 692, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 692", 
                      "children": [
                        {
                          "data": {
                            "$area": 692, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<utils::EntityManager::Listener*, tsl::robin_set<utils::EntityManager::Listener*, std::__ndk1::hash<utils::EntityManager::Listener*>, std::__ndk1::equal_to<utils::EntityManager::Listener*>, std::__ndk1::allocator<utils::EntityManager::Listener*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<utils::EntityManager::Listener*>, std::__ndk1::equal_to<utils::EntityManager::Listener*>, std::__ndk1::allocator<utils::EntityManager::Listener*>, false, tsl::rh::power_of_two_growth_policy<2ul> > 692", 
                          "children": [
                            {
                              "data": {
                                "$area": 692, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<utils::EntityManager::Listener*, utils::EntityManager::Listener* const&>(utils::EntityManager::Listener* const&, utils::EntityManager::Listener* const&) 692"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 680, 
                "$dominant_symbol": "code"
              }, 
              "name": "thread 680", 
              "children": [
                {
                  "data": {
                    "$area": 232, 
                    "$symbol": "code"
                  }, 
                  "name": "thread<void (utils::JobSystem::*)(utils::JobSystem::ThreadState*) noexcept, utils::JobSystem*, utils::JobSystem::ThreadState*, void>(void (utils::JobSystem::*&&)(utils::JobSystem::ThreadState*) noexcept, utils::JobSystem*&&, utils::JobSystem::ThreadState*&&) 232"
                }, 
                {
                  "data": {
                    "$area": 224, 
                    "$symbol": "code"
                  }, 
                  "name": "thread<int (filament::FEngine::*)(), filament::FEngine*&, void>(int (filament::FEngine::*&&)(), filament::FEngine*&) 224"
                }, 
                {
                  "data": {
                    "$area": 68, 
                    "$symbol": "code"
                  }, 
                  "name": "join() 68"
                }, 
                {
                  "data": {
                    "$area": 64, 
                    "$symbol": "code"
                  }, 
                  "name": "detach() 64"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "code"
                  }, 
                  "name": "~thread() 56"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "hardware_concurrency() 36"
                }
              ]
            }, 
            {
              "data": {
                "$area": 664, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<utils::Entity, unsigned int>, tsl::robin_map<utils::Entity, unsigned int, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::Entity, unsigned int, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 664", 
              "children": [
                {
                  "data": {
                    "$area": 664, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 664", 
                  "children": [
                    {
                      "data": {
                        "$area": 664, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 664", 
                      "children": [
                        {
                          "data": {
                            "$area": 664, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<utils::Entity, unsigned int>, tsl::robin_map<utils::Entity, unsigned int, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::Entity, unsigned int, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 664", 
                          "children": [
                            {
                              "data": {
                                "$area": 664, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<utils::Entity, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::Entity const&>, std::__ndk1::tuple<> >(utils::Entity const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::Entity const&>&&, std::__ndk1::tuple<>&&) 664"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 664, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<unsigned int, unsigned int>, tsl::robin_map<unsigned int, unsigned int, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<unsigned int, unsigned int, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 664", 
              "children": [
                {
                  "data": {
                    "$area": 664, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 664", 
                  "children": [
                    {
                      "data": {
                        "$area": 664, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 664", 
                      "children": [
                        {
                          "data": {
                            "$area": 664, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<unsigned int, unsigned int>, tsl::robin_map<unsigned int, unsigned int, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<unsigned int, unsigned int, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 664", 
                          "children": [
                            {
                              "data": {
                                "$area": 664, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<unsigned int, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<unsigned int const&>, std::__ndk1::tuple<> >(unsigned int const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<unsigned int const&>&&, std::__ndk1::tuple<>&&) 664"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 640, 
                "$dominant_symbol": "code"
              }, 
              "name": "random_device 640", 
              "children": [
                {
                  "data": {
                    "$area": 400, 
                    "$symbol": "code"
                  }, 
                  "name": "random_device(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&) 400"
                }, 
                {
                  "data": {
                    "$area": 184, 
                    "$symbol": "code"
                  }, 
                  "name": "operator()() 184"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "code"
                  }, 
                  "name": "~random_device() 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 636, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<std::__ndk1::function<bool ()>, std::__ndk1::allocator<std::__ndk1::function<bool ()> > > 636", 
              "children": [
                {
                  "data": {
                    "$area": 532, 
                    "$symbol": "code"
                  }, 
                  "name": "__push_back_slow_path<std::__ndk1::function<bool ()> >(std::__ndk1::function<bool ()>&&) 532"
                }, 
                {
                  "data": {
                    "$area": 104, 
                    "$symbol": "code"
                  }, 
                  "name": "__construct_one_at_end<std::__ndk1::function<bool ()> >(std::__ndk1::function<bool ()>&&) 104"
                }
              ]
            }, 
            {
              "data": {
                "$area": 632, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*>, true>, std::__ndk1::allocator<tsl::detail_robin_hash::bucket_entry<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*>, true> > > 632", 
              "children": [
                {
                  "data": {
                    "$area": 632, 
                    "$symbol": "code"
                  }, 
                  "name": "__append(unsigned long) 632"
                }
              ]
            }, 
            {
              "data": {
                "$area": 632, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "pair<std::__ndk1::__hash_iterator<std::__ndk1::__hash_node<std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> >, void*>*>, bool> 632", 
              "children": [
                {
                  "data": {
                    "$area": 632, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": " std 632", 
                  "children": [
                    {
                      "data": {
                        "$area": 632, 
                        "$dominant_symbol": "weak symbol"
                      }, 
                      "name": "__ndk1 632", 
                      "children": [
                        {
                          "data": {
                            "$area": 632, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "__hash_table<std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> >, std::__ndk1::__unordered_map_hasher<filament::FMaterial const*, std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> >, std::__ndk1::hash<filament::FMaterial const*>, true>, std::__ndk1::__unordered_map_equal<filament::FMaterial const*, std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> >, std::__ndk1::equal_to<filament::FMaterial const*>, true>, std::__ndk1::allocator<std::__ndk1::__hash_value_type<filament::FMaterial const*, filament::ResourceList<filament::FMaterialInstance, utils::LockingPolicy::NoLock> > > > 632", 
                          "children": [
                            {
                              "data": {
                                "$area": 632, 
                                "$symbol": "weak symbol"
                              }, 
                              "name": "__emplace_unique_key_args<filament::FMaterial const*, filament::FMaterial const*&, char const (&) [17]>(filament::FMaterial const* const&, filament::FMaterial const*&, char const (&) [17]) 632"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 628, 
                "$symbol": "code"
              }, 
              "name": "__insertion_sort_incomplete<std::__ndk1::__less<std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> > >&, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*>(std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::__less<std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> > >&) 628"
            }, 
            {
              "data": {
                "$area": 620, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<std::__ndk1::pair<__GLsync*, std::__ndk1::function<void ()> >, std::__ndk1::allocator<std::__ndk1::pair<__GLsync*, std::__ndk1::function<void ()> > > > 620", 
              "children": [
                {
                  "data": {
                    "$area": 508, 
                    "$symbol": "code"
                  }, 
                  "name": "__emplace_back_slow_path<__GLsync*&, std::__ndk1::function<void ()> >(__GLsync*&, std::__ndk1::function<void ()>&&) 508"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "__construct_one_at_end<__GLsync*&, std::__ndk1::function<void ()> >(__GLsync*&, std::__ndk1::function<void ()>&&) 112"
                }
              ]
            }, 
            {
              "data": {
                "$area": 580, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<utils::Entity, tsl::robin_set<utils::Entity, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<utils::Entity>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<utils::Entity>, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 580", 
              "children": [
                {
                  "data": {
                    "$area": 580, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 580", 
                  "children": [
                    {
                      "data": {
                        "$area": 580, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 580", 
                      "children": [
                        {
                          "data": {
                            "$area": 580, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<utils::Entity, tsl::robin_set<utils::Entity, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<utils::Entity>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<utils::Entity>, false, tsl::rh::power_of_two_growth_policy<2ul> > 580", 
                          "children": [
                            {
                              "data": {
                                "$area": 580, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<utils::Entity, utils::Entity const&>(utils::Entity const&, utils::Entity const&) 580"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 572, 
                "$symbol": "weak symbol"
              }, 
              "name": "__insertion_sort_incomplete<std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&, filament::RenderPass::Command*>(filament::RenderPass::Command*, filament::RenderPass::Command*, std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&) 572"
            }, 
            {
              "data": {
                "$area": 548, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<char const*, unsigned int>, tsl::robin_map<char const*, unsigned int, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<char const*, unsigned int, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 548", 
              "children": [
                {
                  "data": {
                    "$area": 548, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 548", 
                  "children": [
                    {
                      "data": {
                        "$area": 548, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 548", 
                      "children": [
                        {
                          "data": {
                            "$area": 548, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<char const*, unsigned int>, tsl::robin_map<char const*, unsigned int, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<char const*, unsigned int, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 548", 
                          "children": [
                            {
                              "data": {
                                "$area": 548, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<char const*, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<char const*&&>, std::__ndk1::tuple<> >(char const* const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<char const*&&>&&, std::__ndk1::tuple<>&&) 548"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 532, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<utils::StaticString, void*>, tsl::robin_map<utils::StaticString, void*, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, void*, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 532", 
              "children": [
                {
                  "data": {
                    "$area": 532, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 532", 
                  "children": [
                    {
                      "data": {
                        "$area": 532, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 532", 
                      "children": [
                        {
                          "data": {
                            "$area": 532, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<utils::StaticString, void*>, tsl::robin_map<utils::StaticString, void*, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, void*, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 532", 
                          "children": [
                            {
                              "data": {
                                "$area": 532, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<utils::StaticString, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>, std::__ndk1::tuple<> >(utils::StaticString const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<utils::StaticString const&>&&, std::__ndk1::tuple<>&&) 532"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 516, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<filament::backend::BufferDescriptor, std::__ndk1::allocator<filament::backend::BufferDescriptor> > 516", 
              "children": [
                {
                  "data": {
                    "$area": 388, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__push_back_slow_path<filament::backend::BufferDescriptor>(filament::backend::BufferDescriptor&&) 388"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 128"
                }
              ]
            }, 
            {
              "data": {
                "$area": 464, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<tsl::detail_robin_hash::robin_hash<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc>, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::robin_iterator<false>, bool> 464", 
              "children": [
                {
                  "data": {
                    "$area": 464, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " tsl 464", 
                  "children": [
                    {
                      "data": {
                        "$area": 464, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 464", 
                      "children": [
                        {
                          "data": {
                            "$area": 464, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc>, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 464", 
                          "children": [
                            {
                              "data": {
                                "$area": 464, 
                                "$symbol": "code"
                              }, 
                              "name": "insert_impl<filamat::ChunkType, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<filamat::ChunkType&&>, std::__ndk1::tuple<> >(filamat::ChunkType const&, std::__ndk1::piecewise_construct_t const&, std::__ndk1::tuple<filamat::ChunkType&&>&&, std::__ndk1::tuple<>&&) 464"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 456, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "array<std::__ndk1::vector<filament::backend::Program::Sampler, std::__ndk1::allocator<filament::backend::Program::Sampler> >, 6ul> 456", 
              "children": [
                {
                  "data": {
                    "$area": 456, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~array() 456"
                }
              ]
            }, 
            {
              "data": {
                "$area": 455, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type_imp<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, false> 455", 
              "children": [
                {
                  "data": {
                    "$area": 399, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 399"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 446, 
                "$dominant_symbol": "code"
              }, 
              "name": "__shared_ptr_emplace<filament::FTexture::generatePrefilterMipmap(filament::FEngine&, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets const&, filament::Texture::PrefilterOptions const*)::$_0, std::__ndk1::allocator<filament::FTexture::generatePrefilterMipmap(filament::FEngine&, filament::backend::PixelBufferDescriptor&&, filament::backend::FaceOffsets const&, filament::Texture::PrefilterOptions const*)::$_0> > 446", 
              "children": [
                {
                  "data": {
                    "$area": 210, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 210"
                }, 
                {
                  "data": {
                    "$area": 128, 
                    "$symbol": "code"
                  }, 
                  "name": "~__shared_ptr_emplace() 128"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "data"
                  }, 
                  "name": " [vtable] 56"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "__on_zero_shared() 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "__on_zero_shared_weak() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 428, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_binary_function<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, false> 428", 
              "children": [
                {
                  "data": {
                    "$area": 412, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 412"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 427, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_unary_function<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, false> 427", 
              "children": [
                {
                  "data": {
                    "$area": 411, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 411"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 420, 
                "$dominant_symbol": "code"
              }, 
              "name": "__hash_iterator<std::__ndk1::__hash_node<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >, void*>*> 420", 
              "children": [
                {
                  "data": {
                    "$area": 420, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " std 420", 
                  "children": [
                    {
                      "data": {
                        "$area": 420, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "__ndk1 420", 
                      "children": [
                        {
                          "data": {
                            "$area": 420, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "__hash_table<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >, std::__ndk1::hash<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >, std::__ndk1::equal_to<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >, std::__ndk1::allocator<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > > > 420", 
                          "children": [
                            {
                              "data": {
                                "$area": 420, 
                                "$symbol": "code"
                              }, 
                              "name": "find<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&) 420"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 416, 
                "$symbol": "code"
              }, 
              "name": "__tree_balance_after_insert<std::__ndk1::__tree_node_base<void*>*>(std::__ndk1::__tree_node_base<void*>*, std::__ndk1::__tree_node_base<void*>*) 416"
            }, 
            {
              "data": {
                "$area": 415, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const> > 415", 
              "children": [
                {
                  "data": {
                    "$area": 391, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 391"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 410, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__bind<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, unsigned long, unsigned long&, unsigned long const&> 410", 
              "children": [
                {
                  "data": {
                    "$area": 386, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 386"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 384, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "[anonymous namespace] 384", 
              "children": [
                {
                  "data": {
                    "$area": 192, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "small_primes 192"
                }, 
                {
                  "data": {
                    "$area": 192, 
                    "$symbol": "read-only data"
                  }, 
                  "name": "indices 192"
                }
              ]
            }, 
            {
              "data": {
                "$area": 376, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<utils::JobSystem::ThreadState, utils::STLAlignedAllocator<utils::JobSystem::ThreadState> > 376", 
              "children": [
                {
                  "data": {
                    "$area": 260, 
                    "$symbol": "code"
                  }, 
                  "name": "vector(unsigned long) 260"
                }, 
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 116"
                }
              ]
            }, 
            {
              "data": {
                "$area": 376, 
                "$dominant_symbol": "code"
              }, 
              "name": "__thread_struct_imp 376", 
              "children": [
                {
                  "data": {
                    "$area": 376, 
                    "$symbol": "code"
                  }, 
                  "name": "~__thread_struct_imp() 376"
                }
              ]
            }, 
            {
              "data": {
                "$area": 372, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type_imp<filament::ibl::CubemapUtils::process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}, false> 372", 
              "children": [
                {
                  "data": {
                    "$area": 316, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 316"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 360, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<filament::fg::PassNode, utils::STLAllocator<filament::fg::PassNode, utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> > > 360", 
              "children": [
                {
                  "data": {
                    "$area": 360, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__emplace_back_slow_path<filament::FrameGraph&, char const*&, unsigned int const&, filament::FrameGraphPassExecutor*&>(filament::FrameGraph&, char const*&, unsigned int const&, filament::FrameGraphPassExecutor*&) 360"
                }
              ]
            }, 
            {
              "data": {
                "$area": 355, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__bind<filament::ibl::CubemapUtils::process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}&, std::__ndk1::reference_wrapper<utils::JobSystem>, utils::JobSystem::Job*&> 355", 
              "children": [
                {
                  "data": {
                    "$area": 331, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 331"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 345, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_binary_function<filament::ibl::CubemapUtils::process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}, false> 345", 
              "children": [
                {
                  "data": {
                    "$area": 329, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 329"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 344, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_unary_function<filament::ibl::CubemapUtils::process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}, false> 344", 
              "children": [
                {
                  "data": {
                    "$area": 328, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 328"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 332, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type<filament::ibl::CubemapUtils::process<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State&)>, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::State const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}> 332", 
              "children": [
                {
                  "data": {
                    "$area": 308, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 308"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 292, 
                "$symbol": "code"
              }, 
              "name": "__call_once(unsigned long volatile&, void*, void (*)(void*)) 292"
            }, 
            {
              "data": {
                "$area": 288, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "vector<filament::backend::Program::Sampler, std::__ndk1::allocator<filament::backend::Program::Sampler> > 288", 
              "children": [
                {
                  "data": {
                    "$area": 288, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "vector(unsigned long) 288"
                }
              ]
            }, 
            {
              "data": {
                "$area": 286, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type_imp<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}, false> 286", 
              "children": [
                {
                  "data": {
                    "$area": 230, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 230"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 268, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__bind<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}&, std::__ndk1::reference_wrapper<utils::JobSystem>, utils::JobSystem::Job*&> 268", 
              "children": [
                {
                  "data": {
                    "$area": 244, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 244"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 268, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type_imp<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_4, false> 268", 
              "children": [
                {
                  "data": {
                    "$area": 212, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 212"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 268, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type_imp<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_0, false> 268", 
              "children": [
                {
                  "data": {
                    "$area": 212, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 212"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 268, 
                "$dominant_symbol": "code"
              }, 
              "name": "chrono 268", 
              "children": [
                {
                  "data": {
                    "$area": 148, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "system_clock 148", 
                  "children": [
                    {
                      "data": {
                        "$area": 148, 
                        "$symbol": "code"
                      }, 
                      "name": "now() 148"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 120, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "steady_clock 120", 
                  "children": [
                    {
                      "data": {
                        "$area": 120, 
                        "$symbol": "code"
                      }, 
                      "name": "now() 120"
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 264, 
                "$dominant_symbol": "code"
              }, 
              "name": "pair<std::__ndk1::__tree_iterator<utils::StaticString, std::__ndk1::__tree_node<utils::StaticString, void*>*, long>, bool> 264", 
              "children": [
                {
                  "data": {
                    "$area": 264, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": " std 264", 
                  "children": [
                    {
                      "data": {
                        "$area": 264, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "__ndk1 264", 
                      "children": [
                        {
                          "data": {
                            "$area": 264, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "__tree<utils::StaticString, std::__ndk1::less<utils::StaticString>, std::__ndk1::allocator<utils::StaticString> > 264", 
                          "children": [
                            {
                              "data": {
                                "$area": 264, 
                                "$symbol": "code"
                              }, 
                              "name": "__emplace_unique_key_args<utils::StaticString, utils::StaticString>(utils::StaticString const&, utils::StaticString&&) 264"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 260, 
                "$dominant_symbol": "code"
              }, 
              "name": "__system_error_category 260", 
              "children": [
                {
                  "data": {
                    "$area": 216, 
                    "$symbol": "code"
                  }, 
                  "name": "default_error_condition(int) const 216"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "message(int) const 28"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "name() const 12"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~__system_error_category() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 259, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_binary_function<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}, false> 259", 
              "children": [
                {
                  "data": {
                    "$area": 243, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 243"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 258, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_unary_function<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}, false> 258", 
              "children": [
                {
                  "data": {
                    "$area": 242, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 242"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 246, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type<filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}> 246", 
              "children": [
                {
                  "data": {
                    "$area": 222, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 222"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 241, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_binary_function<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_4, false> 241", 
              "children": [
                {
                  "data": {
                    "$area": 225, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 225"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 241, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_binary_function<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_0, false> 241", 
              "children": [
                {
                  "data": {
                    "$area": 225, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 225"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 240, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_unary_function<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_4, false> 240", 
              "children": [
                {
                  "data": {
                    "$area": 224, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 224"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 240, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_unary_function<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_0, false> 240", 
              "children": [
                {
                  "data": {
                    "$area": 224, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 224"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "__call_once_proxy<std::__ndk1::tuple<glext::importGLESExtensionsEntryPoints()::$_0&&> >(void*) 236"
            }, 
            {
              "data": {
                "$area": 228, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_4> 228", 
              "children": [
                {
                  "data": {
                    "$area": 204, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 204"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 228, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_0> 228", 
              "children": [
                {
                  "data": {
                    "$area": 204, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 204"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 227, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "reference_wrapper<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_0> 227", 
              "children": [
                {
                  "data": {
                    "$area": 203, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 203"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 227, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "reference_wrapper<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_4> 227", 
              "children": [
                {
                  "data": {
                    "$area": 203, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 203"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 224, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__invoke_void_return_wrapper<bool> 224", 
              "children": [
                {
                  "data": {
                    "$area": 224, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__call<filament::OpenGLDriver::createSyncR(filament::backend::Handle<filament::backend::HwSync>, int)::{lambda()#1}&>(filament::OpenGLDriver::createSyncR(filament::backend::Handle<filament::backend::HwSync>, int)::{lambda()#1}&) 224"
                }
              ]
            }, 
            {
              "data": {
                "$area": 224, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__shared_ptr_emplace<filament::OpenGLDriver::GLTimerQuery::State, std::__ndk1::allocator<filament::OpenGLDriver::GLTimerQuery::State> > 224", 
              "children": [
                {
                  "data": {
                    "$area": 100, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 100"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [vtable] 56"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~__shared_ptr_emplace() 36"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__on_zero_shared() 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__on_zero_shared_weak() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 217, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__shared_ptr_emplace<filament::OpenGLDriver::GLSync::State, std::__ndk1::allocator<filament::OpenGLDriver::GLSync::State> > 217", 
              "children": [
                {
                  "data": {
                    "$area": 93, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 93"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [vtable] 56"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~__shared_ptr_emplace() 36"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__on_zero_shared() 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__on_zero_shared_weak() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 216, 
                "$dominant_symbol": "code"
              }, 
              "name": "__thread_struct 216", 
              "children": [
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "~__thread_struct() 112"
                }, 
                {
                  "data": {
                    "$area": 104, 
                    "$symbol": "code"
                  }, 
                  "name": "__thread_struct() 104"
                }
              ]
            }, 
            {
              "data": {
                "$area": 210, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__shared_ptr_emplace<filament::FFence::FenceSignal, std::__ndk1::allocator<filament::FFence::FenceSignal> > 210", 
              "children": [
                {
                  "data": {
                    "$area": 86, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 86"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [vtable] 56"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~__shared_ptr_emplace() 36"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__on_zero_shared() 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "__on_zero_shared_weak() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 204, 
                "$dominant_symbol": "code"
              }, 
              "name": "__do_message 204", 
              "children": [
                {
                  "data": {
                    "$area": 204, 
                    "$symbol": "code"
                  }, 
                  "name": "message(int) const 204"
                }
              ]
            }, 
            {
              "data": {
                "$area": 187, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type_imp<filament::TimerQueryFence::endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*)::$_1, false> 187", 
              "children": [
                {
                  "data": {
                    "$area": 131, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 131"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "code"
              }, 
              "name": "__throw_system_error(int, char const*) 164"
            }, 
            {
              "data": {
                "$area": 160, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_binary_function<filament::TimerQueryFence::endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*)::$_1, false> 160", 
              "children": [
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 144"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 159, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__maybe_derive_from_unary_function<filament::TimerQueryFence::endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*)::$_1, false> 159", 
              "children": [
                {
                  "data": {
                    "$area": 143, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 143"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 159, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type_imp<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, false> 159", 
              "children": [
                {
                  "data": {
                    "$area": 103, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 103"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 158, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type_imp<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, false> 158", 
              "children": [
                {
                  "data": {
                    "$area": 102, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 102"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 155, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type_imp<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, false> 155", 
              "children": [
                {
                  "data": {
                    "$area": 99, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 99"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 154, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type_imp<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, false> 154", 
              "children": [
                {
                  "data": {
                    "$area": 98, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 98"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 56"
                }
              ]
            }, 
            {
              "data": {
                "$area": 148, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "array<std::__ndk1::unique_ptr<filament::ShadowMap, std::__ndk1::default_delete<filament::ShadowMap> >, 4ul> 148", 
              "children": [
                {
                  "data": {
                    "$area": 148, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "~array() 148"
                }
              ]
            }, 
            {
              "data": {
                "$area": 147, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__weak_result_type<filament::TimerQueryFence::endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*)::$_1> 147", 
              "children": [
                {
                  "data": {
                    "$area": 123, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 123"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 141, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__bind<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, filament::FRenderableManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&> 141", 
              "children": [
                {
                  "data": {
                    "$area": 117, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 117"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "__thread_local_data() 140"
            }, 
            {
              "data": {
                "$area": 140, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__bind<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, filament::FTransformManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&> 140", 
              "children": [
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 116"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 137, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__bind<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, filament::FCameraManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&> 137", 
              "children": [
                {
                  "data": {
                    "$area": 113, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 113"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 136, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__bind<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, filament::FLightManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&> 136", 
              "children": [
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 112"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 136, 
                "$dominant_symbol": "read-only data"
              }, 
              "name": "__bind<filament::TimerQueryFence::endTimeElapsedQuery(filament::OpenGLDriver::GLTimerQuery*)::$_1> 136", 
              "children": [
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 112"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 136, 
                "$dominant_symbol": "code"
              }, 
              "name": "__shared_weak_count 136", 
              "children": [
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "code"
                  }, 
                  "name": "lock() 72"
                }, 
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "code"
                  }, 
                  "name": "__release_weak() 48"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "__get_deleter(std::type_info const&) const 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "~__shared_weak_count() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 132, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_binary_function<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, false> 132", 
              "children": [
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 116"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 131, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_unary_function<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, false> 131", 
              "children": [
                {
                  "data": {
                    "$area": 115, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 115"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 131, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_binary_function<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, false> 131", 
              "children": [
                {
                  "data": {
                    "$area": 115, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 115"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 130, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_unary_function<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, false> 130", 
              "children": [
                {
                  "data": {
                    "$area": 114, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 114"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 128, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_binary_function<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, false> 128", 
              "children": [
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 112"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 127, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_binary_function<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, false> 127", 
              "children": [
                {
                  "data": {
                    "$area": 111, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 111"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 127, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_unary_function<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, false> 127", 
              "children": [
                {
                  "data": {
                    "$area": 111, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 111"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 126, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__maybe_derive_from_unary_function<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, false> 126", 
              "children": [
                {
                  "data": {
                    "$area": 110, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 110"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 124, 
                "$dominant_symbol": "code"
              }, 
              "name": "error_category 124", 
              "children": [
                {
                  "data": {
                    "$area": 68, 
                    "$symbol": "code"
                  }, 
                  "name": "equivalent(int, std::__ndk1::error_condition const&) const 68"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "equivalent(std::__ndk1::error_code const&, int) const 32"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "default_error_condition(int) const 16"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "~error_category() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 119, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept> 119", 
              "children": [
                {
                  "data": {
                    "$area": 95, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 95"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 118, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept> 118", 
              "children": [
                {
                  "data": {
                    "$area": 94, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 94"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 116, 
                "$dominant_symbol": "code"
              }, 
              "name": "unordered_set<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> >, std::__ndk1::hash<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >, std::__ndk1::equal_to<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > >, std::__ndk1::allocator<std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > > > 116", 
              "children": [
                {
                  "data": {
                    "$area": 116, 
                    "$symbol": "code"
                  }, 
                  "name": "~unordered_set() 116"
                }
              ]
            }, 
            {
              "data": {
                "$area": 115, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept> 115", 
              "children": [
                {
                  "data": {
                    "$area": 91, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 91"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 114, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type<void (filament::FLightManager::*)(utils::EntityManager&) noexcept> 114", 
              "children": [
                {
                  "data": {
                    "$area": 90, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 90"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 108, 
                "$dominant_symbol": "code"
              }, 
              "name": "mutex 108", 
              "children": [
                {
                  "data": {
                    "$area": 48, 
                    "$symbol": "code"
                  }, 
                  "name": "~mutex() 48"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "lock() 36"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "unlock() 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 82, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__weak_result_type<void (filament::FEngine::*)()> 82", 
              "children": [
                {
                  "data": {
                    "$area": 58, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 58"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "__throw_overflow_error(char const*) 80"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "__throw_length_error(char const*) 80"
            }, 
            {
              "data": {
                "$area": 76, 
                "$dominant_symbol": "code"
              }, 
              "name": "__shared_count 76", 
              "children": [
                {
                  "data": {
                    "$area": 68, 
                    "$symbol": "code"
                  }, 
                  "name": "__release_shared() 68"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "~__shared_count() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 75, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "__bind<void (filament::FEngine::*)(), filament::FEngine*> 75", 
              "children": [
                {
                  "data": {
                    "$area": 51, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 51"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "data"
              }, 
              "name": "__system_error_category [vtable] 72"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "data"
              }, 
              "name": "__generic_error_category [vtable] 72"
            }, 
            {
              "data": {
                "$area": 67, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "unary_function<filament::FEngine*, void> 67", 
              "children": [
                {
                  "data": {
                    "$area": 51, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo name] 51"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": " [typeinfo] 16"
                }
              ]
            }, 
            {
              "data": {
                "$area": 64, 
                "$dominant_symbol": "code"
              }, 
              "name": "__tree<utils::StaticString, std::__ndk1::less<utils::StaticString>, std::__ndk1::allocator<utils::StaticString> > 64", 
              "children": [
                {
                  "data": {
                    "$area": 64, 
                    "$symbol": "code"
                  }, 
                  "name": "destroy(std::__ndk1::__tree_node<utils::StaticString, void*>*) 64"
                }
              ]
            }, 
            {
              "data": {
                "$area": 64, 
                "$dominant_symbol": "code"
              }, 
              "name": "__thread_specific_ptr<std::__ndk1::__thread_struct> 64", 
              "children": [
                {
                  "data": {
                    "$area": 64, 
                    "$symbol": "code"
                  }, 
                  "name": "__at_thread_exit(void*) 64"
                }
              ]
            }, 
            {
              "data": {
                "$area": 64, 
                "$dominant_symbol": "code"
              }, 
              "name": "__assoc_sub_state 64", 
              "children": [
                {
                  "data": {
                    "$area": 64, 
                    "$symbol": "code"
                  }, 
                  "name": "__make_ready() 64"
                }
              ]
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "__call_once_proxy<std::__ndk1::tuple<utils::api_level()::$_0&&> >(void*) 56"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "__throw_bad_function_call() 52"
            }, 
            {
              "data": {
                "$area": 44, 
                "$dominant_symbol": "code"
              }, 
              "name": "__generic_error_category 44", 
              "children": [
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "message(int) const 28"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "name() const 12"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~__generic_error_category() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": "__shared_weak_count [typeinfo] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$dominant_symbol": "code"
              }, 
              "name": "unique_lock<utils::Mutex> 40", 
              "children": [
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "~unique_lock() 40"
                }
              ]
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": "bad_function_call [vtable] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": "system_error [vtable] 40"
            }, 
            {
              "data": {
                "$area": 38, 
                "$symbol": "read-only data"
              }, 
              "name": "__generic_error_category [typeinfo name] 38"
            }, 
            {
              "data": {
                "$area": 37, 
                "$symbol": "read-only data"
              }, 
              "name": "__system_error_category [typeinfo name] 37"
            }, 
            {
              "data": {
                "$area": 36, 
                "$dominant_symbol": "code"
              }, 
              "name": "bad_function_call 36", 
              "children": [
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "~bad_function_call() 36"
                }
              ]
            }, 
            {
              "data": {
                "$area": 33, 
                "$symbol": "read-only data"
              }, 
              "name": "__shared_weak_count [typeinfo name] 33"
            }, 
            {
              "data": {
                "$area": 32, 
                "$dominant_symbol": "code"
              }, 
              "name": "lock_guard<utils::Mutex> 32", 
              "children": [
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "~lock_guard() 32"
                }
              ]
            }, 
            {
              "data": {
                "$area": 31, 
                "$symbol": "read-only data"
              }, 
              "name": "bad_function_call [typeinfo name] 31"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "read-only data"
              }, 
              "name": "error_category [typeinfo name] 28"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "read-only data"
              }, 
              "name": "__shared_count [typeinfo name] 28"
            }, 
            {
              "data": {
                "$area": 26, 
                "$symbol": "read-only data"
              }, 
              "name": "__do_message [typeinfo name] 26"
            }, 
            {
              "data": {
                "$area": 26, 
                "$symbol": "read-only data"
              }, 
              "name": "system_error [typeinfo name] 26"
            }, 
            {
              "data": {
                "$area": 24, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<filament::DebugRegistry::Property, std::__ndk1::allocator<filament::DebugRegistry::Property> > 24", 
              "children": [
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "bad_function_call [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "__system_error_category [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "system_error [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "__generic_error_category [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<std::__ndk1::__assoc_sub_state*, std::__ndk1::__hidden_allocator<std::__ndk1::__assoc_sub_state*> > 24", 
              "children": [
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "__do_message [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<std::__ndk1::pair<std::__ndk1::condition_variable*, std::__ndk1::mutex*>, std::__ndk1::__hidden_allocator<std::__ndk1::pair<std::__ndk1::condition_variable*, std::__ndk1::mutex*> > > 24", 
              "children": [
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 24, 
                "$dominant_symbol": "code"
              }, 
              "name": "condition_variable 24", 
              "children": [
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "notify_all() 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 24, 
                "$dominant_symbol": "code"
              }, 
              "name": "vector<filament::backend::AcquiredImage, std::__ndk1::allocator<filament::backend::AcquiredImage> > 24", 
              "children": [
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "~vector() 24"
                }
              ]
            }, 
            {
              "data": {
                "$area": 20, 
                "$dominant_symbol": "code"
              }, 
              "name": "__basic_string_common<true> 20", 
              "children": [
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "__throw_length_error() const 20"
                }
              ]
            }, 
            {
              "data": {
                "$area": 20, 
                "$dominant_symbol": "code"
              }, 
              "name": "__vector_base_common<true> 20", 
              "children": [
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "__throw_length_error() const 20"
                }
              ]
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "__shared_count [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "error_category [typeinfo] 16"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "read-only data"
              }, 
              "name": "piecewise_construct 16"
            }
          ]
        }, 
        {
          "data": {
            "$area": 804, 
            "$dominant_symbol": "code"
          }, 
          "name": "runtime_error 804", 
          "children": [
            {
              "data": {
                "$area": 280, 
                "$symbol": "code"
              }, 
              "name": "runtime_error(std::__ndk1::basic_string<char, std::__ndk1::char_traits<char>, std::__ndk1::allocator<char> > const&) 280"
            }, 
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "~runtime_error() 260"
            }, 
            {
              "data": {
                "$area": 256, 
                "$symbol": "code"
              }, 
              "name": "runtime_error(char const*) 256"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "what() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 524, 
            "$dominant_symbol": "code"
          }, 
          "name": "logic_error 524", 
          "children": [
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "~logic_error() 260"
            }, 
            {
              "data": {
                "$area": 256, 
                "$symbol": "code"
              }, 
              "name": "logic_error(char const*) 256"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "what() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 308, 
            "$dominant_symbol": "code"
          }, 
          "name": "length_error 308", 
          "children": [
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "~length_error() 260"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "length_error(char const*) 48"
            }
          ]
        }, 
        {
          "data": {
            "$area": 308, 
            "$dominant_symbol": "code"
          }, 
          "name": "overflow_error 308", 
          "children": [
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "~overflow_error() 260"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "overflow_error(char const*) 48"
            }
          ]
        }, 
        {
          "data": {
            "$area": 308, 
            "$dominant_symbol": "code"
          }, 
          "name": "out_of_range 308", 
          "children": [
            {
              "data": {
                "$area": 260, 
                "$symbol": "code"
              }, 
              "name": "~out_of_range() 260"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "out_of_range(char const*) 48"
            }
          ]
        }, 
        {
          "data": {
            "$area": 168, 
            "$dominant_symbol": "code"
          }, 
          "name": "underflow_error 168", 
          "children": [
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "~underflow_error() 168"
            }
          ]
        }, 
        {
          "data": {
            "$area": 168, 
            "$dominant_symbol": "code"
          }, 
          "name": "domain_error 168", 
          "children": [
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "~domain_error() 168"
            }
          ]
        }, 
        {
          "data": {
            "$area": 168, 
            "$dominant_symbol": "code"
          }, 
          "name": "range_error 168", 
          "children": [
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "~range_error() 168"
            }
          ]
        }, 
        {
          "data": {
            "$area": 168, 
            "$dominant_symbol": "code"
          }, 
          "name": "invalid_argument 168", 
          "children": [
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "~invalid_argument() 168"
            }
          ]
        }, 
        {
          "data": {
            "$area": 64, 
            "$symbol": "code"
          }, 
          "name": "__terminate(void (*)()) 64"
        }, 
        {
          "data": {
            "$area": 64, 
            "$dominant_symbol": "code"
          }, 
          "name": "bad_alloc 64", 
          "children": [
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "bad_alloc() 40"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "~bad_alloc() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "what() const 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 64, 
            "$symbol": "code"
          }, 
          "name": "terminate() 64"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "length_error [vtable] 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "bad_alloc [vtable] 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "bad_exception [vtable] 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "runtime_error [vtable] 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "logic_error [vtable] 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "overflow_error [vtable] 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "out_of_range [vtable] 40"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "code"
          }, 
          "name": "__unexpected(void (*)()) 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "bad_alloc [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "out_of_range [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "logic_error [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "length_error [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "overflow_error [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "bad_exception [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$dominant_symbol": "code"
          }, 
          "name": "bad_exception 24", 
          "children": [
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "~bad_exception() 12"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "what() const 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "runtime_error [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 20, 
            "$dominant_symbol": "code"
          }, 
          "name": "exception 20", 
          "children": [
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "what() const 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~exception() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 19, 
            "$symbol": "read-only data"
          }, 
          "name": "overflow_error [typeinfo name] 19"
        }, 
        {
          "data": {
            "$area": 18, 
            "$symbol": "read-only data"
          }, 
          "name": "runtime_error [typeinfo name] 18"
        }, 
        {
          "data": {
            "$area": 18, 
            "$symbol": "read-only data"
          }, 
          "name": "bad_exception [typeinfo name] 18"
        }, 
        {
          "data": {
            "$area": 17, 
            "$symbol": "read-only data"
          }, 
          "name": "length_error [typeinfo name] 17"
        }, 
        {
          "data": {
            "$area": 17, 
            "$symbol": "read-only data"
          }, 
          "name": "out_of_range [typeinfo name] 17"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "read-only data"
          }, 
          "name": "logic_error [typeinfo name] 16"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "code"
          }, 
          "name": "get_unexpected() 16"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "data"
          }, 
          "name": "type_info [typeinfo] 16"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "data"
          }, 
          "name": "exception [typeinfo] 16"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "code"
          }, 
          "name": "get_new_handler() 16"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "code"
          }, 
          "name": "get_terminate() 16"
        }, 
        {
          "data": {
            "$area": 13, 
            "$symbol": "read-only data"
          }, 
          "name": "type_info [typeinfo name] 13"
        }, 
        {
          "data": {
            "$area": 13, 
            "$symbol": "read-only data"
          }, 
          "name": "bad_alloc [typeinfo name] 13"
        }, 
        {
          "data": {
            "$area": 13, 
            "$symbol": "read-only data"
          }, 
          "name": "exception [typeinfo name] 13"
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "type_info 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~type_info() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "bad_array_new_length 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~bad_array_new_length() 8"
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 78821, 
        "$dominant_symbol": "code"
      }, 
      "name": "[anonymous namespace] 78.8k", 
      "children": [
        {
          "data": {
            "$area": 78325, 
            "$dominant_symbol": "code"
          }, 
          "name": "itanium_demangle 78.3k", 
          "children": [
            {
              "data": {
                "$area": 44156, 
                "$dominant_symbol": "code"
              }, 
              "name": "AbstractManglingParser<[anonymous namespace]::itanium_demangle::ManglingParser<[anonymous namespace]::DefaultAllocator>, [anonymous namespace]::DefaultAllocator> 44.2k", 
              "children": [
                {
                  "data": {
                    "$area": 7188, 
                    "$symbol": "code"
                  }, 
                  "name": "parseExpr() 7.2k"
                }, 
                {
                  "data": {
                    "$area": 5760, 
                    "$symbol": "code"
                  }, 
                  "name": "parseType() 5.8k"
                }, 
                {
                  "data": {
                    "$area": 4776, 
                    "$symbol": "code"
                  }, 
                  "name": "parseOperatorName([anonymous namespace]::itanium_demangle::AbstractManglingParser<[anonymous namespace]::itanium_demangle::ManglingParser<[anonymous namespace]::DefaultAllocator>, [anonymous namespace]::DefaultAllocator>::NameState*) 4.8k"
                }, 
                {
                  "data": {
                    "$area": 3616, 
                    "$symbol": "code"
                  }, 
                  "name": "parseFoldExpr() 3.6k"
                }, 
                {
                  "data": {
                    "$area": 3132, 
                    "$symbol": "code"
                  }, 
                  "name": "parseName([anonymous namespace]::itanium_demangle::AbstractManglingParser<[anonymous namespace]::itanium_demangle::ManglingParser<[anonymous namespace]::DefaultAllocator>, [anonymous namespace]::DefaultAllocator>::NameState*) 3.1k"
                }, 
                {
                  "data": {
                    "$area": 2888, 
                    "$symbol": "code"
                  }, 
                  "name": "parseEncoding() 2.9k"
                }, 
                {
                  "data": {
                    "$area": 2036, 
                    "$symbol": "code"
                  }, 
                  "name": "parseExprPrimary() 2.0k"
                }, 
                {
                  "data": {
                    "$area": 1752, 
                    "$symbol": "code"
                  }, 
                  "name": "parseUnqualifiedName([anonymous namespace]::itanium_demangle::AbstractManglingParser<[anonymous namespace]::itanium_demangle::ManglingParser<[anonymous namespace]::DefaultAllocator>, [anonymous namespace]::DefaultAllocator>::NameState*) 1.8k"
                }, 
                {
                  "data": {
                    "$area": 1580, 
                    "$symbol": "code"
                  }, 
                  "name": "parseUnresolvedName() 1.6k"
                }, 
                {
                  "data": {
                    "$area": 1556, 
                    "$symbol": "code"
                  }, 
                  "name": "parseFunctionType() 1.6k"
                }, 
                {
                  "data": {
                    "$area": 1228, 
                    "$symbol": "code"
                  }, 
                  "name": "parseTemplateArgs(bool) 1.2k"
                }, 
                {
                  "data": {
                    "$area": 960, 
                    "$symbol": "code"
                  }, 
                  "name": "parseQualifiedType() 960"
                }, 
                {
                  "data": {
                    "$area": 904, 
                    "$symbol": "code"
                  }, 
                  "name": "parseSubstitution() 904"
                }, 
                {
                  "data": {
                    "$area": 880, 
                    "$symbol": "code"
                  }, 
                  "name": "parseFunctionParam() 880"
                }, 
                {
                  "data": {
                    "$area": 728, 
                    "$symbol": "code"
                  }, 
                  "name": "parseBaseUnresolvedName() 728"
                }, 
                {
                  "data": {
                    "$area": 656, 
                    "$symbol": "code"
                  }, 
                  "name": "parseTemplateParam() 656"
                }, 
                {
                  "data": {
                    "$area": 648, 
                    "$symbol": "code"
                  }, 
                  "name": "parseCallOffset() 648"
                }, 
                {
                  "data": {
                    "$area": 624, 
                    "$symbol": "code"
                  }, 
                  "name": "parseCtorDtorName([anonymous namespace]::itanium_demangle::Node*&, [anonymous namespace]::itanium_demangle::AbstractManglingParser<[anonymous namespace]::itanium_demangle::ManglingParser<[anonymous namespace]::DefaultAllocator>, [anonymous namespace]::DefaultAllocator>::NameState*) 624"
                }, 
                {
                  "data": {
                    "$area": 556, 
                    "$symbol": "code"
                  }, 
                  "name": "parseBracedExpr() 556"
                }, 
                {
                  "data": {
                    "$area": 520, 
                    "$symbol": "code"
                  }, 
                  "name": "parseClassEnumType() 520"
                }, 
                {
                  "data": {
                    "$area": 480, 
                    "$symbol": "code"
                  }, 
                  "name": "parseSourceName([anonymous namespace]::itanium_demangle::AbstractManglingParser<[anonymous namespace]::itanium_demangle::ManglingParser<[anonymous namespace]::DefaultAllocator>, [anonymous namespace]::DefaultAllocator>::NameState*) 480"
                }, 
                {
                  "data": {
                    "$area": 472, 
                    "$symbol": "code"
                  }, 
                  "name": "parseTemplateArg() 472"
                }, 
                {
                  "data": {
                    "$area": 392, 
                    "$symbol": "code"
                  }, 
                  "name": "parseAbiTags([anonymous namespace]::itanium_demangle::Node*) 392"
                }, 
                {
                  "data": {
                    "$area": 336, 
                    "$symbol": "code"
                  }, 
                  "name": "parseIntegerLiteral([anonymous namespace]::itanium_demangle::StringView) 336"
                }, 
                {
                  "data": {
                    "$area": 176, 
                    "$symbol": "code"
                  }, 
                  "name": "parseBinaryExpr([anonymous namespace]::itanium_demangle::StringView) 176"
                }, 
                {
                  "data": {
                    "$area": 176, 
                    "$symbol": "code"
                  }, 
                  "name": "parseDecltype() 176"
                }, 
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "parseUnresolvedType() 136"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1416, 
                "$dominant_symbol": "code"
              }, 
              "name": "FoldExpr 1.4k", 
              "children": [
                {
                  "data": {
                    "$area": 1412, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 1.4k"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~FoldExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 860, 
                "$dominant_symbol": "code"
              }, 
              "name": "FunctionEncoding 860", 
              "children": [
                {
                  "data": {
                    "$area": 632, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 632"
                }, 
                {
                  "data": {
                    "$area": 208, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 208"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasFunctionSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~FunctionEncoding() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 856, 
                "$dominant_symbol": "code"
              }, 
              "name": "NewExpr 856", 
              "children": [
                {
                  "data": {
                    "$area": 852, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 852"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~NewExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 808, 
                "$dominant_symbol": "code"
              }, 
              "name": "FunctionType 808", 
              "children": [
                {
                  "data": {
                    "$area": 712, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 712"
                }, 
                {
                  "data": {
                    "$area": 76, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 76"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasFunctionSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~FunctionType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 804, 
                "$dominant_symbol": "code"
              }, 
              "name": "PointerType 804", 
              "children": [
                {
                  "data": {
                    "$area": 460, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 460"
                }, 
                {
                  "data": {
                    "$area": 300, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 300"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 40"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~PointerType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 772, 
                "$dominant_symbol": "code"
              }, 
              "name": "FloatLiteralImpl<double> 772", 
              "children": [
                {
                  "data": {
                    "$area": 600, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 600"
                }, 
                {
                  "data": {
                    "$area": 88, 
                    "$symbol": "data"
                  }, 
                  "name": " [vtable] 88"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 56"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~FloatLiteralImpl() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 740, 
                "$dominant_symbol": "code"
              }, 
              "name": "FloatLiteralImpl<long double> 740", 
              "children": [
                {
                  "data": {
                    "$area": 568, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 568"
                }, 
                {
                  "data": {
                    "$area": 88, 
                    "$symbol": "data"
                  }, 
                  "name": " [vtable] 88"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 56"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~FloatLiteralImpl() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 740, 
                "$dominant_symbol": "code"
              }, 
              "name": "ReferenceType 740", 
              "children": [
                {
                  "data": {
                    "$area": 424, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 424"
                }, 
                {
                  "data": {
                    "$area": 272, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 272"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 40"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ReferenceType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 596, 
                "$dominant_symbol": "code"
              }, 
              "name": "Node* [anonymous namespace] 596", 
              "children": [
                {
                  "data": {
                    "$area": 596, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "itanium_demangle 596", 
                  "children": [
                    {
                      "data": {
                        "$area": 596, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "AbstractManglingParser<[anonymous namespace]::itanium_demangle::ManglingParser<[anonymous namespace]::DefaultAllocator>, [anonymous namespace]::DefaultAllocator> 596", 
                      "children": [
                        {
                          "data": {
                            "$area": 204, 
                            "$symbol": "code"
                          }, 
                          "name": "make<[anonymous namespace]::itanium_demangle::EnclosingExpr, char const (&) [12], [anonymous namespace]::itanium_demangle::Node*&, char const (&) [2]>(char const (&) [12], [anonymous namespace]::itanium_demangle::Node*&, char const (&) [2]) 204"
                        }, 
                        {
                          "data": {
                            "$area": 196, 
                            "$symbol": "code"
                          }, 
                          "name": "make<[anonymous namespace]::itanium_demangle::EnclosingExpr, char const (&) [9], [anonymous namespace]::itanium_demangle::Node*&, char const (&) [2]>(char const (&) [9], [anonymous namespace]::itanium_demangle::Node*&, char const (&) [2]) 196"
                        }, 
                        {
                          "data": {
                            "$area": 196, 
                            "$symbol": "code"
                          }, 
                          "name": "make<[anonymous namespace]::itanium_demangle::EnclosingExpr, char const (&) [10], [anonymous namespace]::itanium_demangle::Node*&, char const (&) [2]>(char const (&) [10], [anonymous namespace]::itanium_demangle::Node*&, char const (&) [2]) 196"
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 576, 
                "$dominant_symbol": "code"
              }, 
              "name": "FloatLiteralImpl<float> 576", 
              "children": [
                {
                  "data": {
                    "$area": 404, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 404"
                }, 
                {
                  "data": {
                    "$area": 88, 
                    "$symbol": "data"
                  }, 
                  "name": " [vtable] 88"
                }, 
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "read-only data"
                  }, 
                  "name": " [typeinfo name] 56"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "data"
                  }, 
                  "name": " [typeinfo] 24"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~FloatLiteralImpl() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 564, 
                "$dominant_symbol": "code"
              }, 
              "name": "ForwardTemplateReference 564", 
              "children": [
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "hasFunctionSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 112"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 112"
                }, 
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "hasArraySlow([anonymous namespace]::itanium_demangle::OutputStream&) const 112"
                }, 
                {
                  "data": {
                    "$area": 80, 
                    "$symbol": "code"
                  }, 
                  "name": "getSyntaxNode([anonymous namespace]::itanium_demangle::OutputStream&) const 80"
                }, 
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 72"
                }, 
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 72"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ForwardTemplateReference() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 540, 
                "$dominant_symbol": "code"
              }, 
              "name": "BinaryExpr 540", 
              "children": [
                {
                  "data": {
                    "$area": 536, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 536"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~BinaryExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 520, 
                "$dominant_symbol": "code"
              }, 
              "name": "ParameterPack 520", 
              "children": [
                {
                  "data": {
                    "$area": 100, 
                    "$symbol": "code"
                  }, 
                  "name": "hasFunctionSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 100"
                }, 
                {
                  "data": {
                    "$area": 100, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 100"
                }, 
                {
                  "data": {
                    "$area": 100, 
                    "$symbol": "code"
                  }, 
                  "name": "hasArraySlow([anonymous namespace]::itanium_demangle::OutputStream&) const 100"
                }, 
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "code"
                  }, 
                  "name": "getSyntaxNode([anonymous namespace]::itanium_demangle::OutputStream&) const 72"
                }, 
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 72"
                }, 
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 72"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ParameterPack() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 512, 
                "$dominant_symbol": "code"
              }, 
              "name": "BracedExpr 512", 
              "children": [
                {
                  "data": {
                    "$area": 508, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 508"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~BracedExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 488, 
                "$dominant_symbol": "code"
              }, 
              "name": "PointerToMemberType 488", 
              "children": [
                {
                  "data": {
                    "$area": 272, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 272"
                }, 
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 172"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 40"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~PointerToMemberType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 472, 
                "$dominant_symbol": "code"
              }, 
              "name": "BracedRangeExpr 472", 
              "children": [
                {
                  "data": {
                    "$area": 468, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 468"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~BracedRangeExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 464, 
                "$dominant_symbol": "code"
              }, 
              "name": "InitListExpr 464", 
              "children": [
                {
                  "data": {
                    "$area": 460, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 460"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~InitListExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 404, 
                "$dominant_symbol": "code"
              }, 
              "name": "StructuredBindingName 404", 
              "children": [
                {
                  "data": {
                    "$area": 400, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 400"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~StructuredBindingName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 404, 
                "$dominant_symbol": "code"
              }, 
              "name": "ConversionExpr 404", 
              "children": [
                {
                  "data": {
                    "$area": 400, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 400"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ConversionExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 376, 
                "$dominant_symbol": "code"
              }, 
              "name": "TemplateArgs 376", 
              "children": [
                {
                  "data": {
                    "$area": 372, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 372"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~TemplateArgs() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 364, 
                "$dominant_symbol": "code"
              }, 
              "name": "EnableIfAttr 364", 
              "children": [
                {
                  "data": {
                    "$area": 360, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 360"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~EnableIfAttr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 364, 
                "$dominant_symbol": "code"
              }, 
              "name": "CallExpr 364", 
              "children": [
                {
                  "data": {
                    "$area": 360, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 360"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~CallExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 364, 
                "$dominant_symbol": "code"
              }, 
              "name": "DynamicExceptionSpec 364", 
              "children": [
                {
                  "data": {
                    "$area": 360, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 360"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~DynamicExceptionSpec() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 360, 
                "$dominant_symbol": "code"
              }, 
              "name": "ClosureTypeName 360", 
              "children": [
                {
                  "data": {
                    "$area": 356, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 356"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ClosureTypeName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 352, 
                "$dominant_symbol": "code"
              }, 
              "name": "SpecialSubstitution 352", 
              "children": [
                {
                  "data": {
                    "$area": 188, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 188"
                }, 
                {
                  "data": {
                    "$area": 160, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 160"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~SpecialSubstitution() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 352, 
                "$dominant_symbol": "code"
              }, 
              "name": "ConditionalExpr 352", 
              "children": [
                {
                  "data": {
                    "$area": 348, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 348"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ConditionalExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 348, 
                "$dominant_symbol": "code"
              }, 
              "name": "QualType 348", 
              "children": [
                {
                  "data": {
                    "$area": 208, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 208"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "hasFunctionSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 40"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 40"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "hasArraySlow([anonymous namespace]::itanium_demangle::OutputStream&) const 40"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 16"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~QualType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 340, 
                "$dominant_symbol": "code"
              }, 
              "name": "ParameterPackExpansion 340", 
              "children": [
                {
                  "data": {
                    "$area": 336, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 336"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ParameterPackExpansion() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 336, 
                "$dominant_symbol": "code"
              }, 
              "name": "ExpandedSpecialSubstitution 336", 
              "children": [
                {
                  "data": {
                    "$area": 188, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 188"
                }, 
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 144"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ExpandedSpecialSubstitution() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 316, 
                "$dominant_symbol": "code"
              }, 
              "name": "ArrayType 316", 
              "children": [
                {
                  "data": {
                    "$area": 280, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 280"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 16"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasArraySlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ArrayType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 260, 
                "$dominant_symbol": "code"
              }, 
              "name": "ArraySubscriptExpr 260", 
              "children": [
                {
                  "data": {
                    "$area": 256, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 256"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ArraySubscriptExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 260, 
                "$dominant_symbol": "code"
              }, 
              "name": "IntegerLiteral 260", 
              "children": [
                {
                  "data": {
                    "$area": 256, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 256"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~IntegerLiteral() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 248, 
                "$dominant_symbol": "code"
              }, 
              "name": "VectorType 248", 
              "children": [
                {
                  "data": {
                    "$area": 244, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 244"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~VectorType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 244, 
                "$dominant_symbol": "code"
              }, 
              "name": "TemplateArgumentPack 244", 
              "children": [
                {
                  "data": {
                    "$area": 240, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 240"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~TemplateArgumentPack() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 244, 
                "$dominant_symbol": "code"
              }, 
              "name": "NodeArrayNode 244", 
              "children": [
                {
                  "data": {
                    "$area": 240, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 240"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~NodeArrayNode() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 240, 
                "$dominant_symbol": "code"
              }, 
              "name": "CtorVtableSpecialName 240", 
              "children": [
                {
                  "data": {
                    "$area": 236, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 236"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~CtorVtableSpecialName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 236, 
                "$dominant_symbol": "code"
              }, 
              "name": "DeleteExpr 236", 
              "children": [
                {
                  "data": {
                    "$area": 232, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 232"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~DeleteExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 216, 
                "$dominant_symbol": "code"
              }, 
              "name": "NestedName 216", 
              "children": [
                {
                  "data": {
                    "$area": 196, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 196"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 16"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~NestedName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 216, 
                "$dominant_symbol": "code"
              }, 
              "name": "QualifiedName 216", 
              "children": [
                {
                  "data": {
                    "$area": 196, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 196"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 16"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~QualifiedName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 208, 
                "$dominant_symbol": "code"
              }, 
              "name": "NodeArray [anonymous namespace] 208", 
              "children": [
                {
                  "data": {
                    "$area": 208, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "itanium_demangle 208", 
                  "children": [
                    {
                      "data": {
                        "$area": 208, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "AbstractManglingParser<[anonymous namespace]::itanium_demangle::ManglingParser<[anonymous namespace]::DefaultAllocator>, [anonymous namespace]::DefaultAllocator> 208", 
                      "children": [
                        {
                          "data": {
                            "$area": 208, 
                            "$symbol": "code"
                          }, 
                          "name": "makeNodeArray<[anonymous namespace]::itanium_demangle::Node**>([anonymous namespace]::itanium_demangle::Node**, [anonymous namespace]::itanium_demangle::Node**) 208"
                        }
                      ]
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 204, 
                "$dominant_symbol": "code"
              }, 
              "name": "CastExpr 204", 
              "children": [
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 200"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~CastExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 200, 
                "$dominant_symbol": "code"
              }, 
              "name": "LocalName 200", 
              "children": [
                {
                  "data": {
                    "$area": 196, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 196"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~LocalName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 196, 
                "$dominant_symbol": "code"
              }, 
              "name": "ElaboratedTypeSpefType 196", 
              "children": [
                {
                  "data": {
                    "$area": 192, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 192"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ElaboratedTypeSpefType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 188, 
                "$dominant_symbol": "code"
              }, 
              "name": "PODSmallVector<[anonymous namespace]::itanium_demangle::Node*, 32ul> 188", 
              "children": [
                {
                  "data": {
                    "$area": 188, 
                    "$symbol": "code"
                  }, 
                  "name": "push_back([anonymous namespace]::itanium_demangle::Node* const&) 188"
                }
              ]
            }, 
            {
              "data": {
                "$area": 184, 
                "$dominant_symbol": "code"
              }, 
              "name": "PrefixExpr 184", 
              "children": [
                {
                  "data": {
                    "$area": 180, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 180"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~PrefixExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 180, 
                "$dominant_symbol": "code"
              }, 
              "name": "PostfixExpr 180", 
              "children": [
                {
                  "data": {
                    "$area": 176, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 176"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~PostfixExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 180, 
                "$dominant_symbol": "code"
              }, 
              "name": "IntegerCastExpr 180", 
              "children": [
                {
                  "data": {
                    "$area": 176, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 176"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~IntegerCastExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 180, 
                "$dominant_symbol": "code"
              }, 
              "name": "NameWithTemplateArgs 180", 
              "children": [
                {
                  "data": {
                    "$area": 160, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 160"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 16"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~NameWithTemplateArgs() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 176, 
                "$dominant_symbol": "code"
              }, 
              "name": "DotSuffix 176", 
              "children": [
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 172"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~DotSuffix() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 176, 
                "$dominant_symbol": "code"
              }, 
              "name": "MemberExpr 176", 
              "children": [
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 172"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~MemberExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 176, 
                "$dominant_symbol": "code"
              }, 
              "name": "ObjCProtoName 176", 
              "children": [
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 172"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ObjCProtoName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 168, 
                "$dominant_symbol": "code"
              }, 
              "name": "SizeofParamPackExpr 168", 
              "children": [
                {
                  "data": {
                    "$area": 164, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 164"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~SizeofParamPackExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 168, 
                "$dominant_symbol": "code"
              }, 
              "name": "UUIDOfExpr 168", 
              "children": [
                {
                  "data": {
                    "$area": 164, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 164"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~UUIDOfExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 168, 
                "$dominant_symbol": "code"
              }, 
              "name": "NoexceptSpec 168", 
              "children": [
                {
                  "data": {
                    "$area": 164, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 164"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~NoexceptSpec() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 164, 
                "$dominant_symbol": "code"
              }, 
              "name": "StdQualifiedName 164", 
              "children": [
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 144"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 16"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~StdQualifiedName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 164, 
                "$dominant_symbol": "code"
              }, 
              "name": "GlobalQualifiedName 164", 
              "children": [
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 144"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 16"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~GlobalQualifiedName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 148, 
                "$dominant_symbol": "code"
              }, 
              "name": "LiteralOperator 148", 
              "children": [
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 144"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~LiteralOperator() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 148, 
                "$dominant_symbol": "code"
              }, 
              "name": "ThrowExpr 148", 
              "children": [
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 144"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ThrowExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 148, 
                "$dominant_symbol": "code"
              }, 
              "name": "ConversionOperatorType 148", 
              "children": [
                {
                  "data": {
                    "$area": 144, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 144"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~ConversionOperatorType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 140, 
                "$dominant_symbol": "code"
              }, 
              "name": "OutputStream 140", 
              "children": [
                {
                  "data": {
                    "$area": 140, 
                    "$symbol": "code"
                  }, 
                  "name": "operator+=([anonymous namespace]::itanium_demangle::StringView) 140"
                }
              ]
            }, 
            {
              "data": {
                "$area": 140, 
                "$dominant_symbol": "code"
              }, 
              "name": "VendorExtQualType 140", 
              "children": [
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 136"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~VendorExtQualType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 140, 
                "$dominant_symbol": "code"
              }, 
              "name": "AbiTagAttr 140", 
              "children": [
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 136"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~AbiTagAttr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 124, 
                "$dominant_symbol": "code"
              }, 
              "name": "PixelVectorType 124", 
              "children": [
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 120"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~PixelVectorType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 124, 
                "$dominant_symbol": "code"
              }, 
              "name": "EnclosingExpr 124", 
              "children": [
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 120"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~EnclosingExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 124, 
                "$dominant_symbol": "code"
              }, 
              "name": "UnnamedTypeName 124", 
              "children": [
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 120"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~UnnamedTypeName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 124, 
                "$dominant_symbol": "code"
              }, 
              "name": "CtorDtorName 124", 
              "children": [
                {
                  "data": {
                    "$area": 120, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 120"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~CtorDtorName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 116, 
                "$dominant_symbol": "code"
              }, 
              "name": "SpecialName 116", 
              "children": [
                {
                  "data": {
                    "$area": 112, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 112"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~SpecialName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 96, 
                "$dominant_symbol": "code"
              }, 
              "name": "DtorName 96", 
              "children": [
                {
                  "data": {
                    "$area": 92, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 92"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~DtorName() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "NewExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "BoolExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "QualifiedName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "TemplateArgs [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "SpecialName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ClosureTypeName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "FunctionParam [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "SizeofParamPackExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ArrayType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "PixelVectorType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "SpecialSubstitution [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "BinaryExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ObjCProtoName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "PrefixExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "NoexceptSpec [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "FoldExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "LocalName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "FunctionEncoding [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ExpandedSpecialSubstitution [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "InitListExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "CastExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$dominant_symbol": "code"
              }, 
              "name": "FunctionParam 88", 
              "children": [
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 84"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~FunctionParam() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "LiteralOperator [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "NestedName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "PointerType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "NameWithTemplateArgs [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ParameterPack [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "DotSuffix [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ThrowExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ConversionExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "VectorType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "QualType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "IntegerLiteral [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "DeleteExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ConversionOperatorType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ElaboratedTypeSpefType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "DynamicExceptionSpec [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ForwardTemplateReference [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "IntegerCastExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ReferenceType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$dominant_symbol": "code"
              }, 
              "name": "BoolExpr 88", 
              "children": [
                {
                  "data": {
                    "$area": 84, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 84"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~BoolExpr() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "UnnamedTypeName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "MemberExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "TemplateArgumentPack [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "NameType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "BracedExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "PostfixQualifiedType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ArraySubscriptExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "UUIDOfExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ConditionalExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "EnclosingExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "CallExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "StdQualifiedName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "PostfixExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "ParameterPackExpansion [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "NodeArrayNode [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "StructuredBindingName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "FunctionType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "DtorName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "CtorVtableSpecialName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "AbiTagAttr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "BracedRangeExpr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "EnableIfAttr [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "GlobalQualifiedName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "PointerToMemberType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "VendorExtQualType [vtable] 88"
            }, 
            {
              "data": {
                "$area": 88, 
                "$symbol": "data"
              }, 
              "name": "CtorDtorName [vtable] 88"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "read-only data"
              }, 
              "name": "ExpandedSpecialSubstitution [typeinfo name] 64"
            }, 
            {
              "data": {
                "$area": 61, 
                "$symbol": "read-only data"
              }, 
              "name": "ForwardTemplateReference [typeinfo name] 61"
            }, 
            {
              "data": {
                "$area": 60, 
                "$dominant_symbol": "code"
              }, 
              "name": "PostfixQualifiedType 60", 
              "children": [
                {
                  "data": {
                    "$area": 56, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 56"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~PostfixQualifiedType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 59, 
                "$symbol": "read-only data"
              }, 
              "name": "ParameterPackExpansion [typeinfo name] 59"
            }, 
            {
              "data": {
                "$area": 59, 
                "$symbol": "read-only data"
              }, 
              "name": "ElaboratedTypeSpefType [typeinfo name] 59"
            }, 
            {
              "data": {
                "$area": 59, 
                "$symbol": "read-only data"
              }, 
              "name": "ConversionOperatorType [typeinfo name] 59"
            }, 
            {
              "data": {
                "$area": 58, 
                "$symbol": "read-only data"
              }, 
              "name": "StructuredBindingName [typeinfo name] 58"
            }, 
            {
              "data": {
                "$area": 58, 
                "$symbol": "read-only data"
              }, 
              "name": "CtorVtableSpecialName [typeinfo name] 58"
            }, 
            {
              "data": {
                "$area": 57, 
                "$symbol": "read-only data"
              }, 
              "name": "NameWithTemplateArgs [typeinfo name] 57"
            }, 
            {
              "data": {
                "$area": 57, 
                "$symbol": "read-only data"
              }, 
              "name": "DynamicExceptionSpec [typeinfo name] 57"
            }, 
            {
              "data": {
                "$area": 57, 
                "$symbol": "read-only data"
              }, 
              "name": "PostfixQualifiedType [typeinfo name] 57"
            }, 
            {
              "data": {
                "$area": 57, 
                "$symbol": "read-only data"
              }, 
              "name": "TemplateArgumentPack [typeinfo name] 57"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "read-only data"
              }, 
              "name": "GlobalQualifiedName [typeinfo name] 56"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "read-only data"
              }, 
              "name": "PointerToMemberType [typeinfo name] 56"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "read-only data"
              }, 
              "name": "SizeofParamPackExpr [typeinfo name] 56"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "read-only data"
              }, 
              "name": "SpecialSubstitution [typeinfo name] 56"
            }, 
            {
              "data": {
                "$area": 55, 
                "$symbol": "read-only data"
              }, 
              "name": "ArraySubscriptExpr [typeinfo name] 55"
            }, 
            {
              "data": {
                "$area": 54, 
                "$symbol": "read-only data"
              }, 
              "name": "VendorExtQualType [typeinfo name] 54"
            }, 
            {
              "data": {
                "$area": 53, 
                "$symbol": "read-only data"
              }, 
              "name": "FunctionEncoding [typeinfo name] 53"
            }, 
            {
              "data": {
                "$area": 53, 
                "$symbol": "read-only data"
              }, 
              "name": "StdQualifiedName [typeinfo name] 53"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "read-only data"
              }, 
              "name": "BracedRangeExpr [typeinfo name] 52"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "read-only data"
              }, 
              "name": "ConditionalExpr [typeinfo name] 52"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "read-only data"
              }, 
              "name": "ClosureTypeName [typeinfo name] 52"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "read-only data"
              }, 
              "name": "IntegerCastExpr [typeinfo name] 52"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "read-only data"
              }, 
              "name": "PixelVectorType [typeinfo name] 52"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "read-only data"
              }, 
              "name": "LiteralOperator [typeinfo name] 52"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "read-only data"
              }, 
              "name": "UnnamedTypeName [typeinfo name] 52"
            }, 
            {
              "data": {
                "$area": 51, 
                "$symbol": "read-only data"
              }, 
              "name": "IntegerLiteral [typeinfo name] 51"
            }, 
            {
              "data": {
                "$area": 51, 
                "$symbol": "read-only data"
              }, 
              "name": "ConversionExpr [typeinfo name] 51"
            }, 
            {
              "data": {
                "$area": 50, 
                "$symbol": "read-only data"
              }, 
              "name": "QualifiedName [typeinfo name] 50"
            }, 
            {
              "data": {
                "$area": 50, 
                "$symbol": "read-only data"
              }, 
              "name": "FunctionParam [typeinfo name] 50"
            }, 
            {
              "data": {
                "$area": 50, 
                "$symbol": "read-only data"
              }, 
              "name": "ReferenceType [typeinfo name] 50"
            }, 
            {
              "data": {
                "$area": 50, 
                "$symbol": "read-only data"
              }, 
              "name": "ParameterPack [typeinfo name] 50"
            }, 
            {
              "data": {
                "$area": 50, 
                "$symbol": "read-only data"
              }, 
              "name": "NodeArrayNode [typeinfo name] 50"
            }, 
            {
              "data": {
                "$area": 50, 
                "$symbol": "read-only data"
              }, 
              "name": "EnclosingExpr [typeinfo name] 50"
            }, 
            {
              "data": {
                "$area": 50, 
                "$symbol": "read-only data"
              }, 
              "name": "ObjCProtoName [typeinfo name] 50"
            }, 
            {
              "data": {
                "$area": 49, 
                "$symbol": "read-only data"
              }, 
              "name": "InitListExpr [typeinfo name] 49"
            }, 
            {
              "data": {
                "$area": 49, 
                "$symbol": "read-only data"
              }, 
              "name": "CtorDtorName [typeinfo name] 49"
            }, 
            {
              "data": {
                "$area": 49, 
                "$symbol": "read-only data"
              }, 
              "name": "NoexceptSpec [typeinfo name] 49"
            }, 
            {
              "data": {
                "$area": 49, 
                "$symbol": "read-only data"
              }, 
              "name": "FunctionType [typeinfo name] 49"
            }, 
            {
              "data": {
                "$area": 49, 
                "$symbol": "read-only data"
              }, 
              "name": "TemplateArgs [typeinfo name] 49"
            }, 
            {
              "data": {
                "$area": 49, 
                "$symbol": "read-only data"
              }, 
              "name": "EnableIfAttr [typeinfo name] 49"
            }, 
            {
              "data": {
                "$area": 48, 
                "$dominant_symbol": "code"
              }, 
              "name": "Node 48", 
              "children": [
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 12"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasFunctionSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasRHSComponentSlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "hasArraySlow([anonymous namespace]::itanium_demangle::OutputStream&) const 8"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "getSyntaxNode([anonymous namespace]::itanium_demangle::OutputStream&) const 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~Node() 4"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "printRight([anonymous namespace]::itanium_demangle::OutputStream&) const 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "read-only data"
              }, 
              "name": "PointerType [typeinfo name] 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "read-only data"
              }, 
              "name": "SpecialName [typeinfo name] 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "read-only data"
              }, 
              "name": "PostfixExpr [typeinfo name] 48"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "BracedExpr [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "UUIDOfExpr [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "AbiTagAttr [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "PrefixExpr [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "NestedName [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "VectorType [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "BinaryExpr [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "MemberExpr [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 47, 
                "$symbol": "read-only data"
              }, 
              "name": "DeleteExpr [typeinfo name] 47"
            }, 
            {
              "data": {
                "$area": 45, 
                "$symbol": "read-only data"
              }, 
              "name": "ThrowExpr [typeinfo name] 45"
            }, 
            {
              "data": {
                "$area": 45, 
                "$symbol": "read-only data"
              }, 
              "name": "ArrayType [typeinfo name] 45"
            }, 
            {
              "data": {
                "$area": 45, 
                "$symbol": "read-only data"
              }, 
              "name": "LocalName [typeinfo name] 45"
            }, 
            {
              "data": {
                "$area": 45, 
                "$symbol": "read-only data"
              }, 
              "name": "DotSuffix [typeinfo name] 45"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "read-only data"
              }, 
              "name": "NameType [typeinfo name] 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "read-only data"
              }, 
              "name": "QualType [typeinfo name] 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "read-only data"
              }, 
              "name": "BoolExpr [typeinfo name] 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "read-only data"
              }, 
              "name": "DtorName [typeinfo name] 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "read-only data"
              }, 
              "name": "CallExpr [typeinfo name] 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "read-only data"
              }, 
              "name": "CastExpr [typeinfo name] 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "read-only data"
              }, 
              "name": "FoldExpr [typeinfo name] 44"
            }, 
            {
              "data": {
                "$area": 43, 
                "$symbol": "read-only data"
              }, 
              "name": "NewExpr [typeinfo name] 43"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "read-only data"
              }, 
              "name": "Node [typeinfo name] 40"
            }, 
            {
              "data": {
                "$area": 32, 
                "$dominant_symbol": "code"
              }, 
              "name": "NameType 32", 
              "children": [
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "printLeft([anonymous namespace]::itanium_demangle::OutputStream&) const 16"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "getBaseName() const 12"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "code"
                  }, 
                  "name": "~NameType() 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "SizeofParamPackExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "NewExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "LiteralOperator [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "EnableIfAttr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ExpandedSpecialSubstitution [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "DtorName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "PointerToMemberType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "PointerType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "EnclosingExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "StdQualifiedName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "DotSuffix [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ParameterPackExpansion [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "NameType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "CtorDtorName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "VendorExtQualType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "SpecialName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "BinaryExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "PostfixExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "IntegerLiteral [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "FunctionEncoding [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "VectorType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "CtorVtableSpecialName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "NameWithTemplateArgs [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "PixelVectorType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "TemplateArgumentPack [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "CallExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "GlobalQualifiedName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ClosureTypeName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "StructuredBindingName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "FunctionParam [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "AbiTagAttr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "FoldExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "BracedRangeExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "DynamicExceptionSpec [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ParameterPack [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "InitListExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "UUIDOfExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ElaboratedTypeSpefType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ReferenceType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ConversionExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "QualType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "BoolExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "PostfixQualifiedType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "LocalName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "MemberExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "UnnamedTypeName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "NestedName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ArraySubscriptExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ConversionOperatorType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ThrowExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "IntegerCastExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ConditionalExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "CastExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "QualifiedName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "DeleteExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "SpecialSubstitution [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "PrefixExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "NodeArrayNode [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "BracedExpr [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "NoexceptSpec [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ArrayType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ForwardTemplateReference [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "FunctionType [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "TemplateArgs [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "ObjCProtoName [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "Node [typeinfo] 16"
            }
          ]
        }, 
        {
          "data": {
            "$area": 252, 
            "$symbol": "code"
          }, 
          "name": "fallback_free(void*) 252"
        }, 
        {
          "data": {
            "$area": 244, 
            "$symbol": "code"
          }, 
          "name": "fallback_malloc(unsigned long) 244"
        }
      ]
    }, 
    {
      "data": {
        "$area": 54024, 
        "$dominant_symbol": "code"
      }, 
      "name": "[path] 54.0k", 
      "children": [
        {
          "data": {
            "$area": 33492, 
            "$dominant_symbol": "code"
          }, 
          "name": "Users 33.5k", 
          "children": [
            {
              "data": {
                "$area": 33492, 
                "$dominant_symbol": "code"
              }, 
              "name": "prideout 33.5k", 
              "children": [
                {
                  "data": {
                    "$area": 30008, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "github 30.0k", 
                  "children": [
                    {
                      "data": {
                        "$area": 30008, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "filament 30.0k", 
                      "children": [
                        {
                          "data": {
                            "$area": 24936, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "android 24.9k", 
                          "children": [
                            {
                              "data": {
                                "$area": 24496, 
                                "$dominant_symbol": "code"
                              }, 
                              "name": "filament-android 24.5k", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 24496, 
                                    "$dominant_symbol": "code"
                                  }, 
                                  "name": "src 24.5k", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 24496, 
                                        "$dominant_symbol": "code"
                                      }, 
                                      "name": "main 24.5k", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 24496, 
                                            "$dominant_symbol": "code"
                                          }, 
                                          "name": "cpp 24.5k", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 3756, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Texture.cpp 3.8k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 468, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nSetImageCubemap 468"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 456, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nGeneratePrefilterMipmap 456"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 428, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nSetImage3D 428"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 400, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nSetImage 400"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 356, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_android_TextureHelper_nSetBitmap 356"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 352, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nSetImageCubemapCompressed 352"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 316, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nSetImage3DCompressed 316"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 292, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nSetImageCompressed 292"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 256, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_android_TextureHelper_nSetBitmapWithCallback 256"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nCreateBuilder 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nIsStreamValidForTexture 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nIsTextureFormatSupported 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nGetHeight 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nGetDepth 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nGetTarget 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderSwizzle 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nGetWidth 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nGetInternalFormat 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nGetLevels 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nSetExternalStream 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nSetExternalImage 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderDepth 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderBuild 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderLevels 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderSampler 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nGenerateMipmaps 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderHeight 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderWidth 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderUsage 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Texture_nBuilderFormat 12"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 2764, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "MaterialInstance.cpp 2.8k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 360, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetFloatParameterArray 360"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 308, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetBooleanParameterArray 308"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 304, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetIntParameterArray 304"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 144, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterFloat4 144"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 144, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterBool4 144"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 136, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterFloat3 136"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 132, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterBool3 132"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 128, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterInt4 128"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 124, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterInt3 124"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 124, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterTexture 124"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 120, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterFloat2 120"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 120, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterBool2 120"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 112, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterFloat 112"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterInt2 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterBool 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetParameterInt 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nGetName 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetScissor 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetDepthCulling 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetDepthWrite 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetDoubleSided 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetColorWrite 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetCullingMode 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nUnsetScissor 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetSpecularAntiAliasingVariance 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetSpecularAntiAliasingThreshold 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetMaskThreshold 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nSetPolygonOffset 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MaterialInstance_nGetMaterial 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1924, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "LightManager.cpp 1.9k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 404, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderShadowOptions 404"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 136, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nComputePracticalSplits 136"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 120, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetPosition 120"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 120, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nComputeLogSplits 120"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 120, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetDirection 120"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 120, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetColor 120"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 96, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nComputeUniformSplits 96"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 48, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nCreateBuilder 48"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 44, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetPosition 44"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 44, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetColor 44"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 44, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetDirection 44"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderPosition 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderDirection 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderColor 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderBuild 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetIntensity__JIFF 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetType 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nHasComponent 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nIsShadowCaster 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetShadowCaster 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetInstance 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetComponentCount 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderCastLight 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderCastShadows 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nDestroy 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetIntensityCandela 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetIntensity 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetSpotLightCone 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetSunAngularRadius 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetSunHaloFalloff 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetSunHaloFalloff 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetSunHaloSize 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetIntensity__JIF 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetFalloff 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetSunHaloSize 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nGetSunAngularRadius 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nSetFalloff 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderHaloFalloff 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderAngularRadius 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderHaloSize 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderFalloff 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderIntensityCandela 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderIntensity__JFF 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderIntensity__JF 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_LightManager_nBuilderSpotLightCone 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1716, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "RenderableManager.cpp 1.7k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 204, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nGetAxisAlignedBoundingBox 204"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 148, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetBonesAsMatrices 148"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 148, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetBonesAsQuaternions 148"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 124, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetMorphWeights 124"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 124, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderSkinningBones 124"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 56, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderGeometry__JIIJJIIII 56"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 48, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetGeometryAt__JIIIJJII 48"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 48, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetAxisAlignedBoundingBox 48"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 48, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nCreateBuilder 48"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 44, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderBoundingBox 44"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderGeometry__JIIJJII 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetGeometryAt__JIIIII 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderBuild 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nHasComponent 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nGetMaterialAt 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nIsShadowCaster 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nIsShadowReceiver 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nGetEnabledAttributesAt 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetMaterialInstanceAt 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nGetPrimitiveCount 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetScreenSpaceContactShadows 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetBlendOrderAt 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetCulling 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetReceiveShadows 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetCastShadows 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nGetInstance 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderGeometry__JIIJJ 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetLayerMask 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nGetMaterialInstanceAt 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderLayerMask 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderScreenSpaceContactShadows 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderBlendOrder 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderCastShadows 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nSetPriority 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderMaterial 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderMorphing 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderCulling 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderReceiveShadows 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nDestroy 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderSkinning 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderableManager_nBuilderPriority 12"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1540, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Camera.cpp 1.5k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 128, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetCullingProjectionMatrix 128"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 128, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetViewMatrix 128"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 128, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetModelMatrix 128"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 128, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetProjectionMatrix 128"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 124, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nSetCustomProjection 124"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nLookAt 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetScaling 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetPosition 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetUpVector 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetForwardVector 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetLeftVector 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 100, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nSetModelMatrix 100"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 100, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nSetScaling 100"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nSetProjectionFov 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nSetProjection 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetShutterSpeed 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetNear 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetSensitivity 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nSetLensProjection 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetAperture 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nGetCullingFar 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Camera_nSetExposure 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1376, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "View.cpp 1.4k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 216, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetSSCTOptions 216"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 196, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetAmbientOcclusionOptions 196"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 96, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetName 96"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 88, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetBloomOptions 88"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 84, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetFogOptions 84"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 68, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetDynamicResolutionOptions 68"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 60, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetVignetteOptions 60"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetDepthOfFieldOptions 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetViewport 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetTemporalAntiAliasingOptions 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetRenderQuality 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetVsmShadowOptions 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nGetAntiAliasing 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nIsFrontFaceWindingInverted 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nIsPostProcessingEnabled 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nGetDithering 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nGetSampleCount 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nIsScreenSpaceRefractionEnabled 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nIsShadowingEnabled 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nGetAmbientOcclusion 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetScreenSpaceRefractionEnabled 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetVisibleLayers 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetShadowingEnabled 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetFrontFaceWindingInverted 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetPostProcessingEnabled 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetColorGrading 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetCamera 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetScene 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetAntiAliasing 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetShadowType 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetRenderTarget 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetAmbientOcclusion 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetBlendMode 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetDithering 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetSampleCount 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_View_nSetDynamicLightingOptions 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1320, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "ColorGrading.cpp 1.3k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 368, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderShadowsMidtonesHighlights 368"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 272, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderChannelMixer 272"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 272, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderCurves 272"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 272, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderSlopeOffsetPower 272"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nCreateBuilder 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderQuality 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderBuild 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderToneMapping 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderVibrance 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderContrast 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderWhiteBalance 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_ColorGrading_nBuilderSaturation 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1276, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "SurfaceOrientation.cpp 1.3k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 212, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nDestroyBuilder 212"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderTangents 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderUVs 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderNormals 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderPositions 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nGetQuatsAsHalf 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nGetQuatsAsFloat 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nGetQuatsAsShort 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 88, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderTriangles16 88"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 88, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderTriangles32 88"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 72, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nCreateBuilder 72"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nDestroy 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nGetVertexCount 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderVertexCount 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderTriangleCount 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SurfaceOrientation_nBuilderBuild 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1248, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Renderer.cpp 1.2k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 480, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nReadPixelsEx 480"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 468, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nReadPixels 468"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 80, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nCopyFrame 80"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 64, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nSetClearOptions 64"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 48, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nSetFrameRateOptions 48"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nSetDisplayInfo 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nBeginFrame 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nRender 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nEndFrame 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nGetUserTime 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Renderer_nResetUserTime 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1192, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "IndirectLight.cpp 1.2k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 200, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nGetColorEstimateStatic 200"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 160, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nGetDirectionEstimateStatic 160"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 144, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nGetColorEstimate 144"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 112, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nGetRotation 112"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nIrradiance 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nRadiance 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 104, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nGetDirectionEstimate 104"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 56, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nSetRotation 56"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 56, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nRotation 56"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nCreateBuilder 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nIrradianceAsTexture 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nBuilderReflections 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nBuilderBuild 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nIntensity 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nGetIntensity 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nGetIrradianceTexture 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nGetReflectionsTexture 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndirectLight_nSetIntensity 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1088, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Material.cpp 1.1k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 384, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetParameters 384"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nCreateInstanceWithName 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nHasParameter 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 100, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nBuilderBuild 100"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 40, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetName 40"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetCullingMode 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nIsDepthCullingEnabled 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nIsDepthWriteEnabled 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nIsDoubleSided 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetVertexDomain 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetShading 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nIsColorWriteEnabled 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetRefractionType 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetRefractionMode 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetInterpolation 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetBlendingMode 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetParameterCount 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetRequiredAttributes 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nCreateInstance 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetDefaultInstance 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetMaskThreshold 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetSpecularAntiAliasingVariance 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Material_nGetSpecularAntiAliasingThreshold 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1004, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Stream.cpp 1.0k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 468, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nReadPixels 468"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 256, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nSetAcquiredImage 256"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 92, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nDestroyBuilder 92"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 60, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nCreateBuilder 60"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 48, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nBuilderStreamSource 48"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nSetDimensions 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nBuilderStream 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nBuilderHeight 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nBuilderWidth 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nBuilderBuild 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nGetTimestamp 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Stream_nGetStreamType 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 696, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "VertexBuffer.cpp 696", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 300, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nPopulateTangentQuaternions 300"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 220, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nSetBufferAt 220"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nCreateBuilder 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nBuilderAttribute 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nBuilderNormalized 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nGetVertexCount 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nBuilderVertexCount 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nBuilderBufferCount 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_VertexBuffer_nBuilderBuild 12"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 688, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Engine.cpp 688", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 48, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateSwapChain 48"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyFence 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyVertexBuffer 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroySkybox 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyView 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyIndexBuffer 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyScene 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyRenderer 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyTexture 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyMaterial 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyMaterialInstance 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroySwapChain 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyStream 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyIndirectLight 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyColorGrading 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyRenderTarget 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nGetBackend 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyEngine 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateSwapChainHeadless 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateEngine 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateSwapChainFromRawPointer 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyEntity 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateCameraWithEntity 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nGetCameraComponent 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nDestroyCamera 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nGetLightManager 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateFence 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nGetTransformManager 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nFlushAndWait 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateCamera 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateRenderer 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateView 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nGetRenderableManager 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Engine_nCreateScene 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 676, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "TransformManager.cpp 676", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 172, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nCreateArray 172"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 120, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nGetWorldTransform 120"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 120, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nGetTransform 120"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nSetTransform 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 56, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nCreate 56"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nHasComponent 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nGetInstance 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nSetParent 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nDestroy 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nOpenLocalTransformTransaction 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TransformManager_nCommitLocalTransformTransaction 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 348, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "IndexBuffer.cpp 348", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 212, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndexBuffer_nSetBuffer 212"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndexBuffer_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndexBuffer_nCreateBuilder 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndexBuffer_nBuilderBufferType 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndexBuffer_nGetIndexCount 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndexBuffer_nBuilderBuild 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_IndexBuffer_nBuilderIndexCount 12"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 336, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "EntityManager.cpp 336", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_EntityManager_nDestroyArray 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 108, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_EntityManager_nCreateArray 108"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_EntityManager_nIsAlive 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_EntityManager_nCreate 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_EntityManager_nDestroy 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_EntityManager_nGetEntityManager 16"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 336, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Scene.cpp 336", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 124, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Scene_nAddEntities 124"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 124, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Scene_nRemoveEntities 124"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Scene_nGetRenderableCount 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Scene_nGetLightCount 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Scene_nRemove 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Scene_nSetSkybox 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Scene_nSetIndirectLight 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Scene_nAddEntity 12"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 240, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "TextureSampler.cpp 240", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 44, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nSetAnisotropy 44"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nCreateSampler 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nGetAnisotropy 20"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nSetWrapModeT 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nSetMagFilter 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nSetWrapModeR 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nSetWrapModeS 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nCreateCompareSampler 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nSetMinFilter 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nSetCompareFunction 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nSetCompareMode 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nGetMinFilter 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nGetCompareMode 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nGetCompareFunction 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nGetWrapModeS 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nGetWrapModeT 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nGetWrapModeR 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_TextureSampler_nGetMagFilter 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 232, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Colors.cpp 232", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 116, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Colors_nIlluminantD 116"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 116, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Colors_nCct 116"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 212, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "RenderTarget.cpp 212", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nCreateBuilder 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nGetFace 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nGetMipLevel 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nBuilderMipLevel 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nBuilderTexture 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nBuilderFace 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nBuilderLayer 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nGetLayer 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_RenderTarget_nBuilderBuild 12"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 204, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "SkyBox.cpp 204", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 36, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nDestroyBuilder 36"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nCreateBuilder 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nGetLayerMask 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 24, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nGetIntensity 24"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nSetLayerMask 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 16, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nBuilderShowSun 16"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nBuilderEnvironment 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 12, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nBuilderBuild 12"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nBuilderIntensity 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nSetColor 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybox_nBuilderColor 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Skybix_nGetTexture 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 116, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "MathUtils.cpp 116", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 116, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_MathUtils_nPackTangentFrame 116"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 96, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Filament.cpp 96", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 96, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "JNI_OnLoad 96"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 60, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "Fence.cpp 60", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 32, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Fence_nWait 32"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_Fence_nWaitAndDestroy 28"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 44, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "SwapChain.cpp 44", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 44, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "Java_com_google_android_filament_SwapChain_nSetFrameCompletedCallback 44"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 8, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "nativewindow 8", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$dominant_symbol": "code"
                                                  }, 
                                                  "name": "Android.cpp 8", 
                                                  "children": [
                                                    {
                                                      "data": {
                                                        "$area": 8, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "getNativeWindow 8"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }, 
                            {
                              "data": {
                                "$area": 440, 
                                "$dominant_symbol": "code"
                              }, 
                              "name": "common 440", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 440, 
                                    "$dominant_symbol": "code"
                                  }, 
                                  "name": "CallbackUtils.cpp 440", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 232, 
                                        "$symbol": "code"
                                      }, 
                                      "name": "releaseCallbackJni(_JNIEnv*, CallbackJni, _jobject*, _jobject*) 232"
                                    }, 
                                    {
                                      "data": {
                                        "$area": 208, 
                                        "$symbol": "code"
                                      }, 
                                      "name": "acquireCallbackJni(_JNIEnv*, CallbackJni&) 208"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }, 
                        {
                          "data": {
                            "$area": 4148, 
                            "$dominant_symbol": "weak symbol"
                          }, 
                          "name": "libs 4.1k", 
                          "children": [
                            {
                              "data": {
                                "$area": 4148, 
                                "$dominant_symbol": "weak symbol"
                              }, 
                              "name": "utils 4.1k", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 4148, 
                                    "$dominant_symbol": "weak symbol"
                                  }, 
                                  "name": "include 4.1k", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 4148, 
                                        "$dominant_symbol": "weak symbol"
                                      }, 
                                      "name": "utils 4.1k", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 3940, 
                                            "$dominant_symbol": "weak symbol"
                                          }, 
                                          "name": "StructureOfArrays.h 3.9k", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 820, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZN5utils21StructureOfArraysBaseINS_5ArenaINS_13HeapAllocatorENS_13LockingPolicy6NoLockENS_14TrackingPolicy9UntrackedEEEJN8filament13FLightManager9LightTypeENS8_4math7details5TVec3IfEESE_SE_NS9_12ShadowParamsENS9_10SpotParamsEfffffNS_6EntityEEE7forEachIZNSI_14construct_eachEmmEUlTyT_E_JEEEvOSK_DpOT0_ 820"
                                            }, 
                                            {
                                              "data": {
                                                "$area": 760, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZN5utils21StructureOfArraysBaseINS_5ArenaINS_13HeapAllocatorENS_13LockingPolicy6NoLockENS_14TrackingPolicy9UntrackedEEEJNS_14EntityInstanceIN8filament17RenderableManagerELb0EEENS9_4math7details6TMat44IfEEbNS9_18FRenderableManager10VisibilityENS9_7backend6HandleINSI_15HwUniformBufferEEENSD_5TVec3IfEEhNSD_5TVec4IfEEhSN_NS_5SliceINS9_16FRenderPrimitiveEjEEjEE7forEachIZNST_9move_eachEPvmEUlTyT_E_JEEEvOSW_DpOT0_ 760"
                                            }, 
                                            {
                                              "data": {
                                                "$area": 576, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZN5utils21StructureOfArraysBaseINS_5ArenaINS_13HeapAllocatorENS_13LockingPolicy6NoLockENS_14TrackingPolicy9UntrackedEEEJN8filament13FLightManager9LightTypeENS8_4math7details5TVec3IfEESE_SE_NS9_12ShadowParamsENS9_10SpotParamsEfffffNS_6EntityEEE7forEachIZNSI_9move_eachEPvmEUlTyT_E_JEEEvOSL_DpOT0_ 576"
                                            }, 
                                            {
                                              "data": {
                                                "$area": 508, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZN5utils21StructureOfArraysBaseINS_5ArenaINS_13HeapAllocatorENS_13LockingPolicy6NoLockENS_14TrackingPolicy9UntrackedEEEJNS_14EntityInstanceIN8filament17RenderableManagerELb0EEENS9_4math7details6TMat44IfEEbNS9_18FRenderableManager10VisibilityENS9_7backend6HandleINSI_15HwUniformBufferEEENSD_5TVec3IfEEhNSD_5TVec4IfEEhSN_NS_5SliceINS9_16FRenderPrimitiveEjEEjEE7forEachIZNST_4swapEmmEUlTyT_E_JEEEvOSV_DpOT0_ 508"
                                            }, 
                                            {
                                              "data": {
                                                "$area": 448, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZN5utils21StructureOfArraysBaseINS_5ArenaINS_13HeapAllocatorENS_13LockingPolicy6NoLockENS_14TrackingPolicy9UntrackedEEEJN8filament3BoxEhNS8_4math7details5TVec4IfEENS8_18FRenderableManager10VisibilityENS_5SliceINS8_16FRenderPrimitiveEjEENSt6__ndk110unique_ptrINSE_5BonesENSJ_14default_deleteISL_EEEENS_6EntityEEE7forEachIZNSQ_9move_eachEPvmEUlTyT_E_JEEEvOST_DpOT0_ 448"
                                            }, 
                                            {
                                              "data": {
                                                "$area": 440, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZN5utils21StructureOfArraysBaseINS_5ArenaINS_13HeapAllocatorENS_13LockingPolicy6NoLockENS_14TrackingPolicy9UntrackedEEEJN8filament4math7details6TMat44IfEESC_NS_14EntityInstanceINS8_16TransformManagerELb0EEESF_SF_SF_NS_6EntityEEE7forEachIZNSH_14construct_eachEmmEUlTyT_E_JEEEvOSJ_DpOT0_ 440"
                                            }, 
                                            {
                                              "data": {
                                                "$area": 388, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZN5utils21StructureOfArraysBaseINS_5ArenaINS_13HeapAllocatorENS_13LockingPolicy6NoLockENS_14TrackingPolicy9UntrackedEEEJN8filament3BoxEhNS8_4math7details5TVec4IfEENS8_18FRenderableManager10VisibilityENS_5SliceINS8_16FRenderPrimitiveEjEENSt6__ndk110unique_ptrINSE_5BonesENSJ_14default_deleteISL_EEEENS_6EntityEEE7forEachIZNSQ_14construct_eachEmmEUlTyT_E_JEEEvOSS_DpOT0_ 388"
                                            }
                                          ]
                                        }, 
                                        {
                                          "data": {
                                            "$area": 208, 
                                            "$dominant_symbol": "code"
                                          }, 
                                          "name": "JobSystem.h 208", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 104, 
                                                "$symbol": "code"
                                              }, 
                                              "name": "_ZZN5utils9JobSystem9createJobIZNS_4jobs9createJobIRZN8filament3ibl12CubemapUtils7processIZNS5_10CubemapIBL15roughnessFilterERS0_RNS5_7CubemapERKNSt6__ndk16vectorISA_NSC_9allocatorISA_EEEEfmNS4_4math7details5TVec3IfEEbNSC_8functionIFvmfEEEE5StateEEvSB_S9_NSN_IFvRT_mNSA_4FaceEPSM_mEEENSN_IFvSS_EEERKSR_EUlS9_PNS0_3JobEE_JNSC_17reference_wrapperIS0_EERS12_EEES12_S9_S12_OSR_DpOT0_E4DataXadL_ZZNS3_IS14_JS16_S17_EEES12_S9_S12_S18_S1B_ENS1C_3gobES9_S12_EEEES12_S12_SR_EN4stub4callEPvS9_S12_ 104"
                                            }, 
                                            {
                                              "data": {
                                                "$area": 104, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZZN5utils9JobSystem9createJobIZNS_4jobs9createJobIRZN8filament3ibl12CubemapUtils7processINS6_10EmptyStateEEEvRNS5_7CubemapERS0_NSt6__ndk18functionIFvRT_mNS9_4FaceEPNS4_4math7details5TVec3IfEEmEEENSD_IFvSF_EEERKSE_EUlSB_PNS0_3JobEE_JNSC_17reference_wrapperIS0_EERST_EEEST_SB_ST_OSE_DpOT0_E4DataXadL_ZZNS3_ISV_JSX_SY_EEEST_SB_ST_SZ_S12_ENS13_3gobESB_ST_EEEEST_ST_SE_EN4stub4callEPvSB_ST_ 104"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }, 
                        {
                          "data": {
                            "$area": 924, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "filament 924", 
                          "children": [
                            {
                              "data": {
                                "$area": 488, 
                                "$dominant_symbol": "code"
                              }, 
                              "name": "src 488", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 488, 
                                    "$dominant_symbol": "code"
                                  }, 
                                  "name": "fg 488", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 488, 
                                        "$dominant_symbol": "code"
                                      }, 
                                      "name": "FrameGraphPass.h 488", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 128, 
                                            "$symbol": "code"
                                          }, 
                                          "name": "_ZN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_3EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_E7executeESP_SU_ 128"
                                        }, 
                                        {
                                          "data": {
                                            "$area": 116, 
                                            "$symbol": "code"
                                          }, 
                                          "name": "_ZN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_1EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_E7executeESP_SU_ 116"
                                        }, 
                                        {
                                          "data": {
                                            "$area": 52, 
                                            "$symbol": "code"
                                          }, 
                                          "name": "_ZN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_2EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_E7executeESP_SU_ 52"
                                        }, 
                                        {
                                          "data": {
                                            "$area": 48, 
                                            "$symbol": "code"
                                          }, 
                                          "name": "_ZN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_4EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_E7executeESP_SU_ 48"
                                        }, 
                                        {
                                          "data": {
                                            "$area": 36, 
                                            "$symbol": "code"
                                          }, 
                                          "name": "_ZN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_4EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_ED0Ev 36"
                                        }, 
                                        {
                                          "data": {
                                            "$area": 36, 
                                            "$symbol": "code"
                                          }, 
                                          "name": "_ZN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_3EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_ED0Ev 36"
                                        }, 
                                        {
                                          "data": {
                                            "$area": 36, 
                                            "$symbol": "code"
                                          }, 
                                          "name": "_ZN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_2EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_ED0Ev 36"
                                        }, 
                                        {
                                          "data": {
                                            "$area": 36, 
                                            "$symbol": "code"
                                          }, 
                                          "name": "_ZN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_1EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_ED0Ev 36"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }, 
                            {
                              "data": {
                                "$area": 436, 
                                "$dominant_symbol": "weak symbol"
                              }, 
                              "name": "backend 436", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 312, 
                                    "$dominant_symbol": "weak symbol"
                                  }, 
                                  "name": "include 312", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 312, 
                                        "$dominant_symbol": "weak symbol"
                                      }, 
                                      "name": "private 312", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 312, 
                                            "$dominant_symbol": "weak symbol"
                                          }, 
                                          "name": "backend 312", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 312, 
                                                "$dominant_symbol": "weak symbol"
                                              }, 
                                              "name": "CommandStream.h 312", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 156, 
                                                    "$symbol": "weak symbol"
                                                  }, 
                                                  "name": "decltype(auto) filament::backend::trampoline<void (filament::NoopDriver::*)(filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo), filament::NoopDriver&, std::__ndk1::tuple<filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo>, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul>(void (filament::NoopDriver::*&&)(filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo), filament::NoopDriver&, std::__ndk1::tuple<filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo>&&, std::__ndk1::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul>) 156"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 156, 
                                                    "$symbol": "weak symbol"
                                                  }, 
                                                  "name": "decltype(auto) filament::backend::trampoline<void (filament::OpenGLDriver::*)(filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo), filament::OpenGLDriver&, std::__ndk1::tuple<filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo>, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul>(void (filament::OpenGLDriver::*&&)(filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo), filament::OpenGLDriver&, std::__ndk1::tuple<filament::backend::Handle<filament::backend::HwRenderTarget>, filament::backend::TargetBufferFlags, unsigned int, unsigned int, unsigned char, filament::backend::MRT, filament::backend::TargetBufferInfo, filament::backend::TargetBufferInfo>&&, std::__ndk1::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul>) 156"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }, 
                                {
                                  "data": {
                                    "$area": 124, 
                                    "$dominant_symbol": "weak symbol"
                                  }, 
                                  "name": "src 124", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 124, 
                                        "$dominant_symbol": "weak symbol"
                                      }, 
                                      "name": "opengl 124", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 124, 
                                            "$dominant_symbol": "weak symbol"
                                          }, 
                                          "name": "OpenGLDriver.cpp 124", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 124, 
                                                "$symbol": "weak symbol"
                                              }, 
                                              "name": "_ZN8filament12OpenGLDriver9constructINS0_9GLTextureENS_7backend9HwTextureEJRNS3_11SamplerTypeERhS7_RjS8_S8_RNS3_13TextureFormatERNS3_12TextureUsageEEEEPNSt6__ndk19enable_ifIXsr3std10is_base_ofIT0_T_EE5valueESG_E4typeERKNS3_6HandleISF_EEDpOT1_ 124"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 3484, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "Library 3.5k", 
                  "children": [
                    {
                      "data": {
                        "$area": 3484, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "Android 3.5k", 
                      "children": [
                        {
                          "data": {
                            "$area": 3484, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "sdk 3.5k", 
                          "children": [
                            {
                              "data": {
                                "$area": 3484, 
                                "$dominant_symbol": "code"
                              }, 
                              "name": "ndk 3.5k", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 3484, 
                                    "$dominant_symbol": "code"
                                  }, 
                                  "name": "21.3.6528147 3.5k", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 3484, 
                                        "$dominant_symbol": "code"
                                      }, 
                                      "name": "toolchains 3.5k", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 3484, 
                                            "$dominant_symbol": "code"
                                          }, 
                                          "name": "llvm 3.5k", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 3484, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "prebuilt 3.5k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 3484, 
                                                    "$dominant_symbol": "code"
                                                  }, 
                                                  "name": "darwin-x86_64 3.5k", 
                                                  "children": [
                                                    {
                                                      "data": {
                                                        "$area": 3484, 
                                                        "$dominant_symbol": "code"
                                                      }, 
                                                      "name": "sysroot 3.5k", 
                                                      "children": [
                                                        {
                                                          "data": {
                                                            "$area": 3484, 
                                                            "$dominant_symbol": "code"
                                                          }, 
                                                          "name": "usr 3.5k", 
                                                          "children": [
                                                            {
                                                              "data": {
                                                                "$area": 3484, 
                                                                "$dominant_symbol": "code"
                                                              }, 
                                                              "name": "include 3.5k", 
                                                              "children": [
                                                                {
                                                                  "data": {
                                                                    "$area": 3484, 
                                                                    "$dominant_symbol": "code"
                                                                  }, 
                                                                  "name": "c++ 3.5k", 
                                                                  "children": [
                                                                    {
                                                                      "data": {
                                                                        "$area": 3484, 
                                                                        "$dominant_symbol": "code"
                                                                      }, 
                                                                      "name": "v1 3.5k", 
                                                                      "children": [
                                                                        {
                                                                          "data": {
                                                                            "$area": 2920, 
                                                                            "$dominant_symbol": "weak symbol"
                                                                          }, 
                                                                          "name": "vector 2.9k", 
                                                                          "children": [
                                                                            {
                                                                              "data": {
                                                                                "$area": 972, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk16vectorIN3tsl17detail_robin_hash12bucket_entryINS_4pairIPKcjEELb1EEENS_9allocatorIS8_EEE6assignIPS8_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_ 972"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 888, 
                                                                                "$symbol": "weak symbol"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk16vectorIN8filament7backend7Program7SamplerENS_9allocatorIS4_EEE6insertIPKS4_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPS4_EEE4typeENSG_ISA_EESC_SC_ 888"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 548, 
                                                                                "$symbol": "weak symbol"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk16vectorIN8filament21UniformInterfaceBlock11UniformInfoENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ 548"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 512, 
                                                                                "$symbol": "weak symbol"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk16vectorIN8filament21SamplerInterfaceBlock11SamplerInfoENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ 512"
                                                                            }
                                                                          ]
                                                                        }, 
                                                                        {
                                                                          "data": {
                                                                            "$area": 564, 
                                                                            "$dominant_symbol": "code"
                                                                          }, 
                                                                          "name": "functional 564", 
                                                                          "children": [
                                                                            {
                                                                              "data": {
                                                                                "$area": 100, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEED0Ev 100"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 100, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEED2Ev 100"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 88, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEE7destroyEv 88"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 88, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEE18destroy_deallocateEv 88"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 88, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNKSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEE7__cloneEv 88"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 56, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNKSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEE7__cloneEPNS0_6__baseISQ_EE 56"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 28, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNKSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEE6targetERKSt9type_info 28"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 12, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNKSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEE11target_typeEv 12"
                                                                            }, 
                                                                            {
                                                                              "data": {
                                                                                "$area": 4, 
                                                                                "$symbol": "code"
                                                                              }, 
                                                                              "name": "_ZNSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEEclEv 4"
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 20532, 
            "$dominant_symbol": "code"
          }, 
          "name": "Volumes 20.5k", 
          "children": [
            {
              "data": {
                "$area": 20532, 
                "$dominant_symbol": "code"
              }, 
              "name": "Android 20.5k", 
              "children": [
                {
                  "data": {
                    "$area": 20532, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "buildbot 20.5k", 
                  "children": [
                    {
                      "data": {
                        "$area": 20532, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "src 20.5k", 
                      "children": [
                        {
                          "data": {
                            "$area": 20532, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "android 20.5k", 
                          "children": [
                            {
                              "data": {
                                "$area": 14340, 
                                "$dominant_symbol": "code"
                              }, 
                              "name": "gcc 14.3k", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 14340, 
                                    "$dominant_symbol": "code"
                                  }, 
                                  "name": "toolchain 14.3k", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 14340, 
                                        "$dominant_symbol": "code"
                                      }, 
                                      "name": "gcc 14.3k", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 14340, 
                                            "$dominant_symbol": "code"
                                          }, 
                                          "name": "gcc-4.9 14.3k", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 14340, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "libgcc 14.3k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 5844, 
                                                    "$dominant_symbol": "code"
                                                  }, 
                                                  "name": "unwind-dw2.c 5.8k", 
                                                  "children": [
                                                    {
                                                      "data": {
                                                        "$area": 1460, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "execute_stack_op 1.5k"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 1272, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "execute_cfa_program 1.3k"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 1060, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "uw_frame_state_for 1.1k"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 524, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "uw_update_context_1 524"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 276, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "init_dwarf_reg_size_table 276"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 268, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "uw_install_context_1 268"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 244, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__frame_state_for 244"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 220, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "uw_init_context_1 220"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 88, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_SetGR 88"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 88, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetGR 88"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 88, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetGR.localalias.0 88"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 76, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "uw_update_context 76"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 60, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_SetSpColumn 60"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 40, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_FindEnclosingFunction 40"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 20, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetIPInfo 20"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 8, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetCFA 8"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 8, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetRegionStart 8"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 8, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetLanguageSpecificData 8"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 8, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_SetIP 8"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 8, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetTextRelBase 8"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 8, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetDataRelBase 8"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 8, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_GetIP 8"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 4, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_DebugHook 4"
                                                    }
                                                  ]
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 4200, 
                                                    "$dominant_symbol": "code"
                                                  }, 
                                                  "name": "unwind-dw2-fde.c 4.2k", 
                                                  "children": [
                                                    {
                                                      "data": {
                                                        "$area": 1392, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "search_object 1.4k"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 352, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "linear_search_fdes 352"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 352, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "classify_object_over_fdes 352"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 308, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "add_fdes 308"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 256, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__deregister_frame_info_bases 256"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 252, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "get_cie_encoding 252"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 192, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "frame_downheap 192"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 180, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "frame_heapsort 180"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 156, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "fde_mixed_encoding_compare 156"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 156, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__register_frame_info_bases 156"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 148, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__register_frame_info_table_bases 148"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 144, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "fde_single_encoding_compare 144"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 96, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "base_from_object 96"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 64, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__register_frame 64"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 44, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__register_frame_table 44"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 36, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__deregister_frame 36"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 28, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "fde_unencoded_compare 28"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 16, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "get_fde_encoding 16"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 12, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__register_frame_info_table 12"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 12, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__register_frame_info 12"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 4, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "__deregister_frame_info 4"
                                                    }
                                                  ]
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 1792, 
                                                    "$dominant_symbol": "code"
                                                  }, 
                                                  "name": "unwind.inc 1.8k", 
                                                  "children": [
                                                    {
                                                      "data": {
                                                        "$area": 376, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_RaiseException 376"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 252, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_Resume 252"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 248, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_Resume_or_Rethrow 248"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 244, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_ForcedUnwind 244"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 236, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_ForcedUnwind_Phase2 236"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 208, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_Backtrace 208"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 192, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_RaiseException_Phase2 192"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 36, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_DeleteException 36"
                                                    }
                                                  ]
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 1600, 
                                                    "$dominant_symbol": "code"
                                                  }, 
                                                  "name": "unwind-dw2-fde-dip.c 1.6k", 
                                                  "children": [
                                                    {
                                                      "data": {
                                                        "$area": 1052, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_IteratePhdrCallback 1.1k"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 452, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "_Unwind_Find_FDE 452"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 96, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "base_from_cb_data 96"
                                                    }
                                                  ]
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 904, 
                                                    "$dominant_symbol": "code"
                                                  }, 
                                                  "name": "unwind-pe.h 904", 
                                                  "children": [
                                                    {
                                                      "data": {
                                                        "$area": 480, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "read_encoded_value_with_base 480"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 128, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "read_sleb128 128"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 120, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "base_of_encoded_value 120"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 96, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "size_of_encoded_value 96"
                                                    }, 
                                                    {
                                                      "data": {
                                                        "$area": 80, 
                                                        "$symbol": "code"
                                                      }, 
                                                      "name": "read_uleb128 80"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }, 
                            {
                              "data": {
                                "$area": 6192, 
                                "$dominant_symbol": "code"
                              }, 
                              "name": "ndk-release-r21 6.2k", 
                              "children": [
                                {
                                  "data": {
                                    "$area": 5872, 
                                    "$dominant_symbol": "code"
                                  }, 
                                  "name": "external 5.9k", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 5760, 
                                        "$dominant_symbol": "code"
                                      }, 
                                      "name": "libcxxabi 5.8k", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 5760, 
                                            "$dominant_symbol": "code"
                                          }, 
                                          "name": "src 5.8k", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 1852, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "cxa_demangle.cpp 1.9k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 1852, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_demangle 1.9k"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 1308, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "cxa_personality.cpp 1.3k", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 892, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_call_unexpected 892"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 416, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__gxx_personality_v0 416"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 816, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "cxa_exception.cpp 816", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 228, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_rethrow 228"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 220, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_end_catch 220"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 148, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_begin_catch 148"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 116, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_throw 116"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 76, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_allocate_exception 76"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_free_exception 28"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 676, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "cxa_guard.cpp 676", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 352, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_guard_acquire 352"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 168, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_guard_release 168"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 156, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_guard_abort 156"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 332, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "cxa_default_handlers.cpp 332", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 288, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "demangling_terminate_handler() 288"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 28, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "demangling_unexpected_handler() 28"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "data"
                                                  }, 
                                                  "name": "__cxa_unexpected_handler 8"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 8, 
                                                    "$symbol": "data"
                                                  }, 
                                                  "name": "__cxa_terminate_handler 8"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 312, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "private_typeinfo.cpp 312", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 312, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__dynamic_cast 312"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 240, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "abort_message.cpp 240", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 240, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "abort_message 240"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 204, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "cxa_exception_storage.cpp 204", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 144, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_get_globals 144"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 60, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_get_globals_fast 60"
                                                }
                                              ]
                                            }, 
                                            {
                                              "data": {
                                                "$area": 20, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "cxa_virtual.cpp 20", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 20, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "__cxa_pure_virtual 20"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }, 
                                    {
                                      "data": {
                                        "$area": 112, 
                                        "$dominant_symbol": "code"
                                      }, 
                                      "name": "libcxx 112", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 112, 
                                            "$dominant_symbol": "code"
                                          }, 
                                          "name": "src 112", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 112, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "new.cpp 112", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 100, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "operator new(unsigned long) 100"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 4, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "operator new[](unsigned long) 4"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 4, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "operator delete(void*) 4"
                                                }, 
                                                {
                                                  "data": {
                                                    "$area": 4, 
                                                    "$symbol": "code"
                                                  }, 
                                                  "name": "operator delete[](void*) 4"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }, 
                                {
                                  "data": {
                                    "$area": 320, 
                                    "$dominant_symbol": "code"
                                  }, 
                                  "name": "out 320", 
                                  "children": [
                                    {
                                      "data": {
                                        "$area": 320, 
                                        "$dominant_symbol": "code"
                                      }, 
                                      "name": "darwin 320", 
                                      "children": [
                                        {
                                          "data": {
                                            "$area": 320, 
                                            "$dominant_symbol": "code"
                                          }, 
                                          "name": "android-ndk-r21d 320", 
                                          "children": [
                                            {
                                              "data": {
                                                "$area": 320, 
                                                "$dominant_symbol": "code"
                                              }, 
                                              "name": "toolchains 320", 
                                              "children": [
                                                {
                                                  "data": {
                                                    "$area": 320, 
                                                    "$dominant_symbol": "code"
                                                  }, 
                                                  "name": "llvm 320", 
                                                  "children": [
                                                    {
                                                      "data": {
                                                        "$area": 320, 
                                                        "$dominant_symbol": "code"
                                                      }, 
                                                      "name": "prebuilt 320", 
                                                      "children": [
                                                        {
                                                          "data": {
                                                            "$area": 320, 
                                                            "$dominant_symbol": "code"
                                                          }, 
                                                          "name": "darwin-x86_64 320", 
                                                          "children": [
                                                            {
                                                              "data": {
                                                                "$area": 320, 
                                                                "$dominant_symbol": "code"
                                                              }, 
                                                              "name": "sysroot 320", 
                                                              "children": [
                                                                {
                                                                  "data": {
                                                                    "$area": 320, 
                                                                    "$dominant_symbol": "code"
                                                                  }, 
                                                                  "name": "usr 320", 
                                                                  "children": [
                                                                    {
                                                                      "data": {
                                                                        "$area": 320, 
                                                                        "$dominant_symbol": "code"
                                                                      }, 
                                                                      "name": "include 320", 
                                                                      "children": [
                                                                        {
                                                                          "data": {
                                                                            "$area": 320, 
                                                                            "$dominant_symbol": "code"
                                                                          }, 
                                                                          "name": "bits 320", 
                                                                          "children": [
                                                                            {
                                                                              "data": {
                                                                                "$area": 320, 
                                                                                "$dominant_symbol": "code"
                                                                              }, 
                                                                              "name": "fortify 320", 
                                                                              "children": [
                                                                                {
                                                                                  "data": {
                                                                                    "$area": 320, 
                                                                                    "$dominant_symbol": "code"
                                                                                  }, 
                                                                                  "name": "stdio.h 320", 
                                                                                  "children": [
                                                                                    {
                                                                                      "data": {
                                                                                        "$area": 320, 
                                                                                        "$symbol": "code"
                                                                                      }, 
                                                                                      "name": "snprintf(char*, unsigned long pass_object_size1, char const*, ...) 320"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 47969, 
        "$dominant_symbol": "code"
      }, 
      "name": "utils 48.0k", 
      "children": [
        {
          "data": {
            "$area": 16120, 
            "$dominant_symbol": "code"
          }, 
          "name": "JobSystem 16.1k", 
          "children": [
            {
              "data": {
                "$area": 3124, 
                "$symbol": "code"
              }, 
              "name": "createJob<filament::FColorGrading::FColorGrading(filament::FEngine&, filament::ColorGrading::Builder const&)::$_0>(utils::JobSystem::Job*, filament::FColorGrading::FColorGrading(filament::FEngine&, filament::ColorGrading::Builder const&)::$_0)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 3.1k"
            }, 
            {
              "data": {
                "$area": 2064, 
                "$symbol": "code"
              }, 
              "name": "JobSystem(unsigned long, unsigned long) 2.1k"
            }, 
            {
              "data": {
                "$area": 1096, 
                "$symbol": "code"
              }, 
              "name": "~JobSystem() 1.1k"
            }, 
            {
              "data": {
                "$area": 624, 
                "$symbol": "code"
              }, 
              "name": "emancipate() 624"
            }, 
            {
              "data": {
                "$area": 608, 
                "$symbol": "code"
              }, 
              "name": "adopt() 608"
            }, 
            {
              "data": {
                "$area": 608, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<16ul, 8ul>, std::__ndk1::reference_wrapper<filament::RenderPass::appendCommands(filament::RenderPass::CommandTypeFlags)::$_0 const> >, &utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<16ul, 8ul>, std::__ndk1::reference_wrapper<filament::RenderPass::appendCommands(filament::RenderPass::CommandTypeFlags)::$_0 const> >::parallelWithJobs>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<16ul, 8ul>, std::__ndk1::reference_wrapper<filament::RenderPass::appendCommands(filament::RenderPass::CommandTypeFlags)::$_0 const> >)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 608"
            }, 
            {
              "data": {
                "$area": 596, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, std::__ndk1::reference_wrapper<filament::FView::cullRenderables(utils::JobSystem&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, filament::Frustum const&, unsigned long)::$_3> >, &utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, std::__ndk1::reference_wrapper<filament::FView::cullRenderables(utils::JobSystem&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, filament::Frustum const&, unsigned long)::$_3> >::parallelWithJobs>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, std::__ndk1::reference_wrapper<filament::FView::cullRenderables(utils::JobSystem&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, filament::Frustum const&, unsigned long)::$_3> >)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 596"
            }, 
            {
              "data": {
                "$area": 588, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, utils::jobs::parallel_for<char, utils::jobs::CountSplitter<1ul, 8ul>, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9>(utils::JobSystem&, utils::JobSystem::Job*, char*, unsigned int, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9, utils::jobs::CountSplitter<1ul, 8ul> const&)::{lambda(unsigned int, unsigned int)#1}>, &utils::jobs::parallel_for<char, utils::jobs::CountSplitter<1ul, 8ul>, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9>(utils::JobSystem&, utils::JobSystem::Job*, char*, unsigned int, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9, utils::jobs::CountSplitter<1ul, 8ul> const&)::{lambda(unsigned int, unsigned int)#1}::parallelWithJobs>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, utils::jobs::parallel_for<char, utils::jobs::CountSplitter<1ul, 8ul>, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9>(utils::JobSystem&, utils::JobSystem::Job*, char*, unsigned int, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9, utils::jobs::CountSplitter<1ul, 8ul> const&)::{lambda(unsigned int, unsigned int)#1}>)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 588"
            }, 
            {
              "data": {
                "$area": 560, 
                "$symbol": "code"
              }, 
              "name": "loop(utils::JobSystem::ThreadState*) 560"
            }, 
            {
              "data": {
                "$area": 548, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToOctahedron(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_5> >, &utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToOctahedron(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_5> >::parallelWithJobs>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToOctahedron(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_5> >)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 548"
            }, 
            {
              "data": {
                "$area": 548, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToEquirectangular(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_4> >, &utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToEquirectangular(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_4> >::parallelWithJobs>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToEquirectangular(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_4> >)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 548"
            }, 
            {
              "data": {
                "$area": 496, 
                "$symbol": "code"
              }, 
              "name": "execute(utils::JobSystem::ThreadState&) 496"
            }, 
            {
              "data": {
                "$area": 344, 
                "$symbol": "code"
              }, 
              "name": "create(utils::JobSystem::Job*, void (*)(void*, utils::JobSystem&, utils::JobSystem::Job*)) 344"
            }, 
            {
              "data": {
                "$area": 328, 
                "$symbol": "code"
              }, 
              "name": "getState() 328"
            }, 
            {
              "data": {
                "$area": 296, 
                "$symbol": "code"
              }, 
              "name": "waitAndRelease(utils::JobSystem::Job*&) 296"
            }, 
            {
              "data": {
                "$area": 276, 
                "$symbol": "code"
              }, 
              "name": "allocateJob() 276"
            }, 
            {
              "data": {
                "$area": 264, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "Job* utils 264", 
              "children": [
                {
                  "data": {
                    "$area": 264, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "jobs 264", 
                  "children": [
                    {
                      "data": {
                        "$area": 264, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "createJob<void (filament::FEngine::*)(), filament::FEngine*, , void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FEngine::*&&)(), filament::FEngine*&&) 264"
                    }
                  ]
                }
              ]
            }, 
            {
              "data": {
                "$area": 248, 
                "$symbol": "code"
              }, 
              "name": "finish(utils::JobSystem::Job*) 248"
            }, 
            {
              "data": {
                "$area": 240, 
                "$symbol": "code"
              }, 
              "name": "steal(utils::JobSystem::ThreadState&) 240"
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "runAndRetain(utils::JobSystem::Job*, unsigned int) 236"
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "runAndWait(utils::JobSystem::Job*&) 236"
            }, 
            {
              "data": {
                "$area": 220, 
                "$symbol": "code"
              }, 
              "name": "decRef(utils::JobSystem::Job const*) 220"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "code"
              }, 
              "name": "run(utils::JobSystem::Job*&, unsigned int) 216"
            }, 
            {
              "data": {
                "$area": 160, 
                "$symbol": "weak symbol"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}::operator()(utils::JobSystem&, utils::JobSystem::Job*) const::{lambda(unsigned long, unsigned long)#1}>::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}::operator()(utils::JobSystem&, utils::JobSystem::Job*) const::{lambda(unsigned long, unsigned long)#1}>::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1})::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 160"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "wake() 124"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "signal() 124"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "requestExit() 112"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "weak symbol"
              }, 
              "name": "createJob<utils::jobs::createJob<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, filament::FTransformManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FTransformManager::*&&)(utils::EntityManager&) noexcept, filament::FTransformManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data, &(utils::jobs::createJob<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, filament::FTransformManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FTransformManager::*&&)(utils::EntityManager&) noexcept, filament::FTransformManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::utils::jobs::createJob<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, filament::FTransformManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FTransformManager::*&&)(utils::EntityManager&) noexcept, filament::FTransformManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data::gob(utils::JobSystem&, utils::JobSystem::Job*))>(utils::JobSystem::Job*, utils::jobs::createJob<void (filament::FTransformManager::*)(utils::EntityManager&) noexcept, filament::FTransformManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FTransformManager::*&&)(utils::EntityManager&) noexcept, filament::FTransformManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 104"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "weak symbol"
              }, 
              "name": "createJob<utils::jobs::createJob<void (filament::FEngine::*)(), filament::FEngine*, , void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FEngine::*&&)(), filament::FEngine*&&)::Data, &(utils::jobs::createJob<void (filament::FEngine::*)(), filament::FEngine*, , void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FEngine::*&&)(), filament::FEngine*&&)::utils::jobs::createJob<void (filament::FEngine::*)(), filament::FEngine*, , void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FEngine::*&&)(), filament::FEngine*&&)::Data::gob(utils::JobSystem&, utils::JobSystem::Job*))>(utils::JobSystem::Job*, utils::jobs::createJob<void (filament::FEngine::*)(), filament::FEngine*, , void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FEngine::*&&)(), filament::FEngine*&&)::Data)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 104"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "weak symbol"
              }, 
              "name": "createJob<utils::jobs::createJob<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, filament::FCameraManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FCameraManager::*&&)(utils::EntityManager&) noexcept, filament::FCameraManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data, &(utils::jobs::createJob<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, filament::FCameraManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FCameraManager::*&&)(utils::EntityManager&) noexcept, filament::FCameraManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::utils::jobs::createJob<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, filament::FCameraManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FCameraManager::*&&)(utils::EntityManager&) noexcept, filament::FCameraManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data::gob(utils::JobSystem&, utils::JobSystem::Job*))>(utils::JobSystem::Job*, utils::jobs::createJob<void (filament::FCameraManager::*)(utils::EntityManager&) noexcept, filament::FCameraManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FCameraManager::*&&)(utils::EntityManager&) noexcept, filament::FCameraManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 104"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "weak symbol"
              }, 
              "name": "createJob<utils::jobs::createJob<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, filament::FLightManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FLightManager::*&&)(utils::EntityManager&) noexcept, filament::FLightManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data, &(utils::jobs::createJob<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, filament::FLightManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FLightManager::*&&)(utils::EntityManager&) noexcept, filament::FLightManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::utils::jobs::createJob<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, filament::FLightManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FLightManager::*&&)(utils::EntityManager&) noexcept, filament::FLightManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data::gob(utils::JobSystem&, utils::JobSystem::Job*))>(utils::JobSystem::Job*, utils::jobs::createJob<void (filament::FLightManager::*)(utils::EntityManager&) noexcept, filament::FLightManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FLightManager::*&&)(utils::EntityManager&) noexcept, filament::FLightManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 104"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "setThreadAffinityById(unsigned long) 104"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::createJob<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, unsigned long, unsigned long&, unsigned long const&>(utils::JobSystem&, utils::JobSystem::Job*, std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>&&, unsigned long&&, unsigned long&, unsigned long const&)::Data, &(utils::jobs::createJob<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, unsigned long, unsigned long&, unsigned long const&>(utils::JobSystem&, utils::JobSystem::Job*, std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>&&, unsigned long&&, unsigned long&, unsigned long const&)::utils::jobs::createJob<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, unsigned long, unsigned long&, unsigned long const&>(utils::JobSystem&, utils::JobSystem::Job*, std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>&&, unsigned long&&, unsigned long&, unsigned long const&)::Data::gob(utils::JobSystem&, utils::JobSystem::Job*))>(utils::JobSystem::Job*, utils::jobs::createJob<std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>, unsigned long, unsigned long&, unsigned long const&>(utils::JobSystem&, utils::JobSystem::Job*, std::__ndk1::reference_wrapper<filament::Froxelizer::froxelizeLoop(filament::FEngine&, filament::CameraInfo const&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> const&)::$_0 const>&&, unsigned long&&, unsigned long&, unsigned long const&)::Data)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 104"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "weak symbol"
              }, 
              "name": "createJob<utils::jobs::createJob<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, filament::FRenderableManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FRenderableManager::*&&)(utils::EntityManager&) noexcept, filament::FRenderableManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data, &(utils::jobs::createJob<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, filament::FRenderableManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FRenderableManager::*&&)(utils::EntityManager&) noexcept, filament::FRenderableManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::utils::jobs::createJob<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, filament::FRenderableManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FRenderableManager::*&&)(utils::EntityManager&) noexcept, filament::FRenderableManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data::gob(utils::JobSystem&, utils::JobSystem::Job*))>(utils::JobSystem::Job*, utils::jobs::createJob<void (filament::FRenderableManager::*)(utils::EntityManager&) noexcept, filament::FRenderableManager*, std::__ndk1::reference_wrapper<utils::EntityManager>&, void>(utils::JobSystem&, utils::JobSystem::Job*, void (filament::FRenderableManager::*&&)(utils::EntityManager&) noexcept, filament::FRenderableManager*&&, std::__ndk1::reference_wrapper<utils::EntityManager>&)::Data)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 104"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "code"
              }, 
              "name": "wait(std::__ndk1::unique_lock<utils::Mutex>&) 72"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "setThreadPriority(utils::JobSystem::Priority) 56"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<16ul, 8ul>, std::__ndk1::reference_wrapper<filament::RenderPass::appendCommands(filament::RenderPass::CommandTypeFlags)::$_0 const> >::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<16ul, 8ul>, std::__ndk1::reference_wrapper<filament::RenderPass::appendCommands(filament::RenderPass::CommandTypeFlags)::$_0 const> >::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1})::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 48"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, std::__ndk1::reference_wrapper<filament::FView::cullRenderables(utils::JobSystem&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, filament::Frustum const&, unsigned long)::$_3> >::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, std::__ndk1::reference_wrapper<filament::FView::cullRenderables(utils::JobSystem&, utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int>&, filament::Frustum const&, unsigned long)::$_3> >::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1})::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 44"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "setThreadName(char const*) 44"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "cancel(utils::JobSystem::Job*&) 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "code"
              }, 
              "name": "release(utils::JobSystem::Job*&) 40"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToOctahedron(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_5> >::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToOctahedron(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_5> >::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1})::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 36"
            }, 
            {
              "data": {
                "$area": 36, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToEquirectangular(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_4> >::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, std::__ndk1::reference_wrapper<filament::ibl::CubemapUtils::cubemapToEquirectangular(utils::JobSystem&, filament::ibl::Image&, filament::ibl::Cubemap const&)::$_4> >::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1})::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 36"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "retain(utils::JobSystem::Job*) 28"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, utils::jobs::parallel_for<char, utils::jobs::CountSplitter<1ul, 8ul>, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9>(utils::JobSystem&, utils::JobSystem::Job*, char*, unsigned int, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9, utils::jobs::CountSplitter<1ul, 8ul> const&)::{lambda(unsigned int, unsigned int)#1}>::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<1ul, 8ul>, utils::jobs::parallel_for<char, utils::jobs::CountSplitter<1ul, 8ul>, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9>(utils::JobSystem&, utils::JobSystem::Job*, char*, unsigned int, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9, utils::jobs::CountSplitter<1ul, 8ul> const&)::{lambda(unsigned int, unsigned int)#1}>::parallel(utils::JobSystem&, utils::JobSystem::Job*)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1})::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 28"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "createJob<filament::FView::prepare(filament::FEngine&, filament::backend::CommandStream&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::Viewport const&, filament::math::details::TVec4<float> const&)::$_0>(utils::JobSystem::Job*, filament::FView::prepare(filament::FEngine&, filament::backend::CommandStream&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::Viewport const&, filament::math::details::TVec4<float> const&)::$_0)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 24"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "createJob<filament::FRenderer::renderJob(utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::FView&)::$_0>(utils::JobSystem::Job*, filament::FRenderer::renderJob(utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::FView&)::$_0)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "weak symbol"
              }, 
              "name": "createJob<utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}::operator()(utils::JobSystem&, utils::JobSystem::Job*) const::{lambda(unsigned long, unsigned long)#1}>, &{lambda(unsigned long, unsigned long)#1}::parallelWithJobs>(utils::JobSystem::Job*, utils::jobs::details::ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}::operator()(utils::JobSystem&, utils::JobSystem::Job*) const::{lambda(unsigned long, unsigned long)#1}>)::stub::call(void*, utils::JobSystem&, utils::JobSystem::Job*) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 3878, 
            "$dominant_symbol": "code"
          }, 
          "name": "io 3.9k", 
          "children": [
            {
              "data": {
                "$area": 3504, 
                "$dominant_symbol": "code"
              }, 
              "name": "ostream 3.5k", 
              "children": [
                {
                  "data": {
                    "$area": 256, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "Buffer 256", 
                  "children": [
                    {
                      "data": {
                        "$area": 112, 
                        "$symbol": "code"
                      }, 
                      "name": "Buffer() 112"
                    }, 
                    {
                      "data": {
                        "$area": 72, 
                        "$symbol": "code"
                      }, 
                      "name": "resize(unsigned long) 72"
                    }, 
                    {
                      "data": {
                        "$area": 40, 
                        "$symbol": "code"
                      }, 
                      "name": "advance(long) 40"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "~Buffer() 16"
                    }, 
                    {
                      "data": {
                        "$area": 16, 
                        "$symbol": "code"
                      }, 
                      "name": "reset() 16"
                    }
                  ]
                }, 
                {
                  "data": {
                    "$area": 240, 
                    "$symbol": "code"
                  }, 
                  "name": "getFormat(utils::io::ostream::type) const 240"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(int) 200"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(unsigned short) 200"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(unsigned long long) 200"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(long) 200"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(unsigned long) 200"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(long long) 200"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(short) 200"
                }, 
                {
                  "data": {
                    "$area": 200, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(unsigned int) 200"
                }, 
                {
                  "data": {
                    "$area": 168, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(unsigned char const*) 168"
                }, 
                {
                  "data": {
                    "$area": 168, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(long double) 168"
                }, 
                {
                  "data": {
                    "$area": 168, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(char const*) 168"
                }, 
                {
                  "data": {
                    "$area": 168, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(float) 168"
                }, 
                {
                  "data": {
                    "$area": 168, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(void const*) 168"
                }, 
                {
                  "data": {
                    "$area": 164, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(double) 164"
                }, 
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(unsigned char) 136"
                }, 
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(char) 136"
                }, 
                {
                  "data": {
                    "$area": 60, 
                    "$symbol": "code"
                  }, 
                  "name": "growBufferIfNeeded(unsigned long) 60"
                }, 
                {
                  "data": {
                    "$area": 44, 
                    "$symbol": "code"
                  }, 
                  "name": "~ostream() 44"
                }, 
                {
                  "data": {
                    "$area": 12, 
                    "$symbol": "code"
                  }, 
                  "name": "hex() 12"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "operator<<(bool) 8"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "dec() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 212, 
                "$dominant_symbol": "code"
              }, 
              "name": "LogStream 212", 
              "children": [
                {
                  "data": {
                    "$area": 176, 
                    "$symbol": "code"
                  }, 
                  "name": "flush() 176"
                }, 
                {
                  "data": {
                    "$area": 36, 
                    "$symbol": "code"
                  }, 
                  "name": "~LogStream() 36"
                }
              ]
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": "LogStream [vtable] 40"
            }, 
            {
              "data": {
                "$area": 40, 
                "$symbol": "data"
              }, 
              "name": "ostream [vtable] 40"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": "LogStream [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 22, 
                "$symbol": "read-only data"
              }, 
              "name": "LogStream [typeinfo name] 22"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "read-only data"
              }, 
              "name": "ostream [typeinfo name] 20"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "data"
              }, 
              "name": "ostream [typeinfo] 16"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2540, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "jobs 2.5k", 
          "children": [
            {
              "data": {
                "$area": 1632, 
                "$symbol": "code"
              }, 
              "name": "parallel_for<char, utils::jobs::CountSplitter<1ul, 8ul>, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9>(utils::JobSystem&, utils::JobSystem::Job*, char*, unsigned int, filament::ibl::CubemapIBL::DFG(utils::JobSystem&, filament::ibl::Image&, bool, bool)::$_9, utils::jobs::CountSplitter<1ul, 8ul> const&)::{lambda(unsigned int, unsigned int)#1}::operator()(unsigned int, unsigned int) const 1.6k"
            }, 
            {
              "data": {
                "$area": 908, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "details 908", 
              "children": [
                {
                  "data": {
                    "$area": 908, 
                    "$dominant_symbol": "weak symbol"
                  }, 
                  "name": "ParallelForJobData<utils::jobs::CountSplitter<64ul, 8ul>, filament::ibl::CubemapUtils::process<filament::ibl::CubemapUtils::EmptyState>(filament::ibl::Cubemap&, utils::JobSystem&, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&, unsigned long, filament::ibl::Cubemap::Face, filament::math::details::TVec3<float>*, unsigned long)>, std::__ndk1::function<void (filament::ibl::CubemapUtils::EmptyState&)>, filament::ibl::CubemapUtils::EmptyState const&)::{lambda(utils::JobSystem&, utils::JobSystem::Job*)#1}::operator()(utils::JobSystem&, utils::JobSystem::Job*) const::{lambda(unsigned long, unsigned long)#1}> 908", 
                  "children": [
                    {
                      "data": {
                        "$area": 496, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "parallelWithJobs(utils::JobSystem&, utils::JobSystem::Job*) 496"
                    }, 
                    {
                      "data": {
                        "$area": 412, 
                        "$symbol": "weak symbol"
                      }, 
                      "name": "parallel(utils::JobSystem&, utils::JobSystem::Job*) 412"
                    }
                  ]
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 2324, 
            "$dominant_symbol": "code"
          }, 
          "name": "details 2.3k", 
          "children": [
            {
              "data": {
                "$area": 1848, 
                "$dominant_symbol": "code"
              }, 
              "name": "Systrace 1.8k", 
              "children": [
                {
                  "data": {
                    "$area": 280, 
                    "$symbol": "code"
                  }, 
                  "name": "async_end_body(int, int, char const*, int) 280"
                }, 
                {
                  "data": {
                    "$area": 280, 
                    "$symbol": "code"
                  }, 
                  "name": "async_begin_body(int, int, char const*, int) 280"
                }, 
                {
                  "data": {
                    "$area": 280, 
                    "$symbol": "code"
                  }, 
                  "name": "int_body(int, int, char const*, int) 280"
                }, 
                {
                  "data": {
                    "$area": 280, 
                    "$symbol": "code"
                  }, 
                  "name": "int64_body(int, int, char const*, long) 280"
                }, 
                {
                  "data": {
                    "$area": 216, 
                    "$symbol": "code"
                  }, 
                  "name": "init_once() 216"
                }, 
                {
                  "data": {
                    "$area": 136, 
                    "$symbol": "code"
                  }, 
                  "name": "init(unsigned int) 136"
                }, 
                {
                  "data": {
                    "$area": 108, 
                    "$symbol": "code"
                  }, 
                  "name": "enable(unsigned int) 108"
                }, 
                {
                  "data": {
                    "$area": 96, 
                    "$symbol": "code"
                  }, 
                  "name": "begin_body(int, int, char const*) 96"
                }, 
                {
                  "data": {
                    "$area": 96, 
                    "$symbol": "code"
                  }, 
                  "name": "isTracingEnabled(unsigned int) 96"
                }, 
                {
                  "data": {
                    "$area": 40, 
                    "$symbol": "code"
                  }, 
                  "name": "setup() 40"
                }, 
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "disable(unsigned int) 32"
                }, 
                {
                  "data": {
                    "$area": 4, 
                    "$symbol": "data"
                  }, 
                  "name": "sMarkerFd 4"
                }
              ]
            }, 
            {
              "data": {
                "$area": 404, 
                "$symbol": "code"
              }, 
              "name": "logAndPanic(char const*, char const*, int, char const*, ...) 404"
            }, 
            {
              "data": {
                "$area": 72, 
                "$dominant_symbol": "code"
              }, 
              "name": "ScopedTrace 72", 
              "children": [
                {
                  "data": {
                    "$area": 72, 
                    "$symbol": "code"
                  }, 
                  "name": "~ScopedTrace() 72"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 2038, 
            "$dominant_symbol": "code"
          }, 
          "name": "TPanic<utils::PostconditionPanic> 2.0k", 
          "children": [
            {
              "data": {
                "$area": 624, 
                "$symbol": "code"
              }, 
              "name": "panic(char const*, char const*, int, char const*, ...) 624"
            }, 
            {
              "data": {
                "$area": 496, 
                "$symbol": "code"
              }, 
              "name": "TPanic(utils::TPanic<utils::PostconditionPanic> const&) 496"
            }, 
            {
              "data": {
                "$area": 328, 
                "$symbol": "code"
              }, 
              "name": "buildMessage() 328"
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "~TPanic() 236"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "log() const 148"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 80"
            }, 
            {
              "data": {
                "$area": 42, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 42"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "what() const 28"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getLine() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getCallStack() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getFile() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getFunction() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 2037, 
            "$dominant_symbol": "code"
          }, 
          "name": "TPanic<utils::PreconditionPanic> 2.0k", 
          "children": [
            {
              "data": {
                "$area": 624, 
                "$symbol": "code"
              }, 
              "name": "panic(char const*, char const*, int, char const*, ...) 624"
            }, 
            {
              "data": {
                "$area": 496, 
                "$symbol": "code"
              }, 
              "name": "TPanic(utils::TPanic<utils::PreconditionPanic> const&) 496"
            }, 
            {
              "data": {
                "$area": 328, 
                "$symbol": "code"
              }, 
              "name": "buildMessage() 328"
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "~TPanic() 236"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "code"
              }, 
              "name": "log() const 148"
            }, 
            {
              "data": {
                "$area": 80, 
                "$symbol": "data"
              }, 
              "name": " [vtable] 80"
            }, 
            {
              "data": {
                "$area": 41, 
                "$symbol": "read-only data"
              }, 
              "name": " [typeinfo name] 41"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "code"
              }, 
              "name": "what() const 28"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "data"
              }, 
              "name": " [typeinfo] 24"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getLine() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getCallStack() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getFile() const 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getFunction() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1836, 
            "$dominant_symbol": "code"
          }, 
          "name": "EntityManagerImpl 1.8k", 
          "children": [
            {
              "data": {
                "$area": 484, 
                "$symbol": "code"
              }, 
              "name": "destroy(unsigned long, utils::Entity*) 484"
            }, 
            {
              "data": {
                "$area": 436, 
                "$symbol": "code"
              }, 
              "name": "EntityManagerImpl() 436"
            }, 
            {
              "data": {
                "$area": 376, 
                "$symbol": "code"
              }, 
              "name": "getListeners() const 376"
            }, 
            {
              "data": {
                "$area": 336, 
                "$symbol": "code"
              }, 
              "name": "create(unsigned long, utils::Entity*) 336"
            }, 
            {
              "data": {
                "$area": 204, 
                "$symbol": "code"
              }, 
              "name": "unregisterListener(utils::EntityManager::Listener*) 204"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1388, 
            "$dominant_symbol": "code"
          }, 
          "name": "CString 1.4k", 
          "children": [
            {
              "data": {
                "$area": 732, 
                "$symbol": "code"
              }, 
              "name": "replace(unsigned int, unsigned int, utils::CString const&) 732"
            }, 
            {
              "data": {
                "$area": 368, 
                "$symbol": "code"
              }, 
              "name": "CString(char const*, unsigned long) 368"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "code"
              }, 
              "name": "CString(char const*) 128"
            }, 
            {
              "data": {
                "$area": 92, 
                "$symbol": "code"
              }, 
              "name": "operator=(utils::CString const&) 92"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "CString(utils::CString const&) 48"
            }, 
            {
              "data": {
                "$area": 20, 
                "$symbol": "code"
              }, 
              "name": "~CString() 20"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1356, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "SingleInstanceComponentManager<filament::math::details::TMat44<float>, filament::math::details::TMat44<float>, utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false> > 1.4k", 
          "children": [
            {
              "data": {
                "$area": 680, 
                "$symbol": "weak symbol"
              }, 
              "name": "removeComponent(utils::Entity) 680"
            }, 
            {
              "data": {
                "$area": 212, 
                "$symbol": "weak symbol"
              }, 
              "name": "addComponent(utils::Entity) 212"
            }, 
            {
              "data": {
                "$area": 192, 
                "$symbol": "weak symbol"
              }, 
              "name": "swap(unsigned int, unsigned int) 192"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "weak symbol"
              }, 
              "name": "getInstance(utils::Entity) const 136"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "weak symbol"
              }, 
              "name": "SingleInstanceComponentManager() 136"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1288, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "SingleInstanceComponentManager<filament::FLightManager::LightType, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::FLightManager::ShadowParams, filament::FLightManager::SpotParams, float, float, float, float, float> 1.3k", 
          "children": [
            {
              "data": {
                "$area": 804, 
                "$symbol": "weak symbol"
              }, 
              "name": "removeComponent(utils::Entity) 804"
            }, 
            {
              "data": {
                "$area": 212, 
                "$symbol": "weak symbol"
              }, 
              "name": "addComponent(utils::Entity) 212"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "weak symbol"
              }, 
              "name": "getInstance(utils::Entity) const 136"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "weak symbol"
              }, 
              "name": "SingleInstanceComponentManager() 136"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1288, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "SingleInstanceComponentManager<filament::Box, unsigned char, filament::math::details::TVec4<float>, filament::FRenderableManager::Visibility, utils::Slice<filament::FRenderPrimitive, unsigned int>, std::__ndk1::unique_ptr<filament::FRenderableManager::Bones, std::__ndk1::default_delete<filament::FRenderableManager::Bones> > > 1.3k", 
          "children": [
            {
              "data": {
                "$area": 804, 
                "$symbol": "weak symbol"
              }, 
              "name": "removeComponent(utils::Entity) 804"
            }, 
            {
              "data": {
                "$area": 212, 
                "$symbol": "weak symbol"
              }, 
              "name": "addComponent(utils::Entity) 212"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "weak symbol"
              }, 
              "name": "getInstance(utils::Entity) const 136"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "weak symbol"
              }, 
              "name": "SingleInstanceComponentManager() 136"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1232, 
            "$dominant_symbol": "code"
          }, 
          "name": "Profiler 1.2k", 
          "children": [
            {
              "data": {
                "$area": 776, 
                "$symbol": "code"
              }, 
              "name": "resetEvents(unsigned int) 776"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "code"
              }, 
              "name": "readCounters() 216"
            }, 
            {
              "data": {
                "$area": 144, 
                "$symbol": "code"
              }, 
              "name": "~Profiler() 144"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "Profiler(unsigned int) 48"
            }, 
            {
              "data": {
                "$area": 48, 
                "$symbol": "code"
              }, 
              "name": "Profiler() 48"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1048, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "SingleInstanceComponentManager<filament::FCamera*> 1.0k", 
          "children": [
            {
              "data": {
                "$area": 572, 
                "$symbol": "weak symbol"
              }, 
              "name": "removeComponent(utils::Entity) 572"
            }, 
            {
              "data": {
                "$area": 212, 
                "$symbol": "weak symbol"
              }, 
              "name": "addComponent(utils::Entity) 212"
            }, 
            {
              "data": {
                "$area": 136, 
                "$symbol": "weak symbol"
              }, 
              "name": "getInstance(utils::Entity) const 136"
            }, 
            {
              "data": {
                "$area": 128, 
                "$symbol": "weak symbol"
              }, 
              "name": "SingleInstanceComponentManager() 128"
            }
          ]
        }, 
        {
          "data": {
            "$area": 828, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::Box, unsigned char, filament::math::details::TVec4<float>, filament::FRenderableManager::Visibility, utils::Slice<filament::FRenderPrimitive, unsigned int>, std::__ndk1::unique_ptr<filament::FRenderableManager::Bones, std::__ndk1::default_delete<filament::FRenderableManager::Bones> >, utils::Entity> 828", 
          "children": [
            {
              "data": {
                "$area": 272, 
                "$symbol": "weak symbol"
              }, 
              "name": "move_each(void*, unsigned long) 272"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "weak symbol"
              }, 
              "name": "setCapacity(unsigned long) 216"
            }, 
            {
              "data": {
                "$area": 208, 
                "$symbol": "weak symbol"
              }, 
              "name": "resize(unsigned long) 208"
            }, 
            {
              "data": {
                "$area": 132, 
                "$symbol": "weak symbol"
              }, 
              "name": "~StructureOfArraysBase() 132"
            }
          ]
        }, 
        {
          "data": {
            "$area": 796, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo> 796", 
          "children": [
            {
              "data": {
                "$area": 328, 
                "$symbol": "weak symbol"
              }, 
              "name": "move_each(void*, unsigned long) 328"
            }, 
            {
              "data": {
                "$area": 252, 
                "$symbol": "weak symbol"
              }, 
              "name": "resize(unsigned long) 252"
            }, 
            {
              "data": {
                "$area": 216, 
                "$symbol": "weak symbol"
              }, 
              "name": "setCapacity(unsigned long) 216"
            }
          ]
        }, 
        {
          "data": {
            "$area": 760, 
            "$dominant_symbol": "code"
          }, 
          "name": "CountDownLatch 760", 
          "children": [
            {
              "data": {
                "$area": 240, 
                "$symbol": "code"
              }, 
              "name": "latch() 240"
            }, 
            {
              "data": {
                "$area": 220, 
                "$symbol": "code"
              }, 
              "name": "reset(unsigned long) 220"
            }, 
            {
              "data": {
                "$area": 164, 
                "$symbol": "code"
              }, 
              "name": "await() 164"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "getCount() const 112"
            }, 
            {
              "data": {
                "$area": 24, 
                "$symbol": "code"
              }, 
              "name": "CountDownLatch(unsigned long) 24"
            }
          ]
        }, 
        {
          "data": {
            "$area": 736, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::FLightManager::LightType, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::math::details::TVec3<float>, filament::FLightManager::ShadowParams, filament::FLightManager::SpotParams, float, float, float, float, float, utils::Entity> 736", 
          "children": [
            {
              "data": {
                "$area": 344, 
                "$symbol": "weak symbol"
              }, 
              "name": "move_each(void*, unsigned long) 344"
            }, 
            {
              "data": {
                "$area": 236, 
                "$symbol": "weak symbol"
              }, 
              "name": "setCapacity(unsigned long) 236"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "weak symbol"
              }, 
              "name": "resize(unsigned long) 112"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "weak symbol"
              }, 
              "name": "~StructureOfArraysBase() 44"
            }
          ]
        }, 
        {
          "data": {
            "$area": 572, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, utils::EntityInstance<filament::RenderableManager, false>, filament::math::details::TMat44<float>, bool, filament::FRenderableManager::Visibility, filament::backend::Handle<filament::backend::HwUniformBuffer>, filament::math::details::TVec3<float>, unsigned char, filament::math::details::TVec4<float>, unsigned char, filament::math::details::TVec3<float>, utils::Slice<filament::FRenderPrimitive, unsigned int>, unsigned int> 572", 
          "children": [
            {
              "data": {
                "$area": 344, 
                "$symbol": "weak symbol"
              }, 
              "name": "move_each(void*, unsigned long) 344"
            }, 
            {
              "data": {
                "$area": 228, 
                "$symbol": "weak symbol"
              }, 
              "name": "setCapacity(unsigned long) 228"
            }
          ]
        }, 
        {
          "data": {
            "$area": 532, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TMat44<float>, filament::math::details::TMat44<float>, utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>, utils::EntityInstance<filament::TransformManager, false>, utils::Entity> 532", 
          "children": [
            {
              "data": {
                "$area": 376, 
                "$symbol": "weak symbol"
              }, 
              "name": "setCapacity(unsigned long) 376"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "weak symbol"
              }, 
              "name": "resize(unsigned long) 112"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "weak symbol"
              }, 
              "name": "~StructureOfArraysBase() 44"
            }
          ]
        }, 
        {
          "data": {
            "$area": 520, 
            "$dominant_symbol": "code"
          }, 
          "name": "TrackingPolicy 520", 
          "children": [
            {
              "data": {
                "$area": 420, 
                "$dominant_symbol": "code"
              }, 
              "name": "HighWatermark 420", 
              "children": [
                {
                  "data": {
                    "$area": 352, 
                    "$symbol": "code"
                  }, 
                  "name": "~HighWatermark() 352"
                }, 
                {
                  "data": {
                    "$area": 28, 
                    "$symbol": "code"
                  }, 
                  "name": "onAlloc(void*, unsigned long, unsigned long, unsigned long) 28"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "onFree(void*, unsigned long) 16"
                }, 
                {
                  "data": {
                    "$area": 16, 
                    "$symbol": "code"
                  }, 
                  "name": "onRewind(void const*) 16"
                }, 
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "onReset() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 100, 
                "$dominant_symbol": "code"
              }, 
              "name": "Debug 100", 
              "children": [
                {
                  "data": {
                    "$area": 32, 
                    "$symbol": "code"
                  }, 
                  "name": "onRewind(void*) 32"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "onAlloc(void*, unsigned long, unsigned long, unsigned long) 24"
                }, 
                {
                  "data": {
                    "$area": 24, 
                    "$symbol": "code"
                  }, 
                  "name": "onFree(void*, unsigned long) 24"
                }, 
                {
                  "data": {
                    "$area": 20, 
                    "$symbol": "code"
                  }, 
                  "name": "onReset() 20"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 512, 
            "$dominant_symbol": "code"
          }, 
          "name": "FreeList 512", 
          "children": [
            {
              "data": {
                "$area": 344, 
                "$symbol": "code"
              }, 
              "name": "FreeList(void*, void*, unsigned long, unsigned long, unsigned long) 344"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "init(void*, void*, unsigned long, unsigned long, unsigned long) 168"
            }
          ]
        }, 
        {
          "data": {
            "$area": 480, 
            "$dominant_symbol": "code"
          }, 
          "name": "AtomicFreeList 480", 
          "children": [
            {
              "data": {
                "$area": 480, 
                "$symbol": "code"
              }, 
              "name": "AtomicFreeList(void*, void*, unsigned long, unsigned long, unsigned long) 480"
            }
          ]
        }, 
        {
          "data": {
            "$area": 448, 
            "$dominant_symbol": "code"
          }, 
          "name": "EntityManager 448", 
          "children": [
            {
              "data": {
                "$area": 152, 
                "$symbol": "code"
              }, 
              "name": "registerListener(utils::EntityManager::Listener*) 152"
            }, 
            {
              "data": {
                "$area": 140, 
                "$symbol": "code"
              }, 
              "name": "get() 140"
            }, 
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "EntityManager() 104"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "~EntityManager() 32"
            }, 
            {
              "data": {
                "$area": 8, 
                "$dominant_symbol": "code"
              }, 
              "name": "Listener 8", 
              "children": [
                {
                  "data": {
                    "$area": 8, 
                    "$symbol": "code"
                  }, 
                  "name": "~Listener() 8"
                }
              ]
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "create(unsigned long, utils::Entity*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "destroy(unsigned long, utils::Entity*) 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "unregisterListener(utils::EntityManager::Listener*) 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 392, 
            "$symbol": "code"
          }, 
          "name": "ashmem_create_region(char const*, unsigned long) 392"
        }, 
        {
          "data": {
            "$area": 376, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::FCamera*, utils::Entity> 376", 
          "children": [
            {
              "data": {
                "$area": 184, 
                "$symbol": "weak symbol"
              }, 
              "name": "setCapacity(unsigned long) 184"
            }, 
            {
              "data": {
                "$area": 148, 
                "$symbol": "weak symbol"
              }, 
              "name": "resize(unsigned long) 148"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "weak symbol"
              }, 
              "name": "~StructureOfArraysBase() 44"
            }
          ]
        }, 
        {
          "data": {
            "$area": 300, 
            "$dominant_symbol": "code"
          }, 
          "name": "Condition 300", 
          "children": [
            {
              "data": {
                "$area": 232, 
                "$symbol": "code"
              }, 
              "name": "wait_until(utils::Mutex*, bool, timespec*) 232"
            }, 
            {
              "data": {
                "$area": 68, 
                "$symbol": "code"
              }, 
              "name": "pulse(int) 68"
            }
          ]
        }, 
        {
          "data": {
            "$area": 240, 
            "$dominant_symbol": "code"
          }, 
          "name": "LinearAllocator 240", 
          "children": [
            {
              "data": {
                "$area": 96, 
                "$symbol": "code"
              }, 
              "name": "LinearAllocator(utils::LinearAllocator&&) 96"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "operator=(utils::LinearAllocator&&) 60"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "swap(utils::LinearAllocator&) 52"
            }, 
            {
              "data": {
                "$area": 32, 
                "$symbol": "code"
              }, 
              "name": "LinearAllocator(void*, void*) 32"
            }
          ]
        }, 
        {
          "data": {
            "$area": 236, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "ThreadLocal<filament::VirtualMachineEnv> 236", 
          "children": [
            {
              "data": {
                "$area": 76, 
                "$symbol": "weak symbol"
              }, 
              "name": "allocRef() 76"
            }, 
            {
              "data": {
                "$area": 72, 
                "$symbol": "weak symbol"
              }, 
              "name": "destructor(void*) 72"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "weak symbol"
              }, 
              "name": "getRef() 60"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "weak symbol"
              }, 
              "name": "~ThreadLocal() 28"
            }
          ]
        }, 
        {
          "data": {
            "$area": 220, 
            "$dominant_symbol": "code"
          }, 
          "name": "CallStack 220", 
          "children": [
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "operator[](unsigned long) const 112"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "operator<(utils::CallStack const&) const 64"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "demangleTypeName(char const*) 12"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "update_gcc(unsigned long) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "unwind(unsigned long) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "update(unsigned long) 8"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "getFrameCount() const 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 200, 
            "$symbol": "code"
          }, 
          "name": "formatString(char const*, std::__va_list) 200"
        }, 
        {
          "data": {
            "$area": 188, 
            "$dominant_symbol": "code"
          }, 
          "name": "Mutex 188", 
          "children": [
            {
              "data": {
                "$area": 136, 
                "$symbol": "code"
              }, 
              "name": "wait() 136"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "wake() 52"
            }
          ]
        }, 
        {
          "data": {
            "$area": 164, 
            "$dominant_symbol": "weak symbol"
          }, 
          "name": "ThreadLocal<filament::ExternalStreamManagerAndroid> 164", 
          "children": [
            {
              "data": {
                "$area": 64, 
                "$symbol": "weak symbol"
              }, 
              "name": "allocRef() 64"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "weak symbol"
              }, 
              "name": "getRef() 60"
            }, 
            {
              "data": {
                "$area": 28, 
                "$symbol": "weak symbol"
              }, 
              "name": "~ThreadLocal() 28"
            }, 
            {
              "data": {
                "$area": 12, 
                "$symbol": "weak symbol"
              }, 
              "name": "destructor(void*) 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 164, 
            "$symbol": "code"
          }, 
          "name": "operator<<(utils::io::ostream&, utils::JobSystem const&) 164"
        }, 
        {
          "data": {
            "$area": 124, 
            "$symbol": "code"
          }, 
          "name": "formatString(char const*, ...) 124"
        }, 
        {
          "data": {
            "$area": 92, 
            "$symbol": "code"
          }, 
          "name": "api_level() 92"
        }, 
        {
          "data": {
            "$area": 80, 
            "$symbol": "data"
          }, 
          "name": "PostconditionPanic [vtable] 80"
        }, 
        {
          "data": {
            "$area": 80, 
            "$symbol": "data"
          }, 
          "name": "PreconditionPanic [vtable] 80"
        }, 
        {
          "data": {
            "$area": 80, 
            "$dominant_symbol": "code"
          }, 
          "name": "ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> > 80", 
          "children": [
            {
              "data": {
                "$area": 80, 
                "$symbol": "code"
              }, 
              "name": "~ArenaScope() 80"
            }
          ]
        }, 
        {
          "data": {
            "$area": 80, 
            "$symbol": "data"
          }, 
          "name": "Panic [vtable] 80"
        }, 
        {
          "data": {
            "$area": 76, 
            "$dominant_symbol": "code"
          }, 
          "name": "PostconditionPanic 76", 
          "children": [
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "~PostconditionPanic() 76"
            }
          ]
        }, 
        {
          "data": {
            "$area": 76, 
            "$dominant_symbol": "code"
          }, 
          "name": "PreconditionPanic 76", 
          "children": [
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "~PreconditionPanic() 76"
            }
          ]
        }, 
        {
          "data": {
            "$area": 52, 
            "$dominant_symbol": "code"
          }, 
          "name": "StaticString 52", 
          "children": [
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "compare(utils::StaticString const&) const 52"
            }
          ]
        }, 
        {
          "data": {
            "$area": 32, 
            "$symbol": "data"
          }, 
          "name": "slog 32"
        }, 
        {
          "data": {
            "$area": 29, 
            "$symbol": "read-only data"
          }, 
          "name": "PostconditionPanic [typeinfo name] 29"
        }, 
        {
          "data": {
            "$area": 28, 
            "$symbol": "read-only data"
          }, 
          "name": "PreconditionPanic [typeinfo name] 28"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "PreconditionPanic [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "PostconditionPanic [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "data"
          }, 
          "name": "Panic [typeinfo] 16"
        }, 
        {
          "data": {
            "$area": 15, 
            "$symbol": "read-only data"
          }, 
          "name": "Panic [typeinfo name] 15"
        }, 
        {
          "data": {
            "$area": 12, 
            "$dominant_symbol": "code"
          }, 
          "name": "Panic 12", 
          "children": [
            {
              "data": {
                "$area": 12, 
                "$symbol": "code"
              }, 
              "name": "~Panic() 12"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "Arena<utils::PoolAllocator<64ul, 64ul, 0ul, utils::AtomicFreeList>, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~Arena() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 4, 
            "$symbol": "code"
          }, 
          "name": "operator<<(utils::io::ostream&, utils::CallStack const&) 4"
        }
      ]
    }, 
    {
      "data": {
        "$area": 18016, 
        "$dominant_symbol": "code"
      }, 
      "name": "tsl 18.0k", 
      "children": [
        {
          "data": {
            "$area": 17400, 
            "$dominant_symbol": "code"
          }, 
          "name": "detail_robin_hash 17.4k", 
          "children": [
            {
              "data": {
                "$area": 2204, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "robin_hash<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial>, tsl::robin_map<utils::StaticString, filament::PostProcessManager::PostProcessMaterial, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, filament::PostProcessManager::PostProcessMaterial, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 2.2k", 
              "children": [
                {
                  "data": {
                    "$area": 728, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "rehash_impl(unsigned long) 728"
                }, 
                {
                  "data": {
                    "$area": 568, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<utils::StaticString> const&, std::__ndk1::equal_to<utils::StaticString> const&, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial> > const&, float) 568"
                }, 
                {
                  "data": {
                    "$area": 464, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "insert_value_impl(unsigned long, short, unsigned int, std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial>&) 464"
                }, 
                {
                  "data": {
                    "$area": 272, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "insert_value_on_rehash(unsigned long, short, unsigned int, std::__ndk1::pair<utils::StaticString, filament::PostProcessManager::PostProcessMaterial>&&) 272"
                }, 
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "grow_on_high_load() 172"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1792, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "robin_hash<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle>, tsl::robin_map<utils::StaticString, filament::FrameGraphHandle, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, filament::FrameGraphHandle, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.8k", 
              "children": [
                {
                  "data": {
                    "$area": 676, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "rehash_impl(unsigned long) 676"
                }, 
                {
                  "data": {
                    "$area": 612, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<utils::StaticString> const&, std::__ndk1::equal_to<utils::StaticString> const&, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> > const&, float) 612"
                }, 
                {
                  "data": {
                    "$area": 332, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "insert_value_impl(unsigned long, short, unsigned int, std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle>&) 332"
                }, 
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "grow_on_high_load() 172"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1604, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*>, tsl::robin_map<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.6k", 
              "children": [
                {
                  "data": {
                    "$area": 588, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 588"
                }, 
                {
                  "data": {
                    "$area": 568, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<std::__ndk1::__thread_id> const&, std::__ndk1::equal_to<std::__ndk1::__thread_id> const&, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> > const&, float) 568"
                }, 
                {
                  "data": {
                    "$area": 276, 
                    "$symbol": "code"
                  }, 
                  "name": "insert_value_impl(unsigned long, short, unsigned int, std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*>&) 276"
                }, 
                {
                  "data": {
                    "$area": 172, 
                    "$symbol": "code"
                  }, 
                  "name": "grow_on_high_load() 172"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1604, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc>, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.6k", 
              "children": [
                {
                  "data": {
                    "$area": 668, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 668"
                }, 
                {
                  "data": {
                    "$area": 612, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<filamat::ChunkType> const&, std::__ndk1::equal_to<filamat::ChunkType> const&, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> > const&, float) 612"
                }, 
                {
                  "data": {
                    "$area": 324, 
                    "$symbol": "code"
                  }, 
                  "name": "insert_value_impl(unsigned long, short, unsigned int, std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc>&) 324"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1596, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<std::__ndk1::pair<utils::StaticString, void*>, tsl::robin_map<utils::StaticString, void*, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, void*, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.6k", 
              "children": [
                {
                  "data": {
                    "$area": 664, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 664"
                }, 
                {
                  "data": {
                    "$area": 612, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<utils::StaticString> const&, std::__ndk1::equal_to<utils::StaticString> const&, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, void*> > const&, float) 612"
                }, 
                {
                  "data": {
                    "$area": 320, 
                    "$symbol": "code"
                  }, 
                  "name": "insert_value_impl(unsigned long, short, unsigned int, std::__ndk1::pair<utils::StaticString, void*>&) 320"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1500, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<std::__ndk1::pair<char const*, unsigned int>, tsl::robin_map<char const*, unsigned int, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<char const*, unsigned int, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, utils::hashCStrings, utils::equalCStrings, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.5k", 
              "children": [
                {
                  "data": {
                    "$area": 624, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 624"
                }, 
                {
                  "data": {
                    "$area": 568, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, utils::hashCStrings const&, utils::equalCStrings const&, std::__ndk1::allocator<std::__ndk1::pair<char const*, unsigned int> > const&, float) 568"
                }, 
                {
                  "data": {
                    "$area": 308, 
                    "$symbol": "code"
                  }, 
                  "name": "insert_value_impl(unsigned long, short, unsigned int, std::__ndk1::pair<char const*, unsigned int>&) 308"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1284, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<void*, tsl::robin_set<void*, std::__ndk1::hash<void*>, std::__ndk1::equal_to<void*>, std::__ndk1::allocator<void*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<void*>, std::__ndk1::equal_to<void*>, std::__ndk1::allocator<void*>, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.3k", 
              "children": [
                {
                  "data": {
                    "$area": 672, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 672"
                }, 
                {
                  "data": {
                    "$area": 612, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<void*> const&, std::__ndk1::equal_to<void*> const&, std::__ndk1::allocator<void*> const&, float) 612"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1284, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<utils::EntityManager::Listener*, tsl::robin_set<utils::EntityManager::Listener*, std::__ndk1::hash<utils::EntityManager::Listener*>, std::__ndk1::equal_to<utils::EntityManager::Listener*>, std::__ndk1::allocator<utils::EntityManager::Listener*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<utils::EntityManager::Listener*>, std::__ndk1::equal_to<utils::EntityManager::Listener*>, std::__ndk1::allocator<utils::EntityManager::Listener*>, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.3k", 
              "children": [
                {
                  "data": {
                    "$area": 672, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 672"
                }, 
                {
                  "data": {
                    "$area": 612, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<utils::EntityManager::Listener*> const&, std::__ndk1::equal_to<utils::EntityManager::Listener*> const&, std::__ndk1::allocator<utils::EntityManager::Listener*> const&, float) 612"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1168, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "robin_hash<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo>, tsl::robin_map<unsigned int, filament::SamplerBindingInfo, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<unsigned int, filament::SamplerBindingInfo, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.2k", 
              "children": [
                {
                  "data": {
                    "$area": 600, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "rehash_impl(unsigned long) 600"
                }, 
                {
                  "data": {
                    "$area": 568, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<unsigned int> const&, std::__ndk1::equal_to<unsigned int> const&, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, filament::SamplerBindingInfo> > const&, float) 568"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1140, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<utils::Entity, tsl::robin_set<utils::Entity, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<utils::Entity>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<utils::Entity>, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.1k", 
              "children": [
                {
                  "data": {
                    "$area": 592, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<utils::Entity> const&, std::__ndk1::equal_to<utils::Entity> const&, std::__ndk1::allocator<utils::Entity> const&, float) 592"
                }, 
                {
                  "data": {
                    "$area": 548, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 548"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1112, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<std::__ndk1::pair<unsigned int, unsigned int>, tsl::robin_map<unsigned int, unsigned int, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<unsigned int, unsigned int, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<unsigned int>, std::__ndk1::equal_to<unsigned int>, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.1k", 
              "children": [
                {
                  "data": {
                    "$area": 568, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<unsigned int> const&, std::__ndk1::equal_to<unsigned int> const&, std::__ndk1::allocator<std::__ndk1::pair<unsigned int, unsigned int> > const&, float) 568"
                }, 
                {
                  "data": {
                    "$area": 544, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 544"
                }
              ]
            }, 
            {
              "data": {
                "$area": 1112, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<std::__ndk1::pair<utils::Entity, unsigned int>, tsl::robin_map<utils::Entity, unsigned int, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::Entity, unsigned int, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 1.1k", 
              "children": [
                {
                  "data": {
                    "$area": 568, 
                    "$symbol": "code"
                  }, 
                  "name": "robin_hash(unsigned long, std::__ndk1::hash<utils::Entity> const&, std::__ndk1::equal_to<utils::Entity> const&, std::__ndk1::allocator<std::__ndk1::pair<utils::Entity, unsigned int> > const&, float) 568"
                }, 
                {
                  "data": {
                    "$area": 544, 
                    "$symbol": "code"
                  }, 
                  "name": "rehash_impl(unsigned long) 544"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 236, 
            "$dominant_symbol": "code"
          }, 
          "name": "robin_map<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*, std::__ndk1::hash<std::__ndk1::__thread_id>, std::__ndk1::equal_to<std::__ndk1::__thread_id>, std::__ndk1::allocator<std::__ndk1::pair<std::__ndk1::__thread_id, utils::JobSystem::ThreadState*> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 236", 
          "children": [
            {
              "data": {
                "$area": 236, 
                "$symbol": "code"
              }, 
              "name": "~robin_map() 236"
            }
          ]
        }, 
        {
          "data": {
            "$area": 192, 
            "$dominant_symbol": "code"
          }, 
          "name": "rh 192", 
          "children": [
            {
              "data": {
                "$area": 192, 
                "$dominant_symbol": "code"
              }, 
              "name": "power_of_two_growth_policy<2ul> 192", 
              "children": [
                {
                  "data": {
                    "$area": 192, 
                    "$symbol": "code"
                  }, 
                  "name": "power_of_two_growth_policy(unsigned long&) 192"
                }
              ]
            }
          ]
        }, 
        {
          "data": {
            "$area": 188, 
            "$dominant_symbol": "code"
          }, 
          "name": "robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 188", 
          "children": [
            {
              "data": {
                "$area": 188, 
                "$dominant_symbol": "code"
              }, 
              "name": "ValueSelect 188", 
              "children": [
                {
                  "data": {
                    "$area": 188, 
                    "$dominant_symbol": "code"
                  }, 
                  "name": "value_type const& tsl 188", 
                  "children": [
                    {
                      "data": {
                        "$area": 188, 
                        "$dominant_symbol": "code"
                      }, 
                      "name": "detail_robin_hash 188", 
                      "children": [
                        {
                          "data": {
                            "$area": 188, 
                            "$dominant_symbol": "code"
                          }, 
                          "name": "robin_hash<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc>, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 188", 
                          "children": [
                            {
                              "data": {
                                "$area": 188, 
                                "$symbol": "code"
                              }, 
                              "name": "at<filamat::ChunkType, tsl::robin_map<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc, std::__ndk1::hash<filamat::ChunkType>, std::__ndk1::equal_to<filamat::ChunkType>, std::__ndk1::allocator<std::__ndk1::pair<filamat::ChunkType, filaflat::ChunkContainer::ChunkDesc> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, (void*)0>(filamat::ChunkType const&, unsigned long) const 188"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 6786, 
        "$dominant_symbol": "code"
      }, 
      "name": "__cxxabiv1 6.8k", 
      "children": [
        {
          "data": {
            "$area": 1904, 
            "$dominant_symbol": "code"
          }, 
          "name": "__vmi_class_type_info 1.9k", 
          "children": [
            {
              "data": {
                "$area": 948, 
                "$symbol": "code"
              }, 
              "name": "search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const 948"
            }, 
            {
              "data": {
                "$area": 572, 
                "$symbol": "code"
              }, 
              "name": "search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const 572"
            }, 
            {
              "data": {
                "$area": 340, 
                "$symbol": "code"
              }, 
              "name": "has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const 340"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "~__vmi_class_type_info() 44"
            }
          ]
        }, 
        {
          "data": {
            "$area": 1564, 
            "$symbol": "code"
          }, 
          "name": "scan_eh_tab(__cxxabiv1::[anonymous namespace]::scan_results&, _Unwind_Action, bool, _Unwind_Exception*, _Unwind_Context*) 1.6k"
        }, 
        {
          "data": {
            "$area": 908, 
            "$dominant_symbol": "code"
          }, 
          "name": "__class_type_info 908", 
          "children": [
            {
              "data": {
                "$area": 288, 
                "$symbol": "code"
              }, 
              "name": "search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const 288"
            }, 
            {
              "data": {
                "$area": 240, 
                "$symbol": "code"
              }, 
              "name": "search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const 240"
            }, 
            {
              "data": {
                "$area": 224, 
                "$symbol": "code"
              }, 
              "name": "can_catch(__cxxabiv1::__shim_type_info const*, void*&) const 224"
            }, 
            {
              "data": {
                "$area": 112, 
                "$symbol": "code"
              }, 
              "name": "has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const 112"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "~__class_type_info() 44"
            }
          ]
        }, 
        {
          "data": {
            "$area": 888, 
            "$dominant_symbol": "code"
          }, 
          "name": "__si_class_type_info 888", 
          "children": [
            {
              "data": {
                "$area": 416, 
                "$symbol": "code"
              }, 
              "name": "search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const 416"
            }, 
            {
              "data": {
                "$area": 304, 
                "$symbol": "code"
              }, 
              "name": "search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const 304"
            }, 
            {
              "data": {
                "$area": 124, 
                "$symbol": "code"
              }, 
              "name": "has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const 124"
            }, 
            {
              "data": {
                "$area": 44, 
                "$symbol": "code"
              }, 
              "name": "~__si_class_type_info() 44"
            }
          ]
        }, 
        {
          "data": {
            "$area": 340, 
            "$symbol": "code"
          }, 
          "name": "readEncodedPointer(unsigned char const**, unsigned char) 340"
        }, 
        {
          "data": {
            "$area": 108, 
            "$symbol": "code"
          }, 
          "name": "__aligned_malloc_with_fallback(unsigned long) 108"
        }, 
        {
          "data": {
            "$area": 104, 
            "$dominant_symbol": "code"
          }, 
          "name": "[anonymous namespace] 104", 
          "children": [
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "destruct_(void*) 52"
            }, 
            {
              "data": {
                "$area": 52, 
                "$symbol": "code"
              }, 
              "name": "construct_() 52"
            }
          ]
        }, 
        {
          "data": {
            "$area": 96, 
            "$symbol": "code"
          }, 
          "name": "exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Exception*) 96"
        }, 
        {
          "data": {
            "$area": 92, 
            "$symbol": "code"
          }, 
          "name": "__calloc_with_fallback(unsigned long, unsigned long) 92"
        }, 
        {
          "data": {
            "$area": 80, 
            "$symbol": "data"
          }, 
          "name": "__vmi_class_type_info [vtable] 80"
        }, 
        {
          "data": {
            "$area": 80, 
            "$symbol": "data"
          }, 
          "name": "__si_class_type_info [vtable] 80"
        }, 
        {
          "data": {
            "$area": 80, 
            "$symbol": "data"
          }, 
          "name": "__class_type_info [vtable] 80"
        }, 
        {
          "data": {
            "$area": 44, 
            "$symbol": "code"
          }, 
          "name": "call_terminate(bool, _Unwind_Exception*) 44"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "code"
          }, 
          "name": "__aligned_free_with_fallback(void*) 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "code"
          }, 
          "name": "__free_with_fallback(void*) 40"
        }, 
        {
          "data": {
            "$area": 38, 
            "$symbol": "read-only data"
          }, 
          "name": "__vmi_class_type_info [typeinfo name] 38"
        }, 
        {
          "data": {
            "$area": 37, 
            "$symbol": "read-only data"
          }, 
          "name": "__si_class_type_info [typeinfo name] 37"
        }, 
        {
          "data": {
            "$area": 36, 
            "$symbol": "code"
          }, 
          "name": "setOurExceptionClass(_Unwind_Exception*) 36"
        }, 
        {
          "data": {
            "$area": 34, 
            "$symbol": "read-only data"
          }, 
          "name": "__class_type_info [typeinfo name] 34"
        }, 
        {
          "data": {
            "$area": 33, 
            "$symbol": "read-only data"
          }, 
          "name": "__shim_type_info [typeinfo name] 33"
        }, 
        {
          "data": {
            "$area": 32, 
            "$symbol": "code"
          }, 
          "name": "failed_throw(__cxxabiv1::__cxa_exception*) 32"
        }, 
        {
          "data": {
            "$area": 32, 
            "$symbol": "code"
          }, 
          "name": "__isOurExceptionClass(_Unwind_Exception const*) 32"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "__class_type_info [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "__shim_type_info [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "__si_class_type_info [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "__vmi_class_type_info [typeinfo] 24"
        }, 
        {
          "data": {
            "$area": 16, 
            "$dominant_symbol": "code"
          }, 
          "name": "__shim_type_info 16", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~__shim_type_info() 8"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "noop1() const 4"
            }, 
            {
              "data": {
                "$area": 4, 
                "$symbol": "code"
              }, 
              "name": "noop2() const 4"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "__fundamental_type_info 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~__fundamental_type_info() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "__pointer_to_member_type_info 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~__pointer_to_member_type_info() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$symbol": "code"
          }, 
          "name": "__getExceptionClass(_Unwind_Exception const*) 8"
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "__enum_type_info 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~__enum_type_info() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "__pointer_type_info 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~__pointer_type_info() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "__pbase_type_info 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~__pbase_type_info() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "__function_type_info 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~__function_type_info() 8"
            }
          ]
        }, 
        {
          "data": {
            "$area": 8, 
            "$dominant_symbol": "code"
          }, 
          "name": "__array_type_info 8", 
          "children": [
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "~__array_type_info() 8"
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 5168, 
        "$dominant_symbol": "code"
      }, 
      "name": "unsigned int std 5.2k", 
      "children": [
        {
          "data": {
            "$area": 5168, 
            "$dominant_symbol": "code"
          }, 
          "name": "__ndk1 5.2k", 
          "children": [
            {
              "data": {
                "$area": 1172, 
                "$symbol": "code"
              }, 
              "name": "__sort5<filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*> >(utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&) 1.2k"
            }, 
            {
              "data": {
                "$area": 1052, 
                "$symbol": "code"
              }, 
              "name": "__sort3<filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*> >(utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&) 1.1k"
            }, 
            {
              "data": {
                "$area": 884, 
                "$symbol": "code"
              }, 
              "name": "__sort4<filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*> >(utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, utils::Zip2Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>::Iterator<utils::StructureOfArraysBase<utils::Arena<utils::HeapAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked>, filament::math::details::TVec4<float>, filament::math::details::TVec3<float>, utils::EntityInstance<filament::LightManager, false>, unsigned char, filament::math::details::TVec2<float>, filament::FScene::ShadowInfo>*>, float*>, filament::FScene::prepareDynamicLights(filament::CameraInfo const&, utils::ArenaScope<utils::Arena<utils::LinearAllocator, utils::LockingPolicy::NoLock, utils::TrackingPolicy::Untracked> >&, filament::backend::Handle<filament::backend::HwUniformBuffer>)::$_0&) 884"
            }, 
            {
              "data": {
                "$area": 548, 
                "$symbol": "code"
              }, 
              "name": "__sort4<filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_3&, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*>(filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::CacheEntry*, filament::ibl::CubemapIBL::roughnessFilter(utils::JobSystem&, filament::ibl::Cubemap&, std::__ndk1::vector<filament::ibl::Cubemap, std::__ndk1::allocator<filament::ibl::Cubemap> > const&, float, unsigned long, filament::math::details::TVec3<float>, bool, std::__ndk1::function<void (unsigned long, float)>)::$_3&) 548"
            }, 
            {
              "data": {
                "$area": 416, 
                "$symbol": "code"
              }, 
              "name": "__sort5<std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&, filament::RenderPass::Command*>(filament::RenderPass::Command*, filament::RenderPass::Command*, filament::RenderPass::Command*, filament::RenderPass::Command*, filament::RenderPass::Command*, std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&) 416"
            }, 
            {
              "data": {
                "$area": 392, 
                "$symbol": "weak symbol"
              }, 
              "name": "__sort3<std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&, filament::RenderPass::Command*>(filament::RenderPass::Command*, filament::RenderPass::Command*, filament::RenderPass::Command*, std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&) 392"
            }, 
            {
              "data": {
                "$area": 388, 
                "$symbol": "code"
              }, 
              "name": "__sort5<std::__ndk1::__less<std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> > >&, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*>(std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >*, std::__ndk1::__less<std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> >, std::__ndk1::chrono::duration<float, std::__ndk1::ratio<1l, 1l> > >&) 388"
            }, 
            {
              "data": {
                "$area": 316, 
                "$symbol": "weak symbol"
              }, 
              "name": "__sort4<std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&, filament::RenderPass::Command*>(filament::RenderPass::Command*, filament::RenderPass::Command*, filament::RenderPass::Command*, filament::RenderPass::Command*, std::__ndk1::__less<filament::RenderPass::Command, filament::RenderPass::Command>&) 316"
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 3408, 
        "$dominant_symbol": "code"
      }, 
      "name": "unsigned int utils 3.4k", 
      "children": [
        {
          "data": {
            "$area": 3408, 
            "$dominant_symbol": "code"
          }, 
          "name": "StaticString 3.4k", 
          "children": [
            {
              "data": {
                "$area": 440, 
                "$symbol": "code"
              }, 
              "name": "computeHash<37ul>(char const (&) [37ul]) 440"
            }, 
            {
              "data": {
                "$area": 416, 
                "$symbol": "code"
              }, 
              "name": "computeHash<35ul>(char const (&) [35ul]) 416"
            }, 
            {
              "data": {
                "$area": 404, 
                "$symbol": "code"
              }, 
              "name": "computeHash<34ul>(char const (&) [34ul]) 404"
            }, 
            {
              "data": {
                "$area": 392, 
                "$symbol": "code"
              }, 
              "name": "computeHash<33ul>(char const (&) [33ul]) 392"
            }, 
            {
              "data": {
                "$area": 380, 
                "$symbol": "code"
              }, 
              "name": "computeHash<32ul>(char const (&) [32ul]) 380"
            }, 
            {
              "data": {
                "$area": 368, 
                "$symbol": "code"
              }, 
              "name": "computeHash<31ul>(char const (&) [31ul]) 368"
            }, 
            {
              "data": {
                "$area": 356, 
                "$symbol": "code"
              }, 
              "name": "computeHash<30ul>(char const (&) [30ul]) 356"
            }, 
            {
              "data": {
                "$area": 332, 
                "$symbol": "code"
              }, 
              "name": "computeHash<28ul>(char const (&) [28ul]) 332"
            }, 
            {
              "data": {
                "$area": 320, 
                "$symbol": "code"
              }, 
              "name": "computeHash<27ul>(char const (&) [27ul]) 320"
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 3252, 
        "$dominant_symbol": "code"
      }, 
      "name": "filaflat 3.3k", 
      "children": [
        {
          "data": {
            "$area": 1540, 
            "$dominant_symbol": "code"
          }, 
          "name": "MaterialChunk 1.5k", 
          "children": [
            {
              "data": {
                "$area": 544, 
                "$symbol": "code"
              }, 
              "name": "getTextShader(filaflat::Unflattener, filaflat::BlobDictionary const&, filaflat::ShaderBuilder&, unsigned char, unsigned char, unsigned char) 544"
            }, 
            {
              "data": {
                "$area": 360, 
                "$symbol": "code"
              }, 
              "name": "readIndex(filamat::ChunkType) 360"
            }, 
            {
              "data": {
                "$area": 284, 
                "$symbol": "code"
              }, 
              "name": "getSpirvShader(filaflat::BlobDictionary const&, filaflat::ShaderBuilder&, unsigned char, unsigned char, unsigned char) 284"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "code"
              }, 
              "name": "getShader(filaflat::ShaderBuilder&, filaflat::BlobDictionary const&, unsigned char, unsigned char, unsigned char) 184"
            }, 
            {
              "data": {
                "$area": 168, 
                "$symbol": "code"
              }, 
              "name": "MaterialChunk(filaflat::ChunkContainer const&) 168"
            }
          ]
        }, 
        {
          "data": {
            "$area": 760, 
            "$dominant_symbol": "code"
          }, 
          "name": "DictionaryReader 760", 
          "children": [
            {
              "data": {
                "$area": 760, 
                "$symbol": "code"
              }, 
              "name": "unflatten(filaflat::ChunkContainer const&, filamat::ChunkType, filaflat::BlobDictionary&) 760"
            }
          ]
        }, 
        {
          "data": {
            "$area": 360, 
            "$dominant_symbol": "code"
          }, 
          "name": "Unflattener 360", 
          "children": [
            {
              "data": {
                "$area": 220, 
                "$symbol": "code"
              }, 
              "name": "read(utils::CString*) 220"
            }, 
            {
              "data": {
                "$area": 76, 
                "$symbol": "code"
              }, 
              "name": "read(char const**) 76"
            }, 
            {
              "data": {
                "$area": 64, 
                "$symbol": "code"
              }, 
              "name": "read(char const**, unsigned long*) 64"
            }
          ]
        }, 
        {
          "data": {
            "$area": 348, 
            "$dominant_symbol": "code"
          }, 
          "name": "ChunkContainer 348", 
          "children": [
            {
              "data": {
                "$area": 252, 
                "$symbol": "code"
              }, 
              "name": "parseChunk(filaflat::Unflattener&) 252"
            }, 
            {
              "data": {
                "$area": 96, 
                "$symbol": "code"
              }, 
              "name": "parse() 96"
            }
          ]
        }, 
        {
          "data": {
            "$area": 244, 
            "$dominant_symbol": "code"
          }, 
          "name": "ShaderBuilder 244", 
          "children": [
            {
              "data": {
                "$area": 104, 
                "$symbol": "code"
              }, 
              "name": "ShaderBuilder() 104"
            }, 
            {
              "data": {
                "$area": 60, 
                "$symbol": "code"
              }, 
              "name": "append(char const*, unsigned long) 60"
            }, 
            {
              "data": {
                "$area": 56, 
                "$symbol": "code"
              }, 
              "name": "announce(unsigned long) 56"
            }, 
            {
              "data": {
                "$area": 16, 
                "$symbol": "code"
              }, 
              "name": "~ShaderBuilder() 16"
            }, 
            {
              "data": {
                "$area": 8, 
                "$symbol": "code"
              }, 
              "name": "reset() 8"
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 2733, 
        "$dominant_symbol": "data"
      }, 
      "name": "[ungrouped] 2.7k", 
      "children": [
        {
          "data": {
            "$area": 321, 
            "$symbol": "read-only data"
          }, 
          "name": "_ZTSN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_3EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 321"
        }, 
        {
          "data": {
            "$area": 321, 
            "$symbol": "read-only data"
          }, 
          "name": "_ZTSN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_4EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 321"
        }, 
        {
          "data": {
            "$area": 321, 
            "$symbol": "read-only data"
          }, 
          "name": "_ZTSN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_1EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 321"
        }, 
        {
          "data": {
            "$area": 321, 
            "$symbol": "read-only data"
          }, 
          "name": "_ZTSN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_2EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 321"
        }, 
        {
          "data": {
            "$area": 276, 
            "$symbol": "code"
          }, 
          "name": "_GLOBAL__sub_I_Log.cpp 276"
        }, 
        {
          "data": {
            "$area": 260, 
            "$symbol": "read-only data"
          }, 
          "name": "_ZTSNSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEEE 260"
        }, 
        {
          "data": {
            "$area": 201, 
            "$symbol": "read-only data"
          }, 
          "name": "_ZTSZN8filament22make_copyable_functionIZNS_8FTexture23generatePrefilterMipmapERNS_7FEngineEONS_7backend21PixelBufferDescriptorERKNS4_11FaceOffsetsEPKNS_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_ 201"
        }, 
        {
          "data": {
            "$area": 152, 
            "$symbol": "read-only data"
          }, 
          "name": "note_android_ident 152"
        }, 
        {
          "data": {
            "$area": 88, 
            "$symbol": "data"
          }, 
          "name": "_ZTVNSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEEE 88"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "_ZTIN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_4EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "_ZTVN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_2EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "_ZTIN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_1EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "_ZTVN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_3EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "_ZTIN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_2EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "_ZTIN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_3EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "_ZTVN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_1EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 40"
        }, 
        {
          "data": {
            "$area": 40, 
            "$symbol": "data"
          }, 
          "name": "_ZTVN8filament14FrameGraphPassINS_10FrameGraph5EmptyEZNS1_24addTrivialSideEffectPassIZNS_9FRenderer9renderJobERN5utils10ArenaScopeINS5_5ArenaINS5_15LinearAllocatorENS5_13LockingPolicy6NoLockENS5_14TrackingPolicy9UntrackedEEEEERNS_5FViewEE3$_4EEvPKcOT_EUlTyRKNS_23FrameGraphPassResourcesERKSL_RNS_7backend13CommandStreamEE_EE 40"
        }, 
        {
          "data": {
            "$area": 28, 
            "$symbol": "code"
          }, 
          "name": "atexit 28"
        }, 
        {
          "data": {
            "$area": 24, 
            "$symbol": "data"
          }, 
          "name": "_ZTINSt6__ndk110__function6__funcIZN8filament22make_copyable_functionIZNS2_8FTexture23generatePrefilterMipmapERNS2_7FEngineEONS2_7backend21PixelBufferDescriptorERKNS7_11FaceOffsetsEPKNS2_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_NS_9allocatorISN_EEFvvEEE 24"
        }, 
        {
          "data": {
            "$area": 16, 
            "$symbol": "data"
          }, 
          "name": "_ZTIZN8filament22make_copyable_functionIZNS_8FTexture23generatePrefilterMipmapERNS_7FEngineEONS_7backend21PixelBufferDescriptorERKNS4_11FaceOffsetsEPKNS_7Texture16PrefilterOptionsEE3$_0EEDaOT_EUlTyDpOT_E_ 16"
        }, 
        {
          "data": {
            "$area": 12, 
            "$symbol": "code"
          }, 
          "name": "__clang_call_terminate 12"
        }, 
        {
          "data": {
            "$area": 12, 
            "$symbol": "code"
          }, 
          "name": "__atexit_handler_wrapper 12"
        }, 
        {
          "data": {
            "$area": 12, 
            "$symbol": "code"
          }, 
          "name": "__on_dlclose 12"
        }, 
        {
          "data": {
            "$area": 8, 
            "$symbol": "data"
          }, 
          "name": "adds.7607 8"
        }, 
        {
          "data": {
            "$area": 8, 
            "$symbol": "data"
          }, 
          "name": "DW.ref.__gxx_personality_v0 8"
        }, 
        {
          "data": {
            "$area": 8, 
            "$symbol": "data"
          }, 
          "name": "__dso_handle 8"
        }, 
        {
          "data": {
            "$area": 8, 
            "$symbol": "data"
          }, 
          "name": "__dso_handle_const 8"
        }, 
        {
          "data": {
            "$area": 8, 
            "$symbol": "data"
          }, 
          "name": "cause 8"
        }, 
        {
          "data": {
            "$area": 4, 
            "$symbol": "code"
          }, 
          "name": "__emutls_unregister_key 4"
        }, 
        {
          "data": {
            "$area": 4, 
            "$symbol": "code"
          }, 
          "name": "__on_dlclose_late 4"
        }
      ]
    }, 
    {
      "data": {
        "$area": 2360, 
        "$dominant_symbol": "code"
      }, 
      "name": "AutoBuffer 2.4k", 
      "children": [
        {
          "data": {
            "$area": 1456, 
            "$symbol": "code"
          }, 
          "name": "AutoBuffer(_JNIEnv*, _jobject*, int, bool) 1.5k"
        }, 
        {
          "data": {
            "$area": 528, 
            "$symbol": "code"
          }, 
          "name": "~AutoBuffer() 528"
        }, 
        {
          "data": {
            "$area": 376, 
            "$symbol": "code"
          }, 
          "name": "AutoBuffer(AutoBuffer&&) 376"
        }
      ]
    }, 
    {
      "data": {
        "$area": 1420, 
        "$dominant_symbol": "code"
      }, 
      "name": "void* std 1.4k", 
      "children": [
        {
          "data": {
            "$area": 1420, 
            "$dominant_symbol": "code"
          }, 
          "name": "__ndk1 1.4k", 
          "children": [
            {
              "data": {
                "$area": 868, 
                "$symbol": "code"
              }, 
              "name": "__thread_proxy<std::__ndk1::tuple<std::__ndk1::unique_ptr<std::__ndk1::__thread_struct, std::__ndk1::default_delete<std::__ndk1::__thread_struct> >, filament::TimerQueryFence::TimerQueryFence(filament::backend::OpenGLPlatform&)::$_0> >(void*) 868"
            }, 
            {
              "data": {
                "$area": 188, 
                "$symbol": "code"
              }, 
              "name": "__thread_proxy<std::__ndk1::tuple<std::__ndk1::unique_ptr<std::__ndk1::__thread_struct, std::__ndk1::default_delete<std::__ndk1::__thread_struct> >, void (utils::JobSystem::*)(utils::JobSystem::ThreadState*) noexcept, utils::JobSystem*, utils::JobSystem::ThreadState*> >(void*) 188"
            }, 
            {
              "data": {
                "$area": 184, 
                "$symbol": "weak symbol"
              }, 
              "name": "__thread_proxy<std::__ndk1::tuple<std::__ndk1::unique_ptr<std::__ndk1::__thread_struct, std::__ndk1::default_delete<std::__ndk1::__thread_struct> >, int (filament::FEngine::*)(), filament::FEngine*> >(void*) 184"
            }, 
            {
              "data": {
                "$area": 180, 
                "$symbol": "code"
              }, 
              "name": "__thread_proxy<std::__ndk1::tuple<std::__ndk1::unique_ptr<std::__ndk1::__thread_struct, std::__ndk1::default_delete<std::__ndk1::__thread_struct> >, filament::FEngine::createAsync(void (*)(void*, void*), void*, filament::backend::Backend, filament::backend::Platform*, void*)::$_0> >(void*) 180"
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 1236, 
        "$dominant_symbol": "code"
      }, 
      "name": "unsigned long tsl 1.2k", 
      "children": [
        {
          "data": {
            "$area": 1236, 
            "$dominant_symbol": "code"
          }, 
          "name": "detail_robin_hash 1.2k", 
          "children": [
            {
              "data": {
                "$area": 388, 
                "$dominant_symbol": "weak symbol"
              }, 
              "name": "robin_hash<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle>, tsl::robin_map<utils::StaticString, filament::FrameGraphHandle, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::robin_map<utils::StaticString, filament::FrameGraphHandle, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> >::ValueSelect, std::__ndk1::hash<utils::StaticString>, std::__ndk1::equal_to<utils::StaticString>, std::__ndk1::allocator<std::__ndk1::pair<utils::StaticString, filament::FrameGraphHandle> >, false, tsl::rh::power_of_two_growth_policy<2ul> > 388", 
              "children": [
                {
                  "data": {
                    "$area": 388, 
                    "$symbol": "weak symbol"
                  }, 
                  "name": "erase<utils::StaticString>(utils::StaticString const&, unsigned long) 388"
                }
              ]
            }, 
            {
              "data": {
                "$area": 292, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<utils::EntityManager::Listener*, tsl::robin_set<utils::EntityManager::Listener*, std::__ndk1::hash<utils::EntityManager::Listener*>, std::__ndk1::equal_to<utils::EntityManager::Listener*>, std::__ndk1::allocator<utils::EntityManager::Listener*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<utils::EntityManager::Listener*>, std::__ndk1::equal_to<utils::EntityManager::Listener*>, std::__ndk1::allocator<utils::EntityManager::Listener*>, false, tsl::rh::power_of_two_growth_policy<2ul> > 292", 
              "children": [
                {
                  "data": {
                    "$area": 292, 
                    "$symbol": "code"
                  }, 
                  "name": "erase<utils::EntityManager::Listener*>(utils::EntityManager::Listener* const&, unsigned long) 292"
                }
              ]
            }, 
            {
              "data": {
                "$area": 292, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<void*, tsl::robin_set<void*, std::__ndk1::hash<void*>, std::__ndk1::equal_to<void*>, std::__ndk1::allocator<void*>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<void*>, std::__ndk1::equal_to<void*>, std::__ndk1::allocator<void*>, false, tsl::rh::power_of_two_growth_policy<2ul> > 292", 
              "children": [
                {
                  "data": {
                    "$area": 292, 
                    "$symbol": "code"
                  }, 
                  "name": "erase<void*>(void* const&, unsigned long) 292"
                }
              ]
            }, 
            {
              "data": {
                "$area": 264, 
                "$dominant_symbol": "code"
              }, 
              "name": "robin_hash<utils::Entity, tsl::robin_set<utils::Entity, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<utils::Entity>, false, tsl::rh::power_of_two_growth_policy<2ul> >::KeySelect, void, std::__ndk1::hash<utils::Entity>, std::__ndk1::equal_to<utils::Entity>, std::__ndk1::allocator<utils::Entity>, false, tsl::rh::power_of_two_growth_policy<2ul> > 264", 
              "children": [
                {
                  "data": {
                    "$area": 264, 
                    "$symbol": "code"
                  }, 
                  "name": "erase<utils::Entity>(utils::Entity const&, unsigned long) 264"
                }
              ]
            }
          ]
        }
      ]
    }, 
    {
      "data": {
        "$area": 760, 
        "$dominant_symbol": "code"
      }, 
      "name": "_JNIEnv 760", 
      "children": [
        {
          "data": {
            "$area": 112, 
            "$symbol": "code"
          }, 
          "name": "CallLongMethod(_jobject*, _jmethodID*, ...) 112"
        }, 
        {
          "data": {
            "$area": 108, 
            "$symbol": "code"
          }, 
          "name": "CallStaticVoidMethod(_jclass*, _jmethodID*, ...) 108"
        }, 
        {
          "data": {
            "$area": 108, 
            "$symbol": "code"
          }, 
          "name": "CallStaticLongMethod(_jclass*, _jmethodID*, ...) 108"
        }, 
        {
          "data": {
            "$area": 108, 
            "$symbol": "code"
          }, 
          "name": "CallStaticObjectMethod(_jclass*, _jmethodID*, ...) 108"
        }, 
        {
          "data": {
            "$area": 108, 
            "$symbol": "code"
          }, 
          "name": "CallVoidMethod(_jobject*, _jmethodID*, ...) 108"
        }, 
        {
          "data": {
            "$area": 108, 
            "$symbol": "code"
          }, 
          "name": "CallBooleanMethod(_jobject*, _jmethodID*, ...) 108"
        }, 
        {
          "data": {
            "$area": 108, 
            "$symbol": "code"
          }, 
          "name": "CallStaticIntMethod(_jclass*, _jmethodID*, ...) 108"
        }
      ]
    }, 
    {
      "data": {
        "$area": 384, 
        "$dominant_symbol": "code"
      }, 
      "name": "JniBufferCallback 384", 
      "children": [
        {
          "data": {
            "$area": 316, 
            "$symbol": "code"
          }, 
          "name": "make(filament::Engine*, _JNIEnv*, _jobject*, _jobject*, AutoBuffer&&) 316"
        }, 
        {
          "data": {
            "$area": 68, 
            "$symbol": "code"
          }, 
          "name": "invoke(void*, unsigned long, void*) 68"
        }
      ]
    }, 
    {
      "data": {
        "$area": 348, 
        "$dominant_symbol": "code"
      }, 
      "name": "JniCallback 348", 
      "children": [
        {
          "data": {
            "$area": 284, 
            "$symbol": "code"
          }, 
          "name": "make(_JNIEnv*, _jobject*, _jobject*) 284"
        }, 
        {
          "data": {
            "$area": 64, 
            "$symbol": "code"
          }, 
          "name": "invoke(void*) 64"
        }
      ]
    }, 
    {
      "data": {
        "$area": 348, 
        "$dominant_symbol": "code"
      }, 
      "name": "JniImageCallback 348", 
      "children": [
        {
          "data": {
            "$area": 288, 
            "$symbol": "code"
          }, 
          "name": "make(filament::Engine*, _JNIEnv*, _jobject*, _jobject*, long) 288"
        }, 
        {
          "data": {
            "$area": 60, 
            "$symbol": "code"
          }, 
          "name": "invoke(void*, void*) 60"
        }
      ]
    }, 
    {
      "data": {
        "$area": 312, 
        "$dominant_symbol": "code"
      }, 
      "name": "AutoBitmap 312", 
      "children": [
        {
          "data": {
            "$area": 212, 
            "$symbol": "code"
          }, 
          "name": "make(filament::Engine*, _JNIEnv*, _jobject*, _jobject*, _jobject*) 212"
        }, 
        {
          "data": {
            "$area": 100, 
            "$symbol": "code"
          }, 
          "name": "invoke(void*, unsigned long, void*) 100"
        }
      ]
    }, 
    {
      "data": {
        "$area": 104, 
        "$dominant_symbol": "code"
      }, 
      "name": "glext 104", 
      "children": [
        {
          "data": {
            "$area": 104, 
            "$symbol": "code"
          }, 
          "name": "importGLESExtensionsEntryPoints() 104"
        }
      ]
    }
  ]
}
